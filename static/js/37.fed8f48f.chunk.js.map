{"version":3,"sources":["../node_modules/@material-ui/system/esm/style.js","../node_modules/@material-ui/system/esm/compose.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/flat/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/system/esm/palette.js","../node_modules/@material-ui/system/esm/positions.js","components/Json2Html/index.js","pages/indices/index/Mapping.js"],"names":["getPath","obj","path","split","reduce","acc","item","style","options","prop","_options$cssProperty","cssProperty","themeKey","transform","fn","props","propValue","themeMapping","theme","handleBreakpoints","propValueFinal","value","Array","isArray","_defineProperty","propTypes","filterProps","compose","_len","arguments","length","styles","_key","output","merge","concat","tablelvl2","variant","TableHead","React","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","Tablelvl2Context","Provider","_extends","clsx","root","withStyles","display","name","isBuffer","constructor","keyIdentity","key","flatten","target","opts","delimiter","maxDepth","transformKey","step","object","prev","currentDepth","Object","keys","forEach","isarray","safe","type","prototype","toString","call","isbuffer","isobject","newKey","module","exports","unflatten","overwrite","result","getkey","parsedKey","Number","isNaN","indexOf","val","isObject","isEmpty","keyPrefix","recipient","addKeys","map","key1","shift","key2","undefined","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","checkedIcon","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","SwitchBase","capitalize","checked","disabled","fontSize","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","bgcolor","position","zIndex","top","right","bottom","left","Card","styled","MuiDivider","spacing","MuiCard","Typography","MuiTypography","positions","MuiButton","Render","json","validJson","JSON","parse","error","topFields","title","cursor","flatJsonMap","flat","formatKeyFlatJsonMap","replaceKey","replace","sortKey","substring","lastIndexOf","suffix","border","width","cellSpacing","cellPadding","field","index","etc","k","find","m","filter","o","align","join","MappingsJson2html","settings","flatSettingsMap","Fragment","mt","SettingsJson2html","minHeight","useStyles","makeStyles","formControl","minWidth","flexGrow","edit","addIcon","verticalAlign","table","padding","Box","MuiBox","FormCard","overflow","Json2html","stringify","JsonCard","rowsMin","connect","store","indicesReducers","mappings","useState","chk","setChk","handleRadioChange","e","row","aria-label","defaultValue","onChange","control","label"],"mappings":"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","file":"static/js/37.fed8f48f.chunk.js","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce(function (acc, item) {\n    return acc && acc[item] ? acc[item] : null;\n  }, obj);\n}\n\nfunction style(options) {\n  var prop = options.prop,\n      _options$cssProperty = options.cssProperty,\n      cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,\n      themeKey = options.themeKey,\n      transform = options.transform;\n\n  var fn = function fn(props) {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    var propValue = props[prop];\n    var theme = props.theme;\n    var themeMapping = getPath(theme, themeKey) || {};\n\n    var styleFromPropValue = function styleFromPropValue(propValueFinal) {\n      var value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal] || propValueFinal;\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return _defineProperty({}, cssProperty, value);\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? _defineProperty({}, prop, responsivePropType) : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport merge from './merge';\n\nfunction compose() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n\n  var fn = function fn(props) {\n    return styles.reduce(function (acc, style) {\n      var output = style(props);\n\n      if (output) {\n        return merge(acc, output);\n      }\n\n      return acc;\n    }, {});\n  }; // Alternative approach that doesn't yield any performance gain.\n  // const handlers = styles.reduce((acc, style) => {\n  //   style.filterProps.forEach(prop => {\n  //     acc[prop] = style;\n  //   });\n  //   return acc;\n  // }, {});\n  // const fn = props => {\n  //   return Object.keys(props).reduce((acc, prop) => {\n  //     if (handlers[prop]) {\n  //       return merge(acc, handlers[prop](props));\n  //     }\n  //     return acc;\n  //   }, {});\n  // };\n\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce(function (acc, style) {\n    return _extends(acc, style.propTypes);\n  }, {}) : {};\n  fn.filterProps = styles.reduce(function (acc, style) {\n    return acc.concat(style.filterProps);\n  }, []);\n  return fn;\n}\n\nexport default compose;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'thead' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","module.exports = flatten\nflatten.flatten = flatten\nflatten.unflatten = unflatten\n\nfunction isBuffer (obj) {\n  return obj &&\n    obj.constructor &&\n    (typeof obj.constructor.isBuffer === 'function') &&\n    obj.constructor.isBuffer(obj)\n}\n\nfunction keyIdentity (key) {\n  return key\n}\n\nfunction flatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const maxDepth = opts.maxDepth\n  const transformKey = opts.transformKey || keyIdentity\n  const output = {}\n\n  function step (object, prev, currentDepth) {\n    currentDepth = currentDepth || 1\n    Object.keys(object).forEach(function (key) {\n      const value = object[key]\n      const isarray = opts.safe && Array.isArray(value)\n      const type = Object.prototype.toString.call(value)\n      const isbuffer = isBuffer(value)\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      const newKey = prev\n        ? prev + delimiter + transformKey(key)\n        : transformKey(key)\n\n      if (!isarray && !isbuffer && isobject && Object.keys(value).length &&\n        (!opts.maxDepth || currentDepth < maxDepth)) {\n        return step(value, newKey, currentDepth + 1)\n      }\n\n      output[newKey] = value\n    })\n  }\n\n  step(target)\n\n  return output\n}\n\nfunction unflatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const overwrite = opts.overwrite || false\n  const transformKey = opts.transformKey || keyIdentity\n  const result = {}\n\n  const isbuffer = isBuffer(target)\n  if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {\n    return target\n  }\n\n  // safely ensure that the key is\n  // an integer.\n  function getkey (key) {\n    const parsedKey = Number(key)\n\n    return (\n      isNaN(parsedKey) ||\n      key.indexOf('.') !== -1 ||\n      opts.object\n    ) ? key\n      : parsedKey\n  }\n\n  function addKeys (keyPrefix, recipient, target) {\n    return Object.keys(target).reduce(function (result, key) {\n      result[keyPrefix + delimiter + key] = target[key]\n\n      return result\n    }, recipient)\n  }\n\n  function isEmpty (val) {\n    const type = Object.prototype.toString.call(val)\n    const isArray = type === '[object Array]'\n    const isObject = type === '[object Object]'\n\n    if (!val) {\n      return true\n    } else if (isArray) {\n      return !val.length\n    } else if (isObject) {\n      return !Object.keys(val).length\n    }\n  }\n\n  target = Object.keys(target).reduce(function (result, key) {\n    const type = Object.prototype.toString.call(target[key])\n    const isObject = (type === '[object Object]' || type === '[object Array]')\n    if (!isObject || isEmpty(target[key])) {\n      result[key] = target[key]\n      return result\n    } else {\n      return addKeys(\n        key,\n        result,\n        flatten(target[key], opts)\n      )\n    }\n  }, {})\n\n  Object.keys(target).forEach(function (key) {\n    const split = key.split(delimiter).map(transformKey)\n    let key1 = getkey(split.shift())\n    let key2 = getkey(split[0])\n    let recipient = result\n\n    while (key2 !== undefined) {\n      if (key1 === '__proto__') {\n        return\n      }\n\n      const type = Object.prototype.toString.call(recipient[key1])\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      // do not write over falsey, non-undefined values if overwrite is false\n      if (!overwrite && !isobject && typeof recipient[key1] !== 'undefined') {\n        return\n      }\n\n      if ((overwrite && !isobject) || (!overwrite && recipient[key1] == null)) {\n        recipient[key1] = (\n          typeof key2 === 'number' &&\n          !opts.object ? [] : {}\n        )\n      }\n\n      recipient = recipient[key1]\n      if (split.length > 0) {\n        key1 = getkey(split.shift())\n        key2 = getkey(split[0])\n      }\n    }\n\n    // unflatten again for 'messy objects'\n    recipient[key1] = unflatten(target[key], opts)\n  })\n\n  return result\n}\n","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import style from './style';\nimport compose from './compose';\nexport var color = style({\n  prop: 'color',\n  themeKey: 'palette'\n});\nexport var bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette'\n});\nvar palette = compose(color, bgcolor);\nexport default palette;","import style from './style';\nimport compose from './compose';\nexport var position = style({\n  prop: 'position'\n});\nexport var zIndex = style({\n  prop: 'zIndex',\n  themeKey: 'zIndex'\n});\nexport var top = style({\n  prop: 'top'\n});\nexport var right = style({\n  prop: 'right'\n});\nexport var bottom = style({\n  prop: 'bottom'\n});\nexport var left = style({\n  prop: 'left'\n});\nexport default compose(position, zIndex, top, right, bottom, left);","import React from \"react\";\r\nimport {\r\n    Box,\r\n    Button as MuiButton,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Checkbox,\r\n    Divider as MuiDivider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\nimport flat from \"flat\";\r\nimport styled from \"styled-components\";\r\nimport {palette, positions, spacing} from \"@material-ui/system\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Card = styled(MuiCard)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing, positions);\r\nconst Button = styled(MuiButton)(spacing, positions, palette);\r\n\r\nfunction SettingsJson2html(settings) {\r\n    if (!settings) {\r\n        return null\r\n    }\r\n\r\n    const flatSettingsMap = flat(settings['settings'] ? settings['settings'] : settings)\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant={\"h5\"} mt={5}>\r\n                        주요항목\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>샤드 갯수</TableCell>\r\n                                <TableCell>레플리카 갯수</TableCell>\r\n                                <TableCell>리프레쉬 간격</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>{(((settings['settings']||{})['index']||{})['number_of_shards']|| '-')}</TableCell>\r\n                                <TableCell>{(((settings['settings']||{})['index']||{})['number_of_replicas']|| '-')}</TableCell>\r\n                                <TableCell>{(((settings['defaults']||{})['index']||{})['refresh_interval']|| '-')}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <br/>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant={\"h5\"} mt={5}>\r\n                        기타항목\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>키</TableCell>\r\n                                <TableCell>값</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                Object.keys(flatSettingsMap||{}).map(key => {\r\n                                    return (\r\n                                        <TableRow key={key}>\r\n                                            <TableCell>{key}</TableCell>\r\n                                            <TableCell>{flatSettingsMap[key]||''}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </CardContent>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction MappingsJson2html(json) {\r\n    const topFields = [\r\n        {title: \"타입\", key: \"type\", component: (val) => {return val}},\r\n        {title: \"색인\", key: \"enabled\", component: (val) => {return <Checkbox style={{cursor: \"default\"}} checked={val||true}/>}},\r\n        {title: \"분석기\", key: \"analyzer\", component: (val) => {return val}},\r\n        {title: \"copy_to\", key: \"copy_to\", component: (val) => {return val}},\r\n        {title: \"ignore_above\", key: \"ignore_above\", component: (val) => {return val}},\r\n        {title: \"null_value\", key: \"null_value\", component: (val) => {return val}},\r\n        {title: \"doc_values\", key: \"doc_values\", component: (val) => {return val}},\r\n        {title: \"similarity\", key: \"similarity\", component: (val) => {return val||\"BM25\"}},\r\n        {title: \"term_vector\", key: \"term_vector\", component: (val) => {return val}},\r\n        {title: \"store\", key: \"store\", component: (val) => {return <Checkbox style={{cursor: \"default\"}} checked={val||true}/>}}\r\n    ]\r\n\r\n    const flatJsonMap = flat(json['properties'] ? json['properties'] : json)\r\n\r\n    let formatKeyFlatJsonMap = {}\r\n    Object.keys(flatJsonMap).forEach(key => {\r\n        const replaceKey = key.replace(/\\.properties/gi, \"\")\r\n\r\n        const sortKey = replaceKey.substring(0, replaceKey.lastIndexOf(\".\"))\r\n        const suffix = replaceKey.substring(replaceKey.lastIndexOf(\".\") + 1)\r\n        if (!formatKeyFlatJsonMap[sortKey]) {\r\n            formatKeyFlatJsonMap[sortKey] = {}\r\n        }\r\n        formatKeyFlatJsonMap[sortKey][suffix] = flatJsonMap[key]\r\n    })\r\n\r\n    return (\r\n        <table border={1} width={\"100%\"} cellSpacing={0} cellPadding={8}>\r\n            <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>이름</th>\r\n                {\r\n                    topFields.map(field => <th key={field['title']}>{field['title']}</th>)\r\n                }\r\n                <th>기타설정</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                Object.keys(formatKeyFlatJsonMap).map((key, index) => {\r\n                    const obj = formatKeyFlatJsonMap[key]\r\n\r\n                    const etc = Object.keys(obj).map(k => {\r\n                        const o = topFields.find(m => m['key'] === k)\r\n                        return o ? null : k + \": \" + obj[k]\r\n                    }).filter(o => o)\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td align={\"center\"}>{index + 1}</td>\r\n                            <td>{key}</td>\r\n                            {\r\n                                topFields.map(field => <td key={field['title']} align={\"center\"}>{field['component'](obj[field['key']])}</td>)\r\n                            }\r\n                            <td>\r\n                                {etc.join(\", \")}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nfunction Render({json, type}) {\r\n    let validJson = json\r\n    try {\r\n        if (typeof json === 'string') {\r\n            validJson = JSON.parse(json)\r\n        }\r\n    } catch (error) {\r\n        // console.warn(\"parsing error\", typeof json)\r\n    }\r\n\r\n    if (validJson && type === \"mappings\") {\r\n        return MappingsJson2html(validJson)\r\n    } else if (validJson && type === \"settings\") {\r\n        return SettingsJson2html(validJson)\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Box style={{minHeight: \"150px\"}}>\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Render\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport styled from \"styled-components\";\r\nimport {flatten} from \"flat\"\r\nimport Json2html from \"~/components/Json2Html\"\r\n\r\nimport {\r\n    Box as MuiBox,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    TextareaAutosize\r\n} from \"@material-ui/core\";\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {positions, spacing} from \"@material-ui/system\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    edit: {\r\n        width: '100%'\r\n    },\r\n    addIcon: {\r\n        verticalAlign: \"top\"\r\n    },\r\n    table: {\r\n        padding: '10px'\r\n    },\r\n}));\r\n\r\nconst Box = styled(MuiBox)(spacing, positions);\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\n// const fieldsKeyword = \"fields.\"\r\n// const propertiesKeyword = \"properties.\"\r\n// function parsing(object) {\r\n//     let group1 = {}\r\n//     Object.keys(object).forEach(fullKey => {\r\n//         function getKey(fullKey) {\r\n//             const fieldKey = fullKey.substring(0, fullKey.indexOf(\".\"))\r\n//             const childFullKey = fullKey.substring(fieldKey.length + 1)\r\n//             let tmpGroupKey = \"\"\r\n//             let tmpKey = \"\"\r\n//             if (childFullKey.startsWith(fieldsKeyword)) {\r\n//                 // fields.\r\n//                 let childFieldKey1 = childFullKey.substring(fieldsKeyword.length)\r\n//                 childFieldKey1 = childFieldKey1.substring(0, childFieldKey1.indexOf(\".\"))\r\n//                 if (!group1[`${fieldKey}.${childFieldKey1}`]) {\r\n//                     group1[`${fieldKey}.${childFieldKey1}`] = {}\r\n//                 }\r\n//                 let childFieldKey2 = childFullKey.substring(fieldsKeyword.length + childFieldKey1.length + 1)\r\n//                 tmpGroupKey = `${fieldKey}.${childFieldKey1}`\r\n//                 tmpKey = childFieldKey2\r\n//             } else if (childFullKey.startsWith(propertiesKeyword)) {\r\n//                 // properties.\r\n//                 let childFieldKey1 = childFullKey.substring(propertiesKeyword.length)\r\n//                 childFieldKey1 = childFieldKey1.substring(0, childFieldKey1.indexOf(\".\"))\r\n//                 if (!group1[`${fieldKey}.${childFieldKey1}`]) {\r\n//                     group1[`${fieldKey}.${childFieldKey1}`] = {}\r\n//                 }\r\n//                 let childFieldKey2 = childFullKey.substring(propertiesKeyword.length + childFieldKey1.length + 1)\r\n//                 tmpGroupKey = `${fieldKey}.${childFieldKey1}`\r\n//                 tmpKey = childFieldKey2\r\n//             } else {\r\n//                 if (!group1[fieldKey]) {\r\n//                     group1[fieldKey] = {}\r\n//                 }\r\n//                 tmpGroupKey = fieldKey\r\n//                 tmpKey = childFullKey\r\n//             }\r\n//             return { tmpGroupKey, tmpKey }\r\n//         }\r\n//\r\n//         let result = getKey(fullKey)\r\n//         if (\r\n//             [\"type\", \"enabled\", \"analyzer\", \"copy_to.0\",\r\n//                 \"ignore_above\", \"null_value\", \"doc_value\",\r\n//                 \"similarity\", \"term_vector\", \"store\"\r\n//             ].includes(result['tmpKey'])) {\r\n//             group1[result['tmpGroupKey']][result['tmpKey']] = object[fullKey]\r\n//         } else {\r\n//             let tmpKey = \"\" + result['tmpKey']\r\n//             let tmpGroupKey = \"\" + result['tmpGroupKey']\r\n//             while (true) {\r\n//                 if (tmpKey.startsWith(\"fields\")) {\r\n//                     let tmpResult = getKey(tmpKey.substring(fieldsKeyword.length))\r\n//                     console.log(tmpGroupKey + \".\" + tmpResult['tmpGroupKey'])\r\n//                     if (group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']] === undefined) {\r\n//                         group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']] = {}\r\n//                     }\r\n//                     group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']][tmpResult['tmpKey']] = object[fullKey]\r\n//                     tmpKey = \"\" + tmpResult['tmpKey']\r\n//                     tmpGroupKey = \"\" + tmpResult['tmpGroupKey']\r\n//                 } else if (tmpKey.startsWith(\"properties\")) {\r\n//                     let tmpResult = getKey(tmpKey.substring(propertiesKeyword.length))\r\n//                     if (group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']] === undefined) {\r\n//                         group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']] = {}\r\n//                     }\r\n//                     group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']][tmpResult['tmpKey']] = object[fullKey]\r\n//                     tmpKey = \"\" + tmpResult['tmpKey']\r\n//                     tmpGroupKey = \"\" + tmpResult['tmpGroupKey']\r\n//                 } else {\r\n//                     break\r\n//                 }\r\n//             }\r\n//         }\r\n//     })\r\n//     return group1\r\n// }\r\n\r\n\r\nfunction FormCard({json}) {\r\n    // let dataMap = {}\r\n    // const flatMap = flatten(testJson['properties'] ? testJson['properties'] : testJson)\r\n    // if (json) {\r\n    //     dataMap = parsing(flatten(json['properties'] ? json['properties'] : json))\r\n    // }\r\n    // console.log(json, typeof json)\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardContent m={0}>\r\n                    <Box style={{overflow: \"auto\", minWidth: \"700px\"}}>\r\n                        {Json2html({json: JSON.stringify(json), type: \"mappings\"})}\r\n                    </Box>\r\n\r\n\r\n                    {/*<Box style={{overflow: \"auto\"}}>*/}\r\n                    {/*    <table cellPadding=\"0\" cellSpacing=\"0\"*/}\r\n                    {/*           style={{width: \"100%\", textAlign: \"center\", whiteSpace: \"nowrap\"}}>*/}\r\n                    {/*        <thead>*/}\r\n                    {/*        <tr>*/}\r\n                    {/*            <th style={{height: \"50px\", width: \"50px\", border: \"1px solid silver\"}}>#</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>이름</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>타입</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>색인</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>분석기</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>copy_to</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>ignore_above</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>null_value</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>doc_values</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>similarity</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>term_vector</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>저장</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>기타</th>*/}\r\n                    {/*        </tr>*/}\r\n                    {/*        </thead>*/}\r\n                    {/*        <tbody>*/}\r\n                    {/*        {*/}\r\n                    {/*            Object.keys(dataMap).map((key, index) => {*/}\r\n                    {/*                let tmpObject = dataMap[key]*/}\r\n                    {/*                const type = tmpObject['type'] || \"\"*/}\r\n                    {/*                const enabled = tmpObject['enabled'] === undefined ? true : tmpObject['enabled']*/}\r\n                    {/*                const analyzer = tmpObject['analyzer'] || type === \"text\" ? \"standard\" : \"\"*/}\r\n                    {/*                const copyTo = tmpObject['copy_to.0'] || \"\"*/}\r\n                    {/*                const ignoreAbove = tmpObject['ignore_above'] || \"\"*/}\r\n                    {/*                const nullValue = tmpObject['null_value'] || \"\"*/}\r\n                    {/*                const docValue = tmpObject['doc_value'] === undefined ? true : tmpObject['doc_value']*/}\r\n                    {/*                const similarity = tmpObject['similarity'] || \"BM25\"*/}\r\n                    {/*                const termVector = tmpObject['term_vector'] || \"\"*/}\r\n                    {/*                const store = tmpObject['store'] === undefined ? true : tmpObject['store']*/}\r\n                    {/*                const etc = tmpObject['etc'] || \"\"*/}\r\n\r\n                    {/*                return (*/}\r\n                    {/*                    <tr key={index}>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{index + 1}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{key}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{type}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}><Checkbox*/}\r\n                    {/*                            style={{cursor: \"default\"}} checked={enabled}/></td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{analyzer}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{copyTo}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{ignoreAbove}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{nullValue}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{docValue}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{similarity}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{termVector}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}><Checkbox*/}\r\n                    {/*                            style={{cursor: \"default\"}} checked={store}/></td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{etc}</td>*/}\r\n                    {/*                    </tr>*/}\r\n                    {/*                )*/}\r\n                    {/*            })*/}\r\n                    {/*        }*/}\r\n                    {/*        </tbody>*/}\r\n                    {/*    </table>*/}\r\n                    {/*</Box>*/}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction JsonCard({json}) {\r\n    const classes = useStyles();\r\n\r\n    return (<div>\r\n        <Card>\r\n            <CardContent>\r\n                <Box>\r\n                    <TextareaAutosize rowsMin={50}\r\n                                      className={classes.edit}\r\n                                      disabled\r\n                                      value={JSON.stringify(json, null, 4)}\r\n                    />\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    </div>)\r\n}\r\n\r\nfunction Mapping({mappings}) {\r\n    const classes = useStyles();\r\n    const [chk, setChk] = React.useState('form');\r\n\r\n    function handleRadioChange(e) {\r\n        setChk(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n                    <FormControlLabel value=\"form\" checked={chk === \"form\"} onChange={handleRadioChange}\r\n                                      control={<Radio color=\"primary\"/>} label=\"폼\"/>\r\n                    <FormControlLabel value=\"json\" checked={chk === \"json\"} onChange={handleRadioChange}\r\n                                      control={<Radio color=\"primary\"/>} label=\"json\"/>\r\n                </RadioGroup>\r\n            </FormControl>\r\n\r\n            <Box mt={2}>\r\n                {\r\n                    chk === \"form\" ?\r\n                        <FormCard json={mappings}/>\r\n                        :\r\n                        <JsonCard json={mappings}/>\r\n                }\r\n            </Box>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({...store.indicesReducers}))(Mapping);\r\n"],"sourceRoot":""}