{"version":3,"sources":["pages/indices/pipeline/TestPipeline.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","redux/actions/pipelineActions.js"],"names":["useStyles","makeStyles","theme","formControl","minWidth","aceEditorTemplate","connect","store","authUser","dsearchReducers","pipelineList","pipelineReducers","pipeline","result","dispatch","classes","aceEditor","useRef","useState","checked","setChecked","progress","setProgress","setResult","snackbarFlag","setSnackbarFlag","handleTest","length","JSON","stringify","current","editor","getValue","str","parse","e","isJson","getPipelineDetail","then","payload","catch","error","getPipeline","useEffect","setPipelineList","Fragment","container","item","xs","md","lg","display","alignItems","justifyContent","mx","mb","className","id","labelId","value","onChange","event","setPipelineAction","target","undefined","Object","keys","sort","map","p","i","key","control","name","label","style","border","ref","mode","fontSize","height","tabSize","defaultValue","width","setOptions","useWorker","align","mt","fullWidth","variant","color","onClick","overflow","fontFamily","open","autoHideDuration","onClose","elevation","severity","SwitchBase","React","props","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","disabled","icon","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","type","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","input","newChecked","withStyles","padding","cursor","position","opacity","top","left","margin","zIndex","stylesOrCreator","options","arguments","makeStylesWithoutDefault","defaultTheme","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","FormControlLabel","_props$labelPlacement","labelPlacement","controlProps","forEach","Typography","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","client","Client","SET_PIPELINE","jsonData","call","uri","method","headers","data","response","SET_PIPELINE_RESULT","SET_PIPELINE_LIST","deletePipeline","DELETE_PIPELINE","addPipeline","ADD_PIPELINE","editPipeline"],"mappings":"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","file":"static/js/42.83fe8f76.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Box, CircularProgress,\r\n    Card,\r\n    CardContent,\r\n    Button,Hidden,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell, Link,\r\n    TableBody, Grid,\r\n    Checkbox, Snackbar,FormControlLabel,\r\n    FormControl, InputLabel, MenuItem, Select, Typography, TextField\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport { setPipelineAction, setPipelineList, getPipeline, getPipelineDetail } from '@actions/pipelineActions'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250\r\n    }\r\n}));\r\n\r\nconst aceEditorTemplate = {\r\n    \"docs\": [\r\n      {\r\n        \"_source\": {\r\n          \"field1\": \"<h1>hello world</h1>\",\r\n          \"field2\": \"<h2>hello world</h2>\",\r\n          \"field3\": \"<h3>hello world</h3>\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\nfunction TestPipeline({ dispatch, pipeline, pipelineList}) {\r\n    const classes = useStyles()\r\n    const aceEditor = useRef(aceEditorTemplate);\r\n    const [checked, setChecked] = useState(false);\r\n    const [progress, setProgress] = useState(false);\r\n    const [result, setResult] = useState({});\r\n    const [snackbarFlag, setSnackbarFlag] = useState(false)\r\n\r\n    const handleChange = (event) => {\r\n        dispatch(setPipelineAction(event.target.value))\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setPipelineList())\r\n    }, [])\r\n\r\n    function isJson(str) {\r\n        try {\r\n            let json = JSON.parse(str);\r\n            return (typeof json === 'object');\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function handleTest(){\r\n        if( pipeline.length == 0 ){\r\n            setSnackbarFlag(true)\r\n            return;\r\n        }\r\n\r\n        if( JSON.stringify(aceEditor.current.editor.getValue()).length > 0 && isJson(aceEditor.current.editor.getValue())){\r\n            setProgress(true)\r\n            if( checked ){\r\n                dispatch(getPipelineDetail(pipeline, aceEditor.current.editor.getValue()))\r\n                .then((result) => {\r\n                    setProgress(false)\r\n                    setResult(result.payload);\r\n                })\r\n                .catch((error) => {\r\n                    setProgress(false)\r\n                })\r\n            }else{\r\n                dispatch(getPipeline(pipeline, aceEditor.current.editor.getValue())) \r\n                .then((result) => {\r\n                    setProgress(false)\r\n                    setResult(result.payload);\r\n                })\r\n                .catch((error) => {\r\n                    setProgress(false)\r\n                })\r\n            }\r\n        } else {\r\n            setSnackbarFlag(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <br />\r\n            <Card>\r\n                <CardContent>\r\n                    <Box>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={12} lg={5}>\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mx={3} mb={2}>\r\n                                    <FormControl className={classes.formControl} >\r\n                                        <InputLabel id=\"pipeline-select\">파이프라인</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"pipeline-select\"\r\n                                            id=\"pipeline-select\"\r\n                                            value={pipeline}\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            {\r\n                                                pipelineList == null || pipelineList == undefined || Object.keys(pipelineList).length == 0 ?\r\n                                                    <></>\r\n                                                    : Object.keys(pipelineList).sort().map((p, i) => (<MenuItem key={i} value={p}>{p}</MenuItem>))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox checked={checked} onChange={() => {setChecked(!checked)}} name=\"자세히\" />}\r\n                                        label=\"자세히\"\r\n                                    />\r\n                                </Box>\r\n                                <Box mx={3} style={{ border: \"1px solid silver\" }}>\r\n                                    <AceEditor\r\n                                        ref={aceEditor}\r\n                                        id=\"aceEditor\"\r\n                                        mode=\"json\"\r\n                                        theme=\"kuroir\"\r\n                                        fontSize=\"15px\"\r\n                                        height={\"400px\"}\r\n                                        tabSize={2}\r\n                                        defaultValue={JSON.stringify(aceEditorTemplate, null, 2) }\r\n                                        // placeholder={JSON.stringify(aceEditorPlaceHolder, null, 2) }\r\n                                        width=\"100%\"\r\n                                        setOptions={{ useWorker: false }}\r\n                                    />\r\n                                </Box>\r\n                                <Box align=\"right\" mx={3} mt={3} align={\"center\"}>\r\n                                    {progress? <CircularProgress /> : <Button fullWidth variant=\"outlined\" color=\"primary\" onClick={() => handleTest()}> 테스트 </Button>}\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12} lg={7}>\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mx={3} mb={8}>\r\n                                    <Typography color={\"textPrimary\"} variant=\"h6\" >파이프라인 테스트 결과</Typography>\r\n                                </Box>\r\n                                <Box style={{ overflow: \"scroll\", border: \"1px solid silver\" }} mx={3} id=\"move\">\r\n                                    <pre style={{height:\"400px\", width:\"100%\", fontFamily: \"godic\", fontSize:\"15px\"}}>\r\n                                        {JSON.stringify(result).length === 2 ? \"입력한 내용이 없습니다.\" : JSON.stringify(result,null,2)}\r\n                                    </pre>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Snackbar open={snackbarFlag} autoHideDuration={3000} onClose={() => { setSnackbarFlag(false); }}>\r\n                        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\"> {\"인덱스를 선택하였는지 혹은 json 을 제대로 입력하였는지 확인해주세요\"} </MuiAlert> \r\n                    </Snackbar>\r\n                </CardContent>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    pipelineList: store.pipelineReducers.pipelineList,\r\n    pipeline: store.pipelineReducers.pipeline,\r\n    result: store.pipelineReducers.result\r\n}))(TestPipeline)","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import {SET_PIPELINE_LIST,SET_PIPELINE_RESULT, SET_PIPELINE, DELETE_PIPELINE, ADD_PIPELINE} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setPipelineAction = (pipeline) => dispatch => dispatch({type: SET_PIPELINE, payload: pipeline})\r\n\r\nexport const getPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"POST\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: SET_PIPELINE_RESULT, payload: response.data}))\r\n\r\nexport const getPipelineDetail = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item + \"/detail\",\r\n    method: \"POST\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: SET_PIPELINE_RESULT, payload: response.data}))\r\n\r\nexport const setPipelineList = () => dispatch => client.call({\r\n    uri: \"/pipeline/list\",\r\n    method: \"GET\"\r\n}).then(response => dispatch({type: SET_PIPELINE_LIST, payload: response.data}))\r\n\r\nexport const deletePipeline = (item) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"DELETE\"\r\n}).then(response => dispatch({type: DELETE_PIPELINE, payload: response.data}))\r\n\r\nexport const addPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"PUT\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: ADD_PIPELINE, payload: response.data}))\r\n\r\nexport const editPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"PUT\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: ADD_PIPELINE, payload: response.data}))\r\n\r\n"],"sourceRoot":""}