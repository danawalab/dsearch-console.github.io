{"version":3,"sources":["pages/indices/collection/index.js","redux/actions/indexTemplateActions.js","redux/actions/collectionActions.js"],"names":["Divider","styled","MuiDivider","spacing","positions","Typography","MuiTypography","Box","MuiBox","Button","MuiButton","Grid","MuiGrid","useStyles","makeStyles","theme","formControl","minWidth","root","flexGrow","width","edit","link","cursor","fab","margin","absolute","position","bottom","right","fields","id","label","sorting","connect","store","authUser","dsearchReducers","collectionReducers","indexTemplateReducers","dispatch","indexSuffixA","indexSuffixB","collectionList","catIndexTemplateList","history","useHistory","classes","useState","openAddModal","setOpenAddModal","createName","setCreateName","createBaseId","setCreateBaseId","applyIndexTemplate","setApplyIndexTemplate","createNameError","setCreateNameError","createBaseIdError","setCreateBaseIdError","modalMessage","setModalMessage","process","setProcess","addBtnDisabled","setAddBtnDisabled","orderBy","setOrderBy","order","setOrder","toggleOpenAddModal","moveDetail","push","moveIndex","indexId","undefined","convertHumanReadableCount","docSize","size","length","count","Math","ceil","newSize","i","unshift","slice","join","useEffect","setCollectionIndexSuffix","setIndexTemplatesAction","setCollectionList","setCatIndexTemplateList","viewCollectionList","sort","a","b","map","c","no","Fragment","title","variant","gutterBottom","display","my","align","role","index","className","onClick","color","component","Paper","table","aria-label","field","key","active","direction","event","isAsc","collection","num","view_cron","split","forEach","element","name","baseId","indexA","indexB","indexAAlias","Object","keys","find","alias","isActiveA","indexBAlias","isActiveB","style","open","fullWidth","onClose","container","item","xs","mt","autoFocus","value","onChange","target","placeholder","error","inValid","test","startsWith","tmpMatched","catIndexTemplate","patternList","substring","pattern","re","RegExp","replace","match","index_patterns","matched","trim","textAlign","addCollectionList","refresh_interval","replicas","then","response","setTimeout","catch","console","log","disabled","client","Client","call","uri","type","SET_INDEX_TEMPLATES","payload","data","filter","template","addIndexTemplateAction","settings","mappings","method","deleteIndexTemplateAction","setIndexTemplateAction","SET_INDEX_TEMPLATE","setIndexTemplateCommentsAction","hits","SET_COMMENTS","list","addCommentsAction","updatedComment","SET_COLLECTION_LIST","params","action","SET_COLLECTION_INDEX_SUFFIX","setCollection","SET_COLLECTION","deleteCollectionAction","editCollectionSourceAction","editCollectionScheduleAction","setIndexHistoryTypeList","from","pretty","filter_path","SET_COLLECTION_INDEX_HISTORY_LIST","setIndexHistoryList","deleteIndexHistoryList","time","SET_CAT_INDEX_TEMPLATE_LIST","setCollectionJob","SET_COLLECTION_JOB","editCollectionAction","editCollectionAliasAction","actions"],"mappings":"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","file":"static/js/54.2d77cb20.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n    Box as MuiBox,\r\n    Button as MuiButton,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider as MuiDivider,\r\n    Grid as MuiGrid,\r\n    Link,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TableSortLabel,\r\n    TextField,\r\n    Menu,\r\n    MenuItem,\r\n    FormControl,\r\n    LinearProgress,\r\n    Typography as MuiTypography,\r\n} from \"@material-ui/core\";\r\nimport { ArrowDropDown } from \"@material-ui/icons\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { positions, spacing } from \"@material-ui/system\";\r\nimport {\r\n    addCollectionList,\r\n    setCatIndexTemplateList,\r\n    setCollectionIndexSuffix,\r\n    setCollectionList,\r\n} from \"../../../redux/actions/collectionActions\";\r\nimport { setIndexTemplatesAction } from \"../../../redux/actions/indexTemplateActions\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing, positions);\r\nconst Typography = styled(MuiTypography)(spacing, positions);\r\nconst Box = styled(MuiBox)(spacing, positions);\r\nconst Button = styled(MuiButton)(spacing, positions);\r\nconst Grid = styled(MuiGrid)(spacing, positions);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    edit: {\r\n        width: '100%'\r\n    },\r\n    link: {\r\n        cursor: \"pointer\"\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    absolute: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst fields = [\r\n    { id: \"no\", label: \"#\", sorting: true },\r\n    { id: \"name\", label: \"이름\", sorting: true },\r\n    { id: \"id\", label: \"아이디\", sorting: true },\r\n    { id: \"index\", label: \"선택 인덱스\", sorting: true },\r\n    { id: \"shard\", label: \"샤드\", sorting: true },\r\n    { id: \"docCount\", label: \"문서 수\", sorting: true },\r\n    { id: \"size\", label: \"용량\", sorting: true },\r\n    { id: \"autoRun\", label: \"자동시작\", sorting: true },\r\n]\r\n\r\nfunction Collection({ dispatch, authUser, indexSuffixA, indexSuffixB, collectionList, catIndexTemplateList }) {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [openAddModal, setOpenAddModal] = useState(false)\r\n    const [createName, setCreateName] = useState(\"\")\r\n    const [createBaseId, setCreateBaseId] = useState(\"\")\r\n\r\n\r\n    const [applyIndexTemplate, setApplyIndexTemplate] = useState(\"\")\r\n    // const [applyIndexTemplates, setApplyIndexTemplates] = useState([])\r\n    const [createNameError, setCreateNameError] = useState(false)\r\n    const [createBaseIdError, setCreateBaseIdError] = useState(false)\r\n    const [modalMessage, setModalMessage] = useState(null)\r\n    const [process, setProcess] = useState(false)\r\n    const [addBtnDisabled, setAddBtnDisabled] = useState(true)\r\n\r\n    const [orderBy, setOrderBy] = useState(\"\")\r\n    const [order, setOrder] = useState(\"asc\")\r\n\r\n    useEffect(() => {\r\n        dispatch(setCollectionIndexSuffix())\r\n        dispatch(setIndexTemplatesAction())\r\n        dispatch(setCollectionList())\r\n        dispatch(setCatIndexTemplateList())\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    function toggleOpenAddModal() {\r\n        setAddBtnDisabled(true)\r\n        setProcess(false)\r\n        setModalMessage(null)\r\n        setCreateNameError(false)\r\n        setCreateBaseIdError(false)\r\n        // setApplyIndexTemplates([])\r\n        setApplyIndexTemplate(\"\")\r\n        setCreateName(\"\")\r\n        setCreateBaseId(\"\")\r\n        setOpenAddModal(!openAddModal)\r\n    }\r\n\r\n    function moveDetail(id) {\r\n        history.push(`./indices-collections/${id}`)\r\n    }\r\n    function moveIndex(indexId) {\r\n        if (indexId === undefined || indexId === null || indexId === \"\") {\r\n            return false\r\n        }\r\n        history.push(`./indices/${indexId}`)\r\n    }\r\n\r\n    function handleChangeBaseId(event) {\r\n        setCreateBaseIdError(false)\r\n        setCreateBaseId(event.target.value)\r\n        let inValid = false\r\n        if (event.target.value.length > 1 && (!/^[a-z]+[a-z0-9-_]/g.test(event.target.value))) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        } else if (event.target.value.length === 1 && /[0-9]/g.test(event.target.value)) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        } else if (event.target.value.startsWith(\".\")) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        } else if (/[A-Z]/g.test(event.target.value)) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        } else if (/[ㄱ-ㅎ가-힣]/g.test(event.target.value)) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        }\r\n\r\n        if (event.target.value !== \"\") {\r\n\r\n            let tmpMatched = []\r\n            catIndexTemplateList.forEach(catIndexTemplate => {\r\n                let patternList = catIndexTemplate['index_patterns']\r\n                patternList = patternList.substring(1, patternList.length - 1).split(\", \")\r\n                patternList.forEach(pattern => {\r\n                    const re = new RegExp(pattern.replace(/\\*/gi, \"\\\\S*\"), 'gi')\r\n                    if (event.target.value.match(re) !== null || (event.target.value + indexSuffixA) === pattern || (event.target.value + indexSuffixB) === pattern) {\r\n                        tmpMatched.push({\r\n                            ...catIndexTemplate,\r\n                            index_patterns: patternList\r\n                        })\r\n                        return false\r\n                    }\r\n                })\r\n            })\r\n            if (!tmpMatched.find(matched => matched['name'] === (event.target.value + indexSuffixA))) {\r\n                tmpMatched.push({ name: event.target.value + indexSuffixA, index_patterns: [event.target.value + indexSuffixA] })\r\n            }\r\n            if (!tmpMatched.find(matched => matched['name'] === event.target.value + indexSuffixB)) {\r\n                tmpMatched.push({ name: event.target.value + indexSuffixA, index_patterns: [event.target.value + indexSuffixB] })\r\n            }\r\n\r\n            // console.log(tmpMatched)\r\n            setApplyIndexTemplate(event.target.value)\r\n            // setApplyIndexTemplates(tmpMatched.map(matched => `${matched['name']} (${matched['index_patterns'].join(',')})`))\r\n            // setApplyIndexTemplates(tmpMatched.map(matched => matched['name']))\r\n            // tmpMatched.map(matched => matched['name'])\r\n            // setApplyIndexTemplates([event.target.value + indexSuffixA, event.target.value + indexSuffixB])\r\n\r\n            if (createName.trim().length !== 0 && inValid === false) {\r\n                setAddBtnDisabled(false)\r\n            } else {\r\n                setAddBtnDisabled(true)\r\n            }\r\n\r\n        } else {\r\n            setAddBtnDisabled(true)\r\n            // setApplyIndexTemplates([])\r\n            setApplyIndexTemplate(\"\")\r\n        }\r\n    }\r\n\r\n    function handleAddCollection() {\r\n        if (createName === \"\") {\r\n            setCreateNameError(true)\r\n            return false\r\n        }\r\n        // if (createBaseId === \"\" || createBaseId.startsWith(\".\") || !/[a-z0-9]/g.test(createBaseId)) {\r\n        //     setCreateBaseIdError(true)\r\n        //     return false\r\n        // }\r\n        if (createBaseId.length > 1 && (!/^[a-z]+[a-z0-9-_]/g.test(createBaseId))) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        } else if (createBaseId.length === 1 && /[0-9]/g.test(createBaseId)) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        } else if (createBaseId.startsWith(\".\")) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        } else if (/[A-Z]/g.test(createBaseId)) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        } else if (/[ㄱ-ㅎ가-힣]/g.test(createBaseId)) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        }\r\n\r\n        setProcess(true)\r\n        dispatch(addCollectionList({\r\n            name: createName,\r\n            baseId: createBaseId,\r\n            refresh_interval: 1,\r\n            replicas: 1,\r\n        })).then(response => {\r\n            toggleOpenAddModal()\r\n            setTimeout(() => {\r\n                dispatch(setCollectionList())\r\n                setTimeout(() => {\r\n                    dispatch(setCollectionList())\r\n                }, 500)\r\n            }, 500)\r\n            setProcess(false)\r\n        }).catch(error => {\r\n            setCreateBaseIdError(true)\r\n            setModalMessage(\"추가 실패.\")\r\n            console.log('error', error)\r\n            setProcess(false)\r\n        })\r\n    }\r\n\r\n    function checkCollectionName(event) {\r\n        setCreateNameError(false);\r\n        setCreateName(event.target.value);\r\n        if (event.target.value.length !== 0 && createBaseId.length !== 0 && createBaseIdError === false) {\r\n            setAddBtnDisabled(false)\r\n        } else {\r\n            setAddBtnDisabled(true)\r\n        }\r\n    }\r\n\r\n    function convertHumanReadableCount(docSize) {\r\n        let size = docSize + \"\";\r\n        if (size.length <= 3) {\r\n            return size;\r\n        }\r\n        var count = Math.ceil(size.length / 3);\r\n\r\n        var newSize = [];\r\n        for (var i = 0; i < count; i++) {\r\n            newSize.unshift(size.slice(-3 * (i + 1), size.length - (3 * i)));\r\n        }\r\n        return newSize.join(',');\r\n    }\r\n\r\n    const viewCollectionList = collectionList.sort((a, b) => {\r\n        if (a['name'] > b['name']) {\r\n            return 1;\r\n        } else if (a['name'] < b['name']) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }).map((c, i) => ({ ...c, no: i }))\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Helmet title=\"컬렉션\" />\r\n\r\n            <br />\r\n\r\n            <Typography variant=\"h3\"\r\n                gutterBottom\r\n                display=\"inline\"\r\n            >\r\n                컬렉션\r\n            </Typography>\r\n\r\n            <Divider my={6} />\r\n\r\n            <Box align={'right'}>\r\n            {authUser.role.index ?\r\n                        <Link className={classes.link}\r\n                            onClick={toggleOpenAddModal}\r\n                            color={\"primary\"}\r\n                        >\r\n                            컬렉션 생성\r\n                        </Link> : <></>}\r\n            </Box>\r\n\r\n            <br />\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/*<TableCell align=\"center\">#</TableCell>*/}\r\n\r\n                            {\r\n                                fields.map(field =>\r\n                                    <TableCell align=\"center\" key={field['id']}>\r\n                                        {\r\n                                            field[\"sorting\"] ?\r\n                                                <TableSortLabel\r\n                                                    active={orderBy === field['id']}\r\n                                                    direction={orderBy === field['id'] ? order : 'asc'}\r\n                                                    onClick={event => {\r\n                                                        setOrderBy(field['id'])\r\n                                                        const isAsc = orderBy === field['id'] && order === 'asc';\r\n                                                        setOrder(isAsc ? 'desc' : 'asc');\r\n                                                    }}\r\n                                                >\r\n                                                    {field['label']}\r\n                                                </TableSortLabel>\r\n                                                :\r\n                                                field['label']\r\n                                        }\r\n                                    </TableCell>)\r\n                            }\r\n\r\n                            {/*<TableCell align=\"center\">이름</TableCell>*/}\r\n                            {/*<TableCell align=\"center\">아이디</TableCell>*/}\r\n                            {/*<TableCell align=\"center\">선택 인덱스</TableCell>*/}\r\n                            {/*<TableCell align=\"center\">샤드</TableCell>*/}\r\n                            {/*<TableCell align=\"center\">문서 수</TableCell>*/}\r\n                            {/*<TableCell align=\"center\">용량</TableCell>*/}\r\n                            {/*<TableCell align=\"center\">자동시작</TableCell>*/}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            viewCollectionList.sort((a, b) => {\r\n                                if (orderBy && order) {\r\n                                    if (order === 'asc') {\r\n                                        return a[orderBy] > b[orderBy] ? 1 : -1\r\n                                    } else {\r\n                                        return a[orderBy] > b[orderBy] ? -1 : 1\r\n                                    }\r\n                                } else {\r\n                                    return 0\r\n                                }\r\n                            }).map((collection, num) => {\r\n                                let view_cron = \"\"\r\n                                let view_cron_list = collection['cron'].split(\"||\");\r\n                                view_cron_list.forEach((element, index) => {\r\n                                    if (view_cron.length > 0) view_cron += \",  \" + element\r\n                                    else view_cron = element;\r\n                                });\r\n\r\n                                const id = collection['id']\r\n                                const name = collection['name']\r\n                                const baseId = collection['baseId']\r\n                                const indexA = collection['indexA'] || {}\r\n                                const indexB = collection['indexB'] || {}\r\n\r\n                                const indexAAlias = indexA['aliases'] && Object.keys(indexA['aliases']).find(alias => alias === baseId)\r\n                                const isActiveA = indexAAlias !== undefined && indexAAlias !== null\r\n\r\n                                const indexBAlias = indexB['aliases'] && Object.keys(indexB['aliases']).find(alias => alias === baseId)\r\n                                const isActiveB = indexBAlias !== undefined && indexBAlias !== null\r\n\r\n                                return (\r\n                                    <TableRow key={collection['id']}>\r\n                                        <TableCell align=\"center\">{collection['no'] + 1}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Link className={classes.link} onClick={() => moveDetail(id)}>{name}</Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Link className={classes.link} onClick={() => moveDetail(id)}>{baseId}</Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Link style={{ display: isActiveA ? \"block\" : \"none\" }}\r\n                                                onClick={() => moveIndex(indexA['uuid'])}\r\n                                                className={classes.link} >{indexA['index']}</Link>\r\n                                            <Link style={{ display: isActiveB ? \"block\" : \"none\" }}\r\n                                                onClick={() => moveIndex(indexB['uuid'])}\r\n                                                className={classes.link} >{indexB['index']}</Link>\r\n\r\n                                            <Box style={{ display: isActiveA === false && isActiveB === false ? \"block\" : \"none\" }}> - </Box>\r\n\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Box style={{ display: isActiveA ? \"block\" : \"none\" }}>\r\n                                                P[{indexA['pri'] || '-'}] R[{indexA['rep'] || '-'}]\r\n                                            </Box>\r\n                                            <Box style={{ display: isActiveB ? \"block\" : \"none\" }}>\r\n                                                P[{indexB['pri'] || '-'}] R[{indexB['rep'] || '-'}]\r\n                                            </Box>\r\n                                            <Box style={{ display: isActiveA === false && isActiveB === false ? \"block\" : \"none\" }}> - </Box>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Box style={{ display: isActiveA ? \"block\" : \"none\" }}>\r\n                                                {convertHumanReadableCount(indexA['docsCount'] || '-')}\r\n                                            </Box>\r\n                                            <Box style={{ display: isActiveB ? \"block\" : \"none\" }}>\r\n                                                {convertHumanReadableCount(indexB['docsCount'] || '-')}\r\n                                            </Box>\r\n                                            <Box style={{ display: isActiveA === false && isActiveB === false ? \"block\" : \"none\" }}> - </Box>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Box style={{ display: isActiveA ? \"block\" : \"none\" }}>\r\n                                                {indexA['storeSize'] || '-'}\r\n                                            </Box>\r\n                                            <Box style={{ display: isActiveB ? \"block\" : \"none\" }}>\r\n                                                {indexB['storeSize'] || '-'}\r\n                                            </Box>\r\n                                            <Box style={{ display: isActiveA === false && isActiveB === false ? \"block\" : \"none\" }}> - </Box>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Box>\r\n\r\n                                                {\r\n                                                    (collection['scheduled'] || false) ? `활성화 (${view_cron})` : \"비활성화\"\r\n                                                }\r\n\r\n                                                {/*<Tooltip title=\"Delete\" className={classes.fab}>*/}\r\n                                                {/*    {*/}\r\n                                                {/*        (collection['scheduled']||false) ? \"활성화\" : \"비활성화\"*/}\r\n                                                {/*    }*/}\r\n                                                {/*</Tooltip>*/}\r\n                                            </Box>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            })\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Dialog open={openAddModal}\r\n                fullWidth\r\n                onClose={toggleOpenAddModal}\r\n            >\r\n                <DialogTitle>\r\n                    컬렉션 추가\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container my={3}>\r\n                        <Grid item xs={4} mt={2}>\r\n                            컬렉션 이름\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <TextField fullWidth\r\n                                autoFocus\r\n                                value={createName}\r\n                                onChange={checkCollectionName}\r\n                                placeholder={\"상품컬렉션\"}\r\n                                error={createNameError}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container my={3}>\r\n                        <Grid item xs={4} mt={2}>\r\n                            컬렉션 아이디\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <TextField fullWidth\r\n                                value={createBaseId}\r\n                                onChange={handleChangeBaseId}\r\n                                placeholder={\"product-collection\"}\r\n                                error={createBaseIdError}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container my={3}>\r\n                        <Grid item xs={4}>\r\n                            인덱스 템플릿\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            {applyIndexTemplate || \"\"}\r\n                            {/*<ul>*/}\r\n                            {/*    {*/}\r\n                            {/*        applyIndexTemplates.map((applyIndexTemplate, index) => {*/}\r\n                            {/*            return (*/}\r\n                            {/*                <li key={index}>*/}\r\n                            {/*                    {applyIndexTemplate}*/}\r\n                            {/*                </li>*/}\r\n                            {/*            )*/}\r\n                            {/*        })*/}\r\n                            {/*    }*/}\r\n                            {/*</ul>*/}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container my={3}>\r\n                        <Grid item xs={4}>\r\n                            인덱스 패턴\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            {createBaseId !== \"\" ? createBaseId + indexSuffixA + \", \" : \"\"}\r\n                            {createBaseId !== \"\" ? createBaseId + indexSuffixB : \"\"}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container my={3} style={{ display: modalMessage ? \"none\" : \"block\", color: \"red\", textAlign: \"center\" }}>\r\n                        <Grid item xs={12}>\r\n                            {modalMessage}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleAddCollection}\r\n                        disabled={process || addBtnDisabled}\r\n                        variant={\"outlined\"}\r\n                        color={\"primary\"}\r\n                    >추가</Button>\r\n                    <Button onClick={toggleOpenAddModal}\r\n                        variant={\"outlined\"}\r\n                        color={\"default\"}\r\n                    >취소</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    ...store.collectionReducers,\r\n    ...store.indexTemplateReducers\r\n}))(Collection);\r\n","import Client from '~/Client'\r\nimport {SET_INDEX_TEMPLATE, SET_INDEX_TEMPLATES, SET_COMMENTS} from \"../constants\";\r\n\r\nconst client = new Client()\r\n\r\nexport const setIndexTemplatesAction = () => dispatch => client.call({\r\n    uri: '/elasticsearch/_cat/templates?format=json'\r\n}).then(response => dispatch({\r\n    type: SET_INDEX_TEMPLATES,\r\n    payload: response.data.filter(template => !template['name'].startsWith(\".\"))\r\n}))\r\n\r\n\r\nexport const addIndexTemplateAction = ({template, index_patterns, settings, mappings}) => dispatch => client.call({\r\n    uri: `/elasticsearch/_template/${template}`,\r\n    method: \"PUT\",\r\n    data: {\r\n        index_patterns,\r\n        settings,\r\n        mappings\r\n    }\r\n})\r\n\r\nexport const deleteIndexTemplateAction = ({template}) => dispatch => client.call({\r\n    uri: `/elasticsearch/_template/${template}`,\r\n    method: \"DELETE\",\r\n})\r\n\r\nexport const setIndexTemplateAction = ({ template }) => dispatch => client.call({\r\n    uri: `/elasticsearch/_template/${template}`\r\n}).then(response => dispatch({type: SET_INDEX_TEMPLATE, payload: response.data[template]}))\r\n\r\n\r\nexport const setIndexTemplateCommentsAction = () => dispatch => client.call({\r\n    uri: `/templates/comments`,\r\n    method: \"GET\",\r\n}).then(response => {\r\n    if(response.data == undefined || response.data.hits == undefined || response.data.hits.hits.length === 0){\r\n        dispatch({type: SET_COMMENTS, payload: []})\r\n    }else{\r\n        let list = response.data.hits.hits.map((item) => {\r\n            return item;\r\n        })\r\n        dispatch({type: SET_COMMENTS, payload: list})\r\n    }\r\n})\r\n\r\nexport const addCommentsAction = ({id, name, updatedComment}) => dispatch => client.call({\r\n    uri: `/templates/comments`,\r\n    method: \"PUT\",\r\n    data: {\r\n        \"name\": name,\r\n        \"id\": id,\r\n        \"data\": updatedComment\r\n    }\r\n})\r\n","import {\r\n    SET_CAT_INDEX_TEMPLATE_LIST,\r\n    SET_COLLECTION,\r\n    SET_COLLECTION_INDEX_HISTORY_LIST,\r\n    SET_COLLECTION_INDEX_SUFFIX,\r\n    SET_COLLECTION_JOB,\r\n    SET_COLLECTION_LIST\r\n} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setCollectionList = () => dispatch => client.call({\r\n    uri: \"/collections\"\r\n}).then(response => { dispatch({type: SET_COLLECTION_LIST, payload: response.data})} )\r\n\r\nexport const addCollectionList = (collection) => dispatch => client.call({\r\n    uri: `/collections`,\r\n    method: \"POST\",\r\n    data: collection\r\n})\r\n\r\nexport const setCollectionIndexSuffix = () => dispatch => client.call({\r\n    uri: \"/collections\",\r\n    params: {\r\n        action: \"indexSuffix\"\r\n    }\r\n}).then(response => dispatch({type: SET_COLLECTION_INDEX_SUFFIX, payload: response.data}))\r\n\r\nexport const setCollection = id => dispatch => client.call({\r\n    uri: `/collections/${id}`\r\n}).then(response => dispatch({type: SET_COLLECTION, payload: response.data}))\r\n\r\nexport const deleteCollectionAction = id => dispatch => client.call({\r\n    uri: `/collections/${id}`,\r\n    method: \"delete\"\r\n})\r\n\r\nexport const editCollectionSourceAction = (id, collection) => dispatch => client.call({\r\n    uri: `/collections/${id}`,\r\n    method: \"put\",\r\n    params: {action: \"source\"},\r\n    data: collection\r\n}).then(response => response.data)\r\n\r\n// export const editCollectionScheduleAction = (id, isSchedule) => dispatch => client.call({\r\n//     uri: `/collections/${id}`,\r\n//     method: \"put\",\r\n//     params: {action: \"schedule\"},\r\n//     data: {\r\n//         scheduled: isSchedule\r\n//     }\r\n// }).then(response => response.data)\r\n\r\nexport const editCollectionScheduleAction = (id, collection) => dispatch => client.call({\r\n    uri: `/collections/${id}`,\r\n    method: \"put\",\r\n    params: {action: \"schedule\"},\r\n    data: collection\r\n}).then(response => response.data)\r\n\r\nexport const setIndexHistoryTypeList = ({ indexA, indexB, from, size, type }) => dispatch => client.call({\r\n    uri: `/elasticsearch/.dsearch_index_history/_search`,\r\n    method: \"post\",\r\n    params: {\r\n        pretty: true,\r\n        filter_path: \"hits\"\r\n    },\r\n    data: {\r\n        \"query\": {\r\n            \"bool\": {\r\n                \"should\": [\r\n                    // {\r\n                    //     \"term\": {\r\n                    //         \"index\": {\r\n                    //             \"value\": indexA\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    // {\r\n                    //     \"term\": {\r\n                    //         \"index\": {\r\n                    //             \"value\": indexB\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    // {\r\n                    //     \"term\": {\r\n                    //         \"index.keyword\": {\r\n                    //             \"value\": indexA\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    // {\r\n                    //     \"term\": {\r\n                    //         \"index.keyword\": {\r\n                    //             \"value\": indexB\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    {\r\n                        \"match\": {\r\n                            \"index\": indexA\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"index\": indexB\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"index.keyword\": indexA\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"index.keyword\": indexB\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"jobType.keyword\": type\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"jobType\": type\r\n                        }\r\n                    }\r\n                ],\r\n                \"minimum_should_match\": 2\r\n            }\r\n        },\r\n        \"sort\": [\r\n            {\r\n                \"startTime\": {\r\n                    \"order\": \"desc\"\r\n                },\r\n                \"_score\": {\r\n                    \"order\": \"desc\"\r\n                }\r\n            }\r\n        ],\r\n        \"from\": from,\r\n        \"size\": size\r\n    }\r\n}).then(response => dispatch({type: SET_COLLECTION_INDEX_HISTORY_LIST, payload: response.data}))\r\n\r\nexport const setIndexHistoryList = ({ indexA, indexB, from, size }) => dispatch => client.call({\r\n    uri: `/elasticsearch/.dsearch_index_history/_search`,\r\n    method: \"post\",\r\n    params: {\r\n        pretty: true,\r\n        filter_path: \"hits\"\r\n    },\r\n    data: {\r\n        \"query\": {\r\n            \"bool\": {\r\n                \"should\": [\r\n                    {\r\n                        \"term\": {\r\n                            \"index\": {\r\n                                \"value\": indexA\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"term\": {\r\n                            \"index\": {\r\n                                \"value\": indexB\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"term\": {\r\n                            \"index.keyword\": {\r\n                                \"value\": indexA\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"term\": {\r\n                            \"index.keyword\": {\r\n                                \"value\": indexB\r\n                            }\r\n                        }\r\n                    },\r\n                ],\r\n                \"minimum_should_match\": 1\r\n            }\r\n        },\r\n        \"sort\": [\r\n            {\r\n                \"startTime\": {\r\n                    \"order\": \"desc\"\r\n                },\r\n                \"_score\": {\r\n                    \"order\": \"desc\"\r\n                }\r\n            }\r\n        ],\r\n        \"from\": from,\r\n        \"size\": size\r\n    }\r\n}).then(response => dispatch({type: SET_COLLECTION_INDEX_HISTORY_LIST, payload: response.data}))\r\n\r\nexport const deleteIndexHistoryList = ({indexA, indexB, time}) => dispatch => client.call({\r\n    uri: `/elasticsearch/.dsearch_index_history/_delete_by_query`,\r\n    method: 'post',\r\n    data: {\r\n        \"query\": {\r\n            \"bool\": {\r\n                \"should\": [\r\n                    {\r\n                        \"match\": {\r\n                            \"index\": {\r\n                                \"query\": indexA,\r\n                                \"boost\": 1\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"index\": {\r\n                                \"query\": indexB,\r\n                                \"boost\": 1\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"minimum_should_match\": 1,\r\n                \"filter\": {\r\n                    \"range\": {\r\n                        \"startTime\": {\r\n                            \"lte\": time\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}).then(response => response.data)\r\n\r\nexport const setCatIndexTemplateList = () => dispatch => client.call({\r\n    uri: `/elasticsearch/_cat/templates?format=json`\r\n}).then(response => dispatch({type: SET_CAT_INDEX_TEMPLATE_LIST, payload: response.data}))\r\n\r\nexport const setCollectionJob = id => dispatch => client.call({\r\n    uri: `/collections/${id}/job`\r\n}).then(response => {\r\n    if (response.data) {\r\n        dispatch({ type: SET_COLLECTION_JOB, payload: response.data })\r\n    } else {\r\n        dispatch({ type: SET_COLLECTION_JOB, payload: {} })\r\n    }\r\n    return response.data\r\n})\r\n\r\nexport const editCollectionAction = (id, action) => dispatch => client.call({\r\n    uri: `/collections/${id}/action`,\r\n    method: 'PUT',\r\n    params: { action }\r\n}).then(response => {\r\n    return response.data\r\n})\r\n\r\nexport const editCollectionAliasAction = (actions) => dispatch => client.call({\r\n    uri: `/elasticsearch/_aliases`,\r\n    method: 'POST',\r\n    data: { actions }\r\n}).then(response => {\r\n    return response.data\r\n})\r\n"],"sourceRoot":""}