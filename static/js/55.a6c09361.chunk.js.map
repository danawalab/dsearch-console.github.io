{"version":3,"sources":["pages/indices/pipeline/index.js","components/AntTabs/index.js","utils.js"],"names":["Divider","React","forwardRef","props","ref","innerRef","styled","MuiDivider","spacing","connect","store","dispatch","Fragment","title","variant","gutterBottom","display","my","container","item","xs","tabs","label","component","Async","Box","MuiBox","Tab","withStyles","theme","root","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","color","opacity","fontWeightMedium","selected","index","disableRipple","AntTabs","tabIndex","onChange","useState","state","setState","value","event","indicatorColor","textColor","scrollButtons","map","tab","key","id","icon","role","hidden","aria-labelledby","utils","sleep","ms","Promise","resolve","setTimeout"],"mappings":"4HAAA,mIAiCMA,GAJUC,IAAMC,YAAW,SAACC,EAAOC,GAAR,OAC7B,kBAAC,IAAD,eAAeC,SAAUD,GAASD,OAGtBG,YAAOC,IAAPD,CAAmBE,MAqBpBC,uBAAQ,SAAAC,GAAK,MAAK,KAAlBD,EAnBf,YAEI,OAF0B,EAAXE,SAGX,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAQC,MAAM,aACd,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACC,QAAQ,UAA9C,kCACA,kBAAChB,EAAD,CAASiB,GAAI,IACb,kBAAC,IAAD,CAAMC,WAAS,EAACV,QAAS,GACrB,kBAAC,IAAD,CAAMW,MAAI,EAACC,GAAI,IACf,kBAAC,IAAD,CAASC,KAAM,CACP,CAACC,MAAO,eAAMC,UAAWC,aAAM,kBAAM,wEACrC,CAACF,MAAO,qBAAOC,UAAWC,aAAM,kBAAM,kF,qICpCxDxB,EAAUM,YAAOC,IAAPD,CAAmBE,KAC7BiB,EAAMnB,YAAOoB,IAAPpB,CAAeE,KAarBmB,EAAMC,aAAW,SAACC,GAAD,MAAY,CAC/BC,KAAM,CACFC,cAAe,OACfC,SAAU,GACVC,WAAYJ,EAAMK,WAAWC,kBAC7BC,YAAaP,EAAMrB,QAAQ,GAC3B,UAAW,CACP6B,MAAO,UACPC,QAAS,GAEb,aAAc,CACVD,MAAO,UACPJ,WAAYJ,EAAMK,WAAWK,kBAEjC,UAAW,CACPF,MAAO,YAGfG,SAAU,MACV,CAACC,MAAO,GAnBAb,EAmBI,SAACzB,GAAD,OAAW,kBAAC,IAAD,eAAQuC,eAAa,GAAKvC,OAmEtCwC,IAtCf,YAAkD,IAAhCtB,EAA+B,EAA/BA,KAA+B,IAAzBuB,gBAAyB,MAAd,EAAc,EAAXC,EAAW,EAAXA,SAAW,EACnB5C,IAAM6C,SAAS,CAACF,SAAUA,IADP,mBACtCG,EADsC,KAC/BC,EAD+B,KAW7C,OACI,oCACI,kBAAC,IAAD,CAAMC,MAAOF,EAAMH,SACbC,SAZO,SAACK,EAAON,GACzBI,EAAS,CACLJ,SAAUA,IAEU,oBAAbC,GACPA,EAASD,IAQHO,eAAe,UACfC,UAAU,UACVtC,QAAQ,aACRuC,cAAc,QAEfhC,EAAKiC,KAAI,SAACC,EAAKd,GAAN,OAAgB,kBAACd,EAAD,CAAK6B,IAAKf,EAAOgB,GAAIhB,EAAOiB,KAAMH,EAAIG,KAAMpC,MAAOiC,EAAIjC,OAAS,SAE9F,kBAACtB,EAAD,MACCqB,EAAKiC,KAAI,SAAC3B,EAAKc,GACZ,OACI,kBAAChB,EAAD,CAAK+B,IAAKf,EACJkB,KAAK,WACLC,OAAQb,EAAMH,WAAaH,EAC3BgB,GAAE,mCAA8BhB,GAChCoB,kBAAA,8BAAwCpB,IACzCA,IAAUM,EAAMH,UAAYjB,EAAIJ,WAAa,kBAACE,EAAD,SAAM,kBAACE,EAAIJ,UAAL,CAAeF,KAAMM,IAA3B,Y,iCCtGtE,IAAMmC,EAAO,CACTC,MAAM,SAACC,GAAD,OAAQ,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,QAM9CF","file":"static/js/55.a6c09361.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {NavLink as RouterNavLink} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Helmet from 'react-helmet';\r\nimport Async from '~/components/Async';\r\nimport AntTabs from \"~/components/AntTabs\"\r\n\r\nimport utils from \"../../../utils\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {\r\n    Box, Button,\r\n    Dialog, DialogTitle,\r\n    Table, TableRow, TableCell, TableHead, TableBody,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Divider as MuiDivider,\r\n    Grid,\r\n    Link,\r\n    Select, MenuItem,\r\n    Typography,\r\n    TextField as MuiTextField,\r\n    DialogContent,\r\n    DialogActions,\r\n    Snackbar\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {spacing} from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n    <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nfunction Pipeline({dispatch}) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Helmet title=\"PipeLine\"/>\r\n            <Typography variant=\"h3\" gutterBottom display=\"inline\">파이프라인</Typography>\r\n            <Divider my={6}/>\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12}>\r\n                <AntTabs tabs={[\r\n                        {label: \"목록\", component: Async(() => import(\"./Summary\"))},\r\n                        {label: \"테스트\", component: Async(() => import(\"./TestPipeline\"))}\r\n                    ]} />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n}))(Pipeline);\r\n\r\n","// React components\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// Material components\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Box as MuiBox, Divider as MuiDivider, Tab as AntTab, Tabs, Typography, Card, CardContent} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport {spacing} from \"@material-ui/system\";\r\n\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Box = styled(MuiBox)(spacing);\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//         width: '100%',\r\n//         backgroundColor: theme.palette.background.paper\r\n//     },\r\n//     indicator: {\r\n//         backgroundColor: '#1890ff',\r\n//     },\r\n// }));\r\n\r\nconst Tab = withStyles((theme) => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        minWidth: 72,\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        marginRight: theme.spacing(2),\r\n        '&:hover': {\r\n            color: '#40a9ff',\r\n            opacity: 1,\r\n        },\r\n        '&$selected': {\r\n            color: '#1890ff',\r\n            fontWeight: theme.typography.fontWeightMedium,\r\n        },\r\n        '&:focus': {\r\n            color: '#40a9ff',\r\n        },\r\n    },\r\n    selected: {},\r\n}), {index: 1})((props) => <AntTab disableRipple {...props} />);\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const {key, children, value, index} = props;\r\n    return (\r\n        <Typography\r\n            key={key}\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        >\r\n            {value === index && <Box >\r\n                <children key={key} />\r\n            </Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    key: PropTypes.any,\r\n    children: PropTypes.node,\r\n    index: PropTypes.any,\r\n    value: PropTypes.any,\r\n};\r\n\r\n\r\nfunction AntTabs({tabs, tabIndex = 0, onChange}) {\r\n    const [state, setState] = React.useState({tabIndex: tabIndex});\r\n    const handleChange = (event, tabIndex) => {\r\n        setState({\r\n            tabIndex: tabIndex\r\n        })\r\n        if (typeof onChange === 'function') {\r\n            onChange(tabIndex)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tabs value={state.tabIndex}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n            >\r\n                {tabs.map((tab, index) => <Tab key={index} id={index} icon={tab.icon} label={tab.label || \"\"}/>)}\r\n            </Tabs>\r\n            <Divider />\r\n            {tabs.map((Tab, index) => {\r\n                return (\r\n                    <Box key={index}\r\n                          role=\"tabpanel\"\r\n                          hidden={state.tabIndex !== index}\r\n                          id={`scrollable-auto-tabpanel-${index}`}\r\n                          aria-labelledby={`scrollable-auto-tab-${index}`}>\r\n                        {index === state.tabIndex && Tab.component && <Box> <Tab.component tabs={Tab}/> </Box>}\r\n                    </Box>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AntTabs;","const utils ={\r\n    sleep:(ms) => new Promise(resolve => setTimeout(resolve, ms)),\r\n\r\n\r\n\r\n}\r\n\r\nexport default utils"],"sourceRoot":""}