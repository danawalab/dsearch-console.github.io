{"version":3,"sources":["redux/actions/pipelineActions.js","pages/indices/pipeline/Summary.js"],"names":["client","Client","setPipelineAction","pipeline","dispatch","type","SET_PIPELINE","payload","getPipeline","item","jsonData","call","uri","method","headers","data","then","response","SET_PIPELINE_RESULT","getPipelineDetail","setPipelineList","SET_PIPELINE_LIST","deletePipeline","DELETE_PIPELINE","addPipeline","ADD_PIPELINE","editPipeline","fields","id","label","sorting","connect","store","authUser","dsearchReducers","list","pipelineReducers","pipelineList","useEffect","name","useRef","aceEditor","useState","nameError","setNameError","modalFlag","setModalFlag","successFlag","setSuccessFlag","snackbarFlag","setSnackbarFlag","message","setMessage","key","setKey","flag","setFlag","orderBy","setOrderBy","order","setOrder","isJson","str","JSON","parse","e","closeModal","viewList","Object","keys","map","l","n","title","no","Fragment","align","paddingRight","role","index","onClick","style","cursor","color","width","field","active","direction","event","isAsc","sort","a","b","x","y","target","variant","whiteSpace","openModalEdit","borderColor","openModalDelete","open","autoHideDuration","onClose","elevation","severity","fullWidth","fontFamily","fontSize","stringify","inputRef","error","placeholder","helperText","ref","mode","theme","height","tabSize","setOptions","useWorker","disabled","value","pipelineName","current","length","replace","editor","getValue","res","catch","err","handleAddPipeline"],"mappings":"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","file":"static/js/65.63bb7e54.chunk.js","sourcesContent":["import {SET_PIPELINE_LIST,SET_PIPELINE_RESULT, SET_PIPELINE, DELETE_PIPELINE, ADD_PIPELINE} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setPipelineAction = (pipeline) => dispatch => dispatch({type: SET_PIPELINE, payload: pipeline})\r\n\r\nexport const getPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"POST\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: SET_PIPELINE_RESULT, payload: response.data}))\r\n\r\nexport const getPipelineDetail = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item + \"/detail\",\r\n    method: \"POST\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: SET_PIPELINE_RESULT, payload: response.data}))\r\n\r\nexport const setPipelineList = () => dispatch => client.call({\r\n    uri: \"/pipeline/list\",\r\n    method: \"GET\"\r\n}).then(response => dispatch({type: SET_PIPELINE_LIST, payload: response.data}))\r\n\r\nexport const deletePipeline = (item) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"DELETE\"\r\n}).then(response => dispatch({type: DELETE_PIPELINE, payload: response.data}))\r\n\r\nexport const addPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"PUT\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: ADD_PIPELINE, payload: response.data}))\r\n\r\nexport const editPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"PUT\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: ADD_PIPELINE, payload: response.data}))\r\n\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Link,\r\n    Snackbar,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow, TableSortLabel,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport {addPipeline, deletePipeline, editPipeline, setPipelineList} from '@actions/pipelineActions'\r\n\r\nconst fields = [\r\n    { id: \"no\", label: \"#\", sorting: false},\r\n    { id: \"name\", label: \"파이프라인 이름\", sorting: true},\r\n    { id: \"edit\", label: \"수정\", sorting: false},\r\n    { id: \"delete\", label: \"삭제\", sorting: false},\r\n]\r\n\r\nfunction Summary({ dispatch, authUser, list }) {\r\n    useEffect(() => {\r\n        dispatch(setPipelineList())\r\n    }, [])\r\n\r\n    const name = useRef(null);\r\n    const aceEditor = useRef(null);\r\n    const [nameError, setNameError] = useState(false)\r\n    const [modalFlag, setModalFlag] = useState(false)\r\n    const [successFlag, setSuccessFlag] = useState(false)\r\n    const [snackbarFlag, setSnackbarFlag] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [key, setKey] = useState('')\r\n    const [flag, setFlag] = useState(0);\r\n    const [orderBy, setOrderBy] = useState(\"\")\r\n    const [order, setOrder] = useState(\"asc\")\r\n\r\n    function isJson(str) {\r\n        try {\r\n            let json = JSON.parse(str);\r\n            return (typeof json === 'object');\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function closeModal(){\r\n        setModalFlag(false)\r\n    }\r\n\r\n    function openModal(id){\r\n        setKey(event.target.id);\r\n        setModalFlag(true);\r\n        setFlag(1);\r\n    }\r\n\r\n    function openModalEdit(item){\r\n        setKey(item);\r\n        setModalFlag(true);\r\n        setFlag(3);\r\n    }\r\n\r\n    function openModalDelete(item){\r\n        setKey(item);\r\n        setModalFlag(true);\r\n        setFlag(4);\r\n    }\r\n\r\n    function openModalAdd(){\r\n        setModalFlag(true);\r\n        setFlag(2);\r\n    }\r\n\r\n    function handleAddPipeline(){\r\n        let pipelineName = name.current.value;\r\n        if(pipelineName.length !== pipelineName.replace(/\\s| /gi, \"\").length){\r\n            setNameError(true);\r\n            return ;\r\n        }\r\n\r\n        if(!isJson(aceEditor.current.editor.getValue())){\r\n            return ;\r\n        }\r\n\r\n        setMessage(\"추가\")\r\n        \r\n        dispatch(\r\n            addPipeline(name.current.value, aceEditor.current.editor.getValue())\r\n        ).then((res)=>{\r\n            setSnackbarFlag(true)\r\n            setSuccessFlag(true)\r\n            dispatch(setPipelineList());\r\n        })\r\n        .catch((err) => {\r\n            setSnackbarFlag(true)\r\n            setSuccessFlag(false)\r\n            dispatch(setPipelineList());\r\n        })\r\n        closeModal()\r\n    }\r\n\r\n    function handleEditPipeline(){\r\n        if(!isJson(aceEditor.current.editor.getValue())){\r\n            return ;\r\n        }\r\n\r\n        setMessage(\"수정\")\r\n        dispatch(\r\n            editPipeline(key, aceEditor.current.editor.getValue())\r\n        ).then((res)=>{\r\n            setSnackbarFlag(true)\r\n            setSuccessFlag(true)\r\n            dispatch(setPipelineList());\r\n        })\r\n        .catch((err) => {\r\n            setSnackbarFlag(true)\r\n            setSuccessFlag(false)\r\n            dispatch(setPipelineList());\r\n        })\r\n        closeModal()\r\n    }\r\n\r\n    function handleDeletePipeline(){\r\n        setMessage(\"삭제\")\r\n        dispatch(\r\n            deletePipeline(key)\r\n        ).then((res)=>{\r\n            setSnackbarFlag(true)\r\n            setSuccessFlag(true)\r\n            dispatch(setPipelineList());\r\n        })\r\n        .catch((err) => {\r\n            setSnackbarFlag(true)\r\n            setSuccessFlag(false)\r\n            dispatch(setPipelineList());\r\n        })\r\n        closeModal()\r\n    }\r\n\r\n    const viewList = Object.keys(list).map((l, n) => ({title: l, no: n}))\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                <CardContent>\r\n                    <Box>\r\n                        <Box align={'right'} paddingRight={\"30px\"}>\r\n                            {authUser.role.index ? \r\n                                <Link\r\n                                    onClick={openModalAdd}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    color={\"primary\"}>\r\n                                    파이프라인 추가\r\n                                </Link> \r\n                                : <></>\r\n                            }\r\n                        </Box>\r\n                        \r\n                        <Table>\r\n                            <colgroup>\r\n                                <col width=\"5%\" />\r\n                                <col />\r\n                                <col width=\"10%\" />\r\n                                <col width=\"10%\" />\r\n                            </colgroup>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {\r\n                                        fields.map(field =>\r\n                                            <TableCell align=\"center\" key={field['id']}>\r\n                                                {\r\n                                                    field[\"sorting\"] ?\r\n                                                        <TableSortLabel\r\n                                                            active={orderBy === field['id']}\r\n                                                            direction={orderBy === field['id'] ? order : 'asc'}\r\n                                                            onClick={event => {\r\n                                                                setOrderBy(field['id'])\r\n                                                                const isAsc = orderBy === field['id'] && order === 'asc';\r\n                                                                setOrder(isAsc ? 'desc' : 'asc');\r\n                                                            }}\r\n                                                        >\r\n                                                            {field['label']}\r\n                                                        </TableSortLabel>\r\n                                                        :\r\n                                                        field['label']\r\n                                                }\r\n                                            </TableCell>)\r\n                                    }\r\n                                    {/*<TableCell align={\"center\"} >#</TableCell>*/}\r\n                                    {/*<TableCell align={\"center\"} >파이프라인 이름</TableCell>*/}\r\n                                    {/*<TableCell align={\"center\"} >수정</TableCell>*/}\r\n                                    {/*<TableCell align={\"center\"} >삭제</TableCell>*/}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    viewList\r\n                                            .sort((a, b) => {\r\n                                                if (orderBy && order) {\r\n                                                    let x = a['title']\r\n                                                    let y = b['title']\r\n                                                    if (order === 'asc') {\r\n                                                        return x > y ? 1 : -1\r\n                                                    } else {\r\n                                                        return x > y ? -1 : 1\r\n                                                    }\r\n                                                } else {\r\n                                                    return 0\r\n                                                }})\r\n                                            .map((item, index) => {\r\n                                            return  <TableRow key={index}>\r\n                                                        <TableCell align={\"center\"}> \r\n                                                            {item['no'] + 1}\r\n                                                        </TableCell>\r\n                                                        <TableCell align={\"center\"}>\r\n                                                            <Link onClick={() => openModal(item['title'])} variant={\"inherit\"} style={{ cursor: \"pointer\" }} color={\"primary\"} id={item['title']} >{item['title']}</Link>\r\n                                                        </TableCell>\r\n                                                        {/* <TableCell align={\"center\"}>\r\n                                                                <Button variant={\"outlined\"} color={\"primary\"} style={{ whiteSpace: \"nowrap\" }} onClick={()=> openModalEdit(item)} >수정</Button>\r\n                                                            </TableCell>\r\n                                                            <TableCell align={\"center\"}>\r\n                                                                <Button variant=\"outlined\" style={{ whiteSpace: \"nowrap\", borderColor:\"red\", color: \"red\"}} onClick={() => openModalDelete(item)}>삭제</Button>\r\n                                                            </TableCell> */}\r\n                                                        {authUser.role.index ? \r\n                                                            <TableCell align={\"center\"}>\r\n                                                                <Button variant={\"outlined\"} color={\"primary\"} style={{ whiteSpace: \"nowrap\" }} onClick={()=> openModalEdit(item['title'])} >수정</Button>\r\n                                                            </TableCell> : <TableCell></TableCell> }\r\n                                                        {authUser.role.index ? \r\n                                                            <TableCell align={\"center\"}>\r\n                                                                <Button variant=\"outlined\" style={{ whiteSpace: \"nowrap\", borderColor:\"red\", color: \"red\"}} onClick={() => openModalDelete(item['title'])}>삭제</Button>\r\n                                                            </TableCell> : <TableCell></TableCell> }\r\n                                                    </TableRow>\r\n                                        })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Box>\r\n                    <Snackbar open={snackbarFlag} autoHideDuration={3000} onClose={() => { setSnackbarFlag(false); }}>\r\n                        {successFlag ? <MuiAlert elevation={6} variant=\"filled\" severity=\"info\"> {message} {\" 성공\"} </MuiAlert> \r\n                                     : <MuiAlert elevation={6} variant=\"filled\" severity=\"error\"> {message}  {\" 실패\"} </MuiAlert> }\r\n                    </Snackbar>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog open={modalFlag}\r\n                    fullWidth\r\n                    onClose={() => closeModal()}\r\n            >\r\n                <DialogTitle>\r\n                    {\r\n                        flag == 1 ? \"파이프라인 설정\" :\r\n                            flag == 2 ? \"파이프라인 추가\" : \r\n                                flag == 3? \"파이프라인 수정\":\r\n                                    \"파이프라인 삭제\"\r\n                    }\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        flag == 1 ? <pre style={{fontFamily: \"godic\", fontSize:\"15px\"}}> {JSON.stringify(list[key], null, 2)} </pre> :\r\n                            flag == 2 ? <Box style={{width: \"100%\"}}>\r\n                                            <TextField\r\n                                                fullWidth inputRef={name} error={nameError}\r\n                                                placeholder={\"파이프라인 명칭을 입력해 주세요.\"}\r\n                                                label=\"파이프라인 명칭 입력\"\r\n                                                helperText=\"공백을 넣지 말아주세요\"\r\n                                            />\r\n                                            <br />\r\n                                            <AceEditor\r\n                                                ref={aceEditor}\r\n                                                id=\"aceEditor\"\r\n                                                mode=\"json\"\r\n                                                theme=\"kuroir\"\r\n                                                fontSize=\"15px\"\r\n                                                height={\"300px\"}\r\n                                                tabSize={2}\r\n                                                width=\"100%\"\r\n                                                setOptions={{ useWorker: false }}\r\n                                            /> \r\n                                        </Box>: \r\n                                flag == 3 ? <Box style={{width: \"100%\"}}>\r\n                                                <TextField\r\n                                                    fullWidth \r\n                                                    disabled={true} value={key}\r\n                                                    label=\"파이프라인 명칭\"\r\n                                                    helperText=\"명칭은 수정할 수 없습니다.\"\r\n                                                />\r\n                                                <br />\r\n                                                <AceEditor\r\n                                                    ref={aceEditor}\r\n                                                    mode=\"json\"\r\n                                                    theme=\"kuroir\"\r\n                                                    fontSize=\"15px\"\r\n                                                    height={\"300px\"}\r\n                                                    width=\"100%\"\r\n                                                    tabSize={2}\r\n                                                    setOptions={{ useWorker: false }}\r\n                                                    value={JSON.stringify(list[key], null, 2)}\r\n                                                /> \r\n                                            </Box>:\r\n                                    \"이 파이프라인을 삭제하시겠습니까?\"\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {\r\n                        flag == 1 ? <></> :\r\n                            flag == 2 ? <Button variant={\"outlined\"} color={\"primary\"} onClick={() => handleAddPipeline()}>추가</Button> : \r\n                                flag == 3 ? <Button variant={\"outlined\"} color={\"primary\"} onClick={() => handleEditPipeline()}>수정</Button> :\r\n                                <Button variant=\"outlined\" style={{ whiteSpace: \"nowrap\", borderColor:\"red\", color: \"red\"}} onClick={() => handleDeletePipeline()}>삭제</Button>\r\n                    }\r\n                    <Button onClick={() => closeModal()}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    list: store.pipelineReducers.pipelineList\r\n}))(Summary)"],"sourceRoot":""}