{"version":3,"sources":["pages/indices/collection/Summary.js"],"names":["Typography","styled","MuiTypography","spacing","positions","Card","MuiCard","Button","MuiButton","Grid","MuiGrid","Box","MuiBox","connect","store","authUser","dsearchReducers","collectionReducers","dispatch","collection","history","useHistory","console","log","replicas","useRef","refresh_interval","useState","moreMenu","setMoreMenu","openRemoveModal","setOpenRemoveModal","openEditModal","setOpenEditModal","openDsearchModal","setOpenDsearchModal","editName","setEditName","selectedAlias","setSelectedAlias","openUpdateAliasModal","setOpenUpdateAliasModal","toggleMoreMenu","event","currentTarget","indexA","indexB","Fragment","container","item","xs","my","style","cursor","onClick","push","mx","display","component","align","role","index","variant","anchorEl","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","backgroundColor","red","mt","md","lg","px","py","colSpan","fontSize","Object","keys","find","o","marginLeft","color","icon","label","alias","add","remove","width","height","borderRadius","float","Number","toLocaleString","join","fullWidth","deleteCollectionAction","then","response","setCollectionList","setTimeout","catch","error","value","onChange","target","placeholder","editCollectionSourceAction","flex","defaultValue","inputRef","blue","current","orange","addIndex","removeIndex","actions","editCollectionAliasAction","body","setCollection","handleUpdateAlias"],"mappings":"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","file":"static/js/72.ac970432.chunk.js","sourcesContent":["import React, {useState, useRef} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n    Box as MuiBox,\r\n    Button as MuiButton,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Chip,\r\n    Grid as MuiGrid,\r\n    Link,\r\n    Menu,\r\n    MenuItem,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    TextField,\r\n    Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\nimport {positions, spacing} from \"@material-ui/system\";\r\nimport {ArrowDropDown, Check} from \"@material-ui/icons\";\r\nimport {setCollection, deleteCollectionAction, setCollectionList, editCollectionSourceAction, editCollectionAliasAction} from \"../../../redux/actions/collectionActions\";\r\nimport {red, blue, orange} from \"@material-ui/core/colors\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing, positions);\r\nconst Card = styled(MuiCard)(spacing, positions);\r\nconst Button = styled(MuiButton)(spacing, positions);\r\nconst Grid = styled(MuiGrid)(spacing, positions);\r\nconst Box =  styled(MuiBox)(spacing, positions);\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     formControl: {\r\n//         minWidth: 250,\r\n//     },\r\n//     root: {\r\n//         flexGrow: 1,\r\n//         width: '100%',\r\n//     },\r\n//     edit: {\r\n//         width: '100%'\r\n//     }\r\n// }));\r\n\r\n\r\nfunction Summary({dispatch, authUser, collection}) {\r\n    const history = useHistory();\r\n\r\n    console.log(collection)\r\n    const replicas = useRef(null);\r\n    const refresh_interval = useRef(null);\r\n\r\n    const [moreMenu, setMoreMenu] = useState(null)\r\n    const [openRemoveModal, setOpenRemoveModal] = useState(false)\r\n    const [openEditModal, setOpenEditModal] = useState(false)\r\n    const [openDsearchModal, setOpenDsearchModal] = useState(false)\r\n    const [editName, setEditName] = useState(collection['name'])\r\n    const [selectedAlias, setSelectedAlias] = useState({})\r\n    const [openUpdateAliasModal, setOpenUpdateAliasModal] = useState(false)\r\n\r\n    function toggleMoreMenu(event) {\r\n        setMoreMenu(moreMenu === null ? event.currentTarget : null)\r\n    }\r\n\r\n    function handleDeleteCollection(event) {\r\n        toggleMoreMenu(event)\r\n        dispatch(deleteCollectionAction(collection['id'])).then(response => {\r\n            dispatch(setCollectionList())\r\n            setTimeout(() => history.push(\"../indices-collections\"), 500)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleEditNameCollection(event) {\r\n        toggleMoreMenu(event)\r\n        collection['name'] = editName;\r\n        dispatch(editCollectionSourceAction(collection['id'], collection)).then(response => {\r\n            dispatch(setCollectionList())\r\n            setTimeout(() => history.push(\"../indices-collections\"), 500)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleEditDsearchSettings(event) {\r\n        toggleMoreMenu(event)\r\n        \r\n        collection['replicas'] = replicas.current.value;\r\n        collection['refresh_interval'] = refresh_interval.current.value;\r\n        console.log(collection)\r\n        dispatch(editCollectionSourceAction(collection['id'], collection)).then(response => {\r\n            dispatch(setCollectionList())\r\n            setOpenDsearchModal(false)\r\n            // setTimeout(() => history.push(\"../indices-collections\"), 500)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleUpdateAlias() {\r\n        const alias       = selectedAlias['alias']\r\n        const addIndex    = selectedAlias['add']\r\n        const removeIndex = selectedAlias['remove']\r\n\r\n        let actions = []\r\n        actions.push({\r\n            add: {\r\n                index: addIndex,\r\n                alias: alias\r\n            }\r\n        })\r\n\r\n        if (removeIndex) {\r\n            actions.push({\r\n                remove: {\r\n                    index: removeIndex,\r\n                    alias: alias\r\n                }\r\n            })\r\n        }\r\n\r\n        dispatch(editCollectionAliasAction(actions))\r\n            .then(body => {\r\n                dispatch(setCollection(collection['id']))\r\n                setOpenUpdateAliasModal(false)\r\n            })\r\n\r\n    }\r\n\r\n    const indexA = collection['indexA']\r\n    const indexB = collection['indexB']\r\n    // authUser.role.index =false;\r\n    return (\r\n        <React.Fragment>\r\n            <br/>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid container>\r\n                        <Grid item xs={10}>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>컬렉션 이름</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    {collection['name']}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>컬렉션 아이디</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    {collection['baseId']}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>인덱스 템플릿</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Link style={{cursor: \"pointer\"}}\r\n                                          onClick={() => {history.push(`../indices-templates/${collection['baseId']}`)}}\r\n                                    >\r\n                                        {collection['baseId']}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>인덱스 패턴</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Link mx={1} style={{cursor: \"pointer\",\r\n                                        display: collection['indexA']['uuid'] ? \"inline\" : \"none\"\r\n                                    }}\r\n                                          onClick={() => {history.push(`../indices/${collection['indexA']['uuid']}`)}}\r\n                                    >\r\n                                        {collection['indexA']['index']}\r\n                                    </Link>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: collection['indexA']['uuid'] ? \"none\" : \"inline\"}}>\r\n                                        {collection['indexA']['index']}\r\n                                    </Box>\r\n                                    ,\r\n                                    <Link mx={1} style={{cursor: \"pointer\",\r\n                                        display: collection['indexB']['uuid'] ? \"inline\" : \"none\"\r\n                                    }}\r\n                                          onClick={() => {history.push(`../indices/${collection['indexB']['uuid']}`)}}\r\n                                    >\r\n                                        {collection['indexB']['index']}\r\n                                    </Link>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: collection['indexB']['uuid'] ? \"none\" : \"inline\"}}>\r\n                                        {collection['indexB']['index']}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>인덱스 설정</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: \"inline\"}}>\r\n                                         레플리카 갯수: {collection['replicas'] ? collection['replicas'] : \"1\"}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: \"inline\"}}>\r\n                                        리프레시 주기: {collection['refresh_interval'] ? collection['refresh_interval'] + \"s\" : \"1s\"}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={2} align={\"right\"}>\r\n                            {\r\n                                authUser.role.index ?\r\n                                    <React.Fragment>\r\n                                        <Button variant={\"outlined\"}\r\n                                                onClick={toggleMoreMenu}\r\n                                        >\r\n                                            더보기\r\n                                            <ArrowDropDown/>\r\n                                        </Button>\r\n                                        <Menu\r\n                                            anchorEl={moreMenu}\r\n                                            open={Boolean(moreMenu)}\r\n                                            onClose={toggleMoreMenu}\r\n                                            getContentAnchorEl={null}\r\n                                            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                                            transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                                        >\r\n                                            <MenuItem onClick={() => setOpenEditModal(true)}>\r\n                                                컬렉션 이름 변경\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={() => setOpenDsearchModal(true)}>\r\n                                                컬렉션 설정 변경\r\n                                            </MenuItem>\r\n                                            <MenuItem style={{backgroundColor: red[\"300\"]}} onClick={() => setOpenRemoveModal(true)}>\r\n                                                컬렉션 삭제\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </React.Fragment>\r\n                                    :\r\n                                    <React.Fragment>\r\n\r\n                                    </React.Fragment>\r\n                            }\r\n                            <Box>\r\n\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Box mt={5}>\r\n                        <Typography variant={\"h5\"}>\r\n                            스왑 인덱스\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={12} lg={6}>\r\n                            <Box px={5} py={2}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell  variant={\"head\"} component={\"th\"} colSpan={4} style={{fontSize: \"1.2em\"}} align={\"center\"}>\r\n                                                {indexA['index']}\r\n\r\n                                                {\r\n                                                    Object.keys(indexA['aliases']||{}).find(o => o === collection['baseId']) ?\r\n                                                        <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                            <Chip color=\"primary\" icon={<Check />} label={\"사용 중\"}/>\r\n                                                        </Box>\r\n                                                        :\r\n                                                        indexA['uuid'] ?\r\n                                                            <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                                <Chip icon={<Check />}\r\n                                                                      label={\"사용하기\"}\r\n                                                                      style={{cursor: \"pointer\"}}\r\n                                                                      onClick={() => {\r\n                                                                          setSelectedAlias({\r\n                                                                              alias: collection['baseId'],\r\n                                                                              add: indexA['index'],\r\n                                                                              remove: indexB['uuid'] ? indexB['index'] : null\r\n                                                                          })\r\n                                                                          setOpenUpdateAliasModal(true);\r\n                                                                      }}\r\n                                                                />\r\n                                                                {/*<Box component={\"span\"} style={{marginLeft: \"20px\"}}>*/}\r\n                                                                {/*    <Chip color=\"secondary\" icon={<Check />} label={\"사용하기\"}/>*/}\r\n                                                                {/*</Box>*/}\r\n                                                            </Box>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"none\" : \"table-row\"}}>\r\n                                            <TableCell colSpan={4} >\r\n                                                <Box align={\"center\"}>\r\n                                                    아직 인덱스가 생성되지 않았습니다.\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>상태</TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <Box style={{backgroundColor: indexA['health'], width: \"20px\", height: \"20px\", borderRadius: \"90px\", float: \"left\"}}> </Box>\r\n                                                <Box style={{marginLeft: \"30px\"}}>\r\n                                                    { indexA['health'] === \"green\" ? \"정상\" : indexA['health'] === \"yellow\" ? \"주의\" : \"에러\" }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리</TableCell>\r\n                                            <TableCell>{indexA['pri'] ? Number(indexA['pri']).toLocaleString() : \"-\"}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>레플리카</TableCell>\r\n                                            <TableCell>{indexA['rep'] ? Number(indexA['rep']).toLocaleString() : \"-\"}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>문서 수</TableCell>\r\n                                            <TableCell>{indexA['docsCount'] ? Number(indexA['docsCount']).toLocaleString() : \"0\"}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>삭제문서 수</TableCell>\r\n                                            <TableCell>{indexA['docsDeleted'] ? Number(indexA['docsDeleted']).toLocaleString() : \"0\"}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>스토리지 용량</TableCell>\r\n                                            <TableCell>{indexA['storeSize']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리 <br/> 스토리지용량</TableCell>\r\n                                            <TableCell>{indexA['priStoreSize']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>별칭</TableCell>\r\n                                            <TableCell>\r\n                                                {\r\n                                                    Object.keys(indexA['aliases']||{}).join(\",\")\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={12} lg={6}>\r\n                            <Box px={5} py={2}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell  variant={\"head\"} component={\"th\"} colSpan={4} style={{fontSize: \"1.2em\"}} align={\"center\"}>\r\n                                                {indexB['index']}\r\n\r\n                                                {\r\n                                                    Object.keys(indexB['aliases']||{}).find(o => o === collection['baseId']) ?\r\n                                                        <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                            <Chip color=\"primary\" icon={<Check />} label={\"사용 중\"}/>\r\n                                                        </Box>\r\n                                                        :\r\n                                                        indexB['uuid'] ?\r\n                                                            <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                                <Chip icon={<Check />}\r\n                                                                      label={\"사용하기\"}\r\n                                                                      style={{cursor: \"pointer\"}}\r\n                                                                      onClick={() => {\r\n                                                                          setSelectedAlias({\r\n                                                                              alias: collection['baseId'],\r\n                                                                              add: indexB['index'],\r\n                                                                              remove: indexA['uuid'] ? indexA['index'] : null\r\n                                                                          })\r\n                                                                          setOpenUpdateAliasModal(true);\r\n                                                                      }}\r\n                                                                />\r\n                                                            </Box>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"none\" : \"table-row\"}}>\r\n                                            <TableCell colSpan={4} >\r\n                                                <Box align={\"center\"}>\r\n                                                    아직 인덱스가 생성되지 않았습니다.\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>상태</TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <Box style={{backgroundColor: indexB['health'], width: \"20px\", height: \"20px\", borderRadius: \"90px\", float: \"left\"}}> </Box>\r\n                                                <Box style={{marginLeft: \"30px\"}}>\r\n                                                    { indexB['health'] === \"green\" ? \"정상\" : indexB['health'] === \"yellow\" ? \"주의\" : \"에러\" }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리</TableCell>\r\n                                            <TableCell>{indexB['pri'] ? Number(indexA['pri']).toLocaleString() : \"-\"}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>레플리카</TableCell>\r\n                                            <TableCell>{indexB['rep'] ? Number(indexB['rep']).toLocaleString() : \"-\"}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>문서 수</TableCell>\r\n                                            <TableCell>{indexB['docsCount'] ? Number(indexB['docsCount']).toLocaleString() : \"0\"}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>삭제문서 수</TableCell>\r\n                                            <TableCell>{indexB['docsDeleted'] ? Number(indexB['docsDeleted']).toLocaleString() : \"0\"}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>스토리지 용량</TableCell>\r\n                                            <TableCell>{indexB['storeSize']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리 <br/> 스토리지용량</TableCell>\r\n                                            <TableCell>{indexB['priStoreSize']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>별칭</TableCell>\r\n                                            <TableCell>\r\n                                                {\r\n                                                    Object.keys(indexB['aliases']||{}).join(\",\")\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog open={openRemoveModal} fullWidth={true}>\r\n                <DialogTitle>컬랙션 삭제</DialogTitle>\r\n                <DialogContent>\r\n                    <Box style={{color: red['500']}}> 선택하신 컬랙션을 삭제 하시겠습니까? </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button style={{backgroundColor: red['200']}}\r\n                            variant=\"contained\"\r\n                            onClick={handleDeleteCollection}\r\n                    >\r\n                        삭제\r\n                    </Button>\r\n                    <Button onClick={() => setOpenRemoveModal(false)}\r\n                            variant=\"contained\"\r\n                    >\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openEditModal} fullWidth={true}>\r\n                <DialogTitle>컬랙션 이름 변경</DialogTitle>\r\n                <DialogContent>\r\n                <TextField \r\n                    value={editName}\r\n                    onChange={(event) => setEditName(event.target.value)}\r\n                    fullWidth\r\n                    placeholder={\"변경할 이름을 입력해 주세요\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={handleEditNameCollection}\r\n                    >\r\n                        수정\r\n                    </Button>\r\n                    <Button onClick={() => setOpenEditModal(false)}\r\n                            variant=\"contained\"\r\n                    >\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openDsearchModal} fullWidth={true}>\r\n                <DialogTitle>디서치 설정</DialogTitle>\r\n                <DialogContent>\r\n                    <Box flex={true}>\r\n                        <b>레플리카 갯수 설정</b>\r\n                        <TextField \r\n                            fullWidth  \r\n                            defaultValue={collection['replicas'] ? collection['replicas'] : 1}  \r\n                            inputRef={replicas}\r\n                            placeholder={\"레플리카 갯수를 설정해 주세요\"} \r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <b>세그먼트 생성 주기</b>\r\n                        <TextField \r\n                            fullWidth\r\n                            placeholder={\"세그먼트 생성 주기를 입력해주세요\"} \r\n                            defaultValue={collection['refresh_interval'] ? collection['refresh_interval'] : 1} \r\n                            inputRef={refresh_interval} />\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{ backgroundColor: blue['200'] }}\r\n                        onClick={handleEditDsearchSettings}\r\n                        variant=\"contained\">\r\n                        수정\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setOpenDsearchModal(false)}\r\n                        variant=\"contained\">\r\n\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Dialog open={openUpdateAliasModal}\r\n                    fullWidth={true}\r\n                    onClose={() => setOpenUpdateAliasModal(false)}\r\n            >\r\n                <DialogTitle>별칭 교체</DialogTitle>\r\n                <DialogContent>\r\n                    별칭을 교체하시겠습니까?<br />\r\n                    <p style={{color: \"red\"}}>\r\n                        * 기존 스왑인덱스에 할당된 별칭은 제거 됩니다.\r\n                    </p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{ backgroundColor: orange['200'] }}\r\n                        onClick={() => handleUpdateAlias()}\r\n                        variant=\"contained\">\r\n                        교체\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setOpenUpdateAliasModal(false)}\r\n                        variant=\"contained\">\r\n\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    ...store.collectionReducers\r\n}))(Summary);\r\n"],"sourceRoot":""}