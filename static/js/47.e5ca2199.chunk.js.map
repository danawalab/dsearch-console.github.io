{"version":3,"sources":["../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/InputLabel/InputLabel.js","../node_modules/@material-ui/core/esm/FormLabel/FormLabel.js","../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js"],"names":["makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","InputLabel","React","props","ref","classes","className","_props$disableAnimati","disableAnimation","shrinkProp","margin","shrink","other","variant","_objectWithoutProperties","muiFormControl","useFormControl","filled","focused","adornedStart","fcs","formControlState","states","FormLabel","clsx","root","formControl","animated","marginDense","outlined","disabled","error","required","asterisk","withStyles","theme","display","transformOrigin","position","left","top","transform","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","name","children","_props$component","color","component","Component","concat","capitalize","palette","text","secondary","typography","body1","lineHeight","padding","primary","main","colorSecondary","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","_props$mouseEvent","mouseEvent","_props$touchEvent","touchEvent","onClickAway","movedRef","nodeRef","mountedRef","current","handleNodeRef","useForkRef","handleOwnRef","instance","setRef","ReactDOM","handleRef","handleClickAway","useEventCallback","event","doc","ownerDocument","documentElement","contains","target","handleTouchMove","mappedTouchEvent","addEventListener","removeEventListener","mappedMouseEvent","Snackbar","action","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","autoHideDuration","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","timerAutoHide","_React$useState","exited","setExited","handleClose","apply","setAutoHideTimer","autoHideDurationParam","clearTimeout","setTimeout","handlePause","handleResume","window","appear","in","createChainedFunction","timeout","direction","SnackbarContent","top1","bottom1","bottom","right","justifyContent","top3","bottom3","right3","left3","center","snackbar","alignItems","anchorOriginTopCenter","_defineProperty","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","_props$role","role","Paper","square","elevation","emphasis","type","backgroundColor","emphasize","background","default","body2","getContrastText","flexWrap","borderRadius","shape","flexGrow","minWidth","marginLeft","paddingLeft","marginRight"],"mappings":"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","file":"static/js/47.e5ca2199.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport FormLabel from '../FormLabel';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      transformOrigin: 'top left'\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Pseudo-class applied to the asterisk element. */\n    asterisk: {},\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // slight alteration to spec spacing to match visual spec result\n      transform: 'translate(0, 24px) scale(1)'\n    },\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      // Compensation for the `Input.inputDense` style.\n      transform: 'translate(0, 21px) scale(1)'\n    },\n\n    /* Styles applied to the `input` element if `shrink={true}`. */\n    shrink: {\n      transform: 'translate(0, 1.5px) scale(0.75)',\n      transformOrigin: 'top left'\n    },\n\n    /* Styles applied to the `input` element if `disableAnimation={false}`. */\n    animated: {\n      transition: theme.transitions.create(['color', 'transform'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"`. */\n    filled: {\n      // Chrome's autofill feature gives the input field a yellow background.\n      // Since the input field is behind the label in the HTML tree,\n      // the input field is drawn last and hides the label with an opaque background color.\n      // zIndex: 1 will raise the label above opaque background-colors of input.\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(12px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(12px, 17px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(12px, 10px) scale(0.75)',\n        '&$marginDense': {\n          transform: 'translate(12px, 7px) scale(0.75)'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      // see comment above on filled.zIndex\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(14px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(14px, 12px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(14px, -6px) scale(0.75)'\n      }\n    }\n  };\n};\nvar InputLabel = React.forwardRef(function InputLabel(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableAnimati = props.disableAnimation,\n      disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\n      margin = props.margin,\n      shrinkProp = props.shrink,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['margin', 'variant']\n  });\n  return React.createElement(FormLabel, _extends({\n    \"data-shrink\": shrink,\n    className: clsx(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, fcs.margin === 'dense' && classes.marginDense, {\n      'filled': classes.filled,\n      'outlined': classes.outlined\n    }[fcs.variant]),\n    classes: {\n      focused: classes.focused,\n      disabled: classes.disabled,\n      error: classes.error,\n      required: classes.required,\n      asterisk: classes.asterisk\n    },\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes = {\n  /**\n   * The contents of the `InputLabel`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * If `true`, the transition animation is disabled.\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, apply disabled class.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputLabel'\n})(InputLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.body1, {\n      lineHeight: 1,\n      padding: 0,\n      '&$focused': {\n        color: theme.palette.primary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused': {\n        color: theme.palette.secondary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Styles applied to the asterisk element. */\n    asterisk: {\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }\n  };\n};\nvar FormLabel = React.forwardRef(function FormLabel(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'label' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      required = props.required,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && React.createElement(\"span\", {\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport setRef from '../utils/setRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nvar ClickAwayListener = React.forwardRef(function ClickAwayListener(props, ref) {\n  var children = props.children,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent,\n      onClickAway = props.onClickAway;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var mountedRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  var handleNodeRef = useForkRef(nodeRef, ref); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    setRef(handleNodeRef, ReactDOM.findDOMNode(instance));\n  }, [handleNodeRef]);\n  var handleRef = useForkRef(children.ref, handleOwnRef);\n  var handleClickAway = useEventCallback(function (event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    // IE 11 support, which trigger the handleClickAway even after the unbind\n    if (!mountedRef.current) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    } // The child might render null.\n\n\n    if (!nodeRef.current) {\n      return;\n    } // Multi window support\n\n\n    var doc = ownerDocument(nodeRef.current);\n\n    if (doc.documentElement && doc.documentElement.contains(event.target) && !nodeRef.current.contains(event.target)) {\n      onClickAway(event);\n    }\n  });\n  var handleTouchMove = React.useCallback(function () {\n    movedRef.current = true;\n  }, []);\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, handleTouchMove, touchEvent]);\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return React.createElement(React.Fragment, null, React.cloneElement(children, {\n    ref: handleRef\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchStart', 'onTouchEnd', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, {}, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, {}, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, {}, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, {}, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, {}, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, {}, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, {}, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, {}, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, {}, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, {}, left3)))\n  };\n};\nvar Snackbar = React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['top', 'bottom']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);"],"sourceRoot":""}