{"version":3,"sources":["pages/indices/jdbc/index.js","utils.js","redux/actions/jdbcActions.js"],"names":["drivers","JdbcDrivers","JdbcDriversURL","Card","React","forwardRef","props","ref","innerRef","styled","MuiCard","spacing","Divider","MuiDivider","TextField","MuiTextField","JdbcTable","dispatch","authUser","JdbcList","handleAccessFlag","useState","jdbcSourceEditDialogOpen","setJdbcSourceEditDialogOpenAction","jdbcListIndex","setJdbcListIndex","processConnTest","setProcessConnTest","editId","useRef","editName","editDriver","editUser","editPassword","editURL","handleEditDialogClose","event","Fragment","width","align","role","index","hits","length","map","item","password","sourceAsMap","star","i","substring","key","id","style","whiteSpace","name","wordBreak","driver","url","user","variant","color","disabled","onClick","jdbcSourceObj","setJDBCAccessTest","setTimeout","accessTestFromTable","colSpan","open","onClose","JdbcSourceEdit","JdbcListIndex","backgroundColor","JdbcSource","deleteJdbcSource","flex","editJdbcSource","current","value","updateJdbcSource","p","display","m","alignItems","justifyContent","placeholder","fullWidth","defaultValue","inputRef","type","errorHandleJdbcSource","jdbcId","jdbcName","jdbcDriver","jdbcAddr","jdbcPort","jdbcDB","jdbcUser","jdbcPassword","jdbcParams","jdbcURL","setProvider","handleJdbcURL","error","size","onChange","address","port","db_name","params","JdbcCard","JdbcAccessTest","changedJdbcList","jdbcSourceDialogOpen","setjdbcSourceDialogOpenAction","jdbcProvider","setJdbcProvider","accessFlag","setAccessFlag","setErrorHandleJdbcSource","utils","sleep","then","setJDBCList","setJdbcURL","flag","handleSourceDialogClose","cursor","mb","target","change","jdbcdSourceObj","addJdbcSource","provider","addJdbcIndex","autoHideDuration","message","elevation","severity","connect","store","dsearchReducers","jdbcReducers","useEffect","title","gutterBottom","my","container","xs","ms","Promise","resolve","client","Client","call","uri","method","response","SET_JDBC_LIST","payload","data","SET_JDBC_ACCESS_TEST","console","log","SET_JDBC_ADD_RESULT","SET_JDBC_DELETE_RESULT","SET_JDBC_UPDATE_RESULT"],"mappings":"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","file":"static/js/59.b73e39bf.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {NavLink as RouterNavLink} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Helmet from 'react-helmet';\r\nimport utils from \"../../../utils\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {\r\n    Box, Button,\r\n    Dialog, DialogTitle,\r\n    Table, TableRow, TableCell, TableHead, TableBody,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Divider as MuiDivider,\r\n    Grid,\r\n    Link,\r\n    Select, MenuItem,\r\n    Typography,\r\n    TextField as MuiTextField,\r\n    DialogContent,\r\n    DialogActions,\r\n    Snackbar\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {spacing} from \"@material-ui/system\";\r\nimport { setJDBCList, setJDBCAccessTest, addJdbcIndex, deleteJdbcSource, updateJdbcSource } from '@actions/jdbcActions'\r\n\r\nconst drivers = [\"Altibase\", \"Oracle\", \"Mysql\"];\r\nconst JdbcDrivers = {\r\n    \"Altibase\": \"Altibase.jdbc.driver.AltibaseDriver\",\r\n    \"Oracle\": \"oracle.jdbc.driver.OracleDriver\",\r\n    \"Mysql\":\"com.mysql.cj.jdbc.Driver\"\r\n}\r\nconst JdbcDriversURL = {\r\n    \"Altibase\": \"jdbc:Altibase://\",\r\n    \"Oracle\": \"jdbc:oracle:thin:@\",\r\n    \"Mysql\":\"jdbc:mysql://\"\r\n}\r\n\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n    <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst TextField = styled(MuiTextField)(spacing);\r\n\r\nfunction JdbcTable({dispatch, authUser, JdbcList, handleAccessFlag}){\r\n    const [jdbcSourceEditDialogOpen, setJdbcSourceEditDialogOpenAction] = useState(false)\r\n    const [jdbcListIndex, setJdbcListIndex] = useState(-1)\r\n    const [processConnTest, setProcessConnTest] = useState(false)\r\n\r\n    let editId = useRef(\"\");\r\n    let editName = useRef(\"\");\r\n    let editDriver = useRef(\"\");\r\n    let editUser = useRef(\"\");\r\n    let editPassword = useRef(\"\");\r\n    let editURL = useRef(\"\");\r\n\r\n    const handleEditJdbcSource = (event) => {\r\n        let JdbcSource = JdbcList.hits.hits[jdbcListIndex];\r\n        let editJdbcSource = {};\r\n\r\n        editJdbcSource.id = editId.current.value;\r\n        editJdbcSource.name = editName.current.value;\r\n        editJdbcSource.driver = editDriver.current.value;\r\n        editJdbcSource.user = editUser.current.value;\r\n        if(editPassword.current.value.length !== 0 ) editJdbcSource.password = editPassword.current.value;\r\n        editJdbcSource.url = editURL.current.value;\r\n        let doc = {}\r\n        doc.doc = editJdbcSource;\r\n        dispatch(updateJdbcSource(JdbcSource.id, editJdbcSource));\r\n        setJdbcSourceEditDialogOpenAction(false)\r\n    }\r\n\r\n    const handleDeleteJdbcSource = (event) => {\r\n        let JdbcSource = JdbcList.hits.hits[jdbcListIndex];\r\n        dispatch(deleteJdbcSource(JdbcSource.id))\r\n        setJdbcSourceEditDialogOpenAction(false);\r\n    };\r\n\r\n    const handleEditDialogClose = (event) => {\r\n        setJdbcSourceEditDialogOpenAction(false)\r\n    };\r\n\r\n    const handleEditDialogOpen = (id) => {\r\n        setJdbcListIndex(id);\r\n        setJdbcSourceEditDialogOpenAction(true)\r\n    };\r\n\r\n    function accessTestFromTable(item){\r\n        setProcessConnTest(true)\r\n\r\n        let jdbcSourceObj = {};\r\n        jdbcSourceObj.driver = item.sourceAsMap.driver;\r\n        jdbcSourceObj.user = item.sourceAsMap.user;\r\n        jdbcSourceObj.password = item.sourceAsMap.password;\r\n        jdbcSourceObj.url = item.sourceAsMap.url;\r\n        dispatch(setJDBCAccessTest(jdbcSourceObj))\r\n        setTimeout(() => {\r\n            setProcessConnTest(false)\r\n            handleAccessFlag(true);\r\n        }, 500)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Table>\r\n                <colgroup>\r\n                    <col width=\"1%\" />\r\n                    <col width=\"10%\" />\r\n                    <col width=\"13%\" />\r\n                    <col width=\"20%\" />\r\n                    <col width=\"30%\" />\r\n                    <col width=\"10%\" />\r\n                    <col width=\"10%\" />\r\n                    <col width=\"5%\" />\r\n                </colgroup>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>#</TableCell>\r\n                        <TableCell>아이디</TableCell>\r\n                        <TableCell>이름</TableCell>\r\n                        <TableCell>드라이버</TableCell>\r\n                        <TableCell>URL</TableCell>\r\n                        <TableCell>사용자</TableCell>\r\n                        <TableCell>비밀번호</TableCell>\r\n                        <TableCell align={\"center\"}>테스트</TableCell>\r\n                        {authUser.role.index ? <TableCell align={\"center\"}> 액션</TableCell> : null}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {JdbcList.hits.hits.length > 0 ?  (\r\n                        JdbcList.hits.hits.map((item, index)=>{\r\n                            let password = item.sourceAsMap.password;\r\n                            let star = \"\";\r\n\r\n                            for(let i = 0; i < password.length-3; i++){\r\n                                star += \"*\";\r\n                            }\r\n\r\n                            password = password.substring(0, 2) + star + password.substring(password.length-1, password.length);\r\n                            return <TableRow key={item.sourceAsMap.id}>\r\n                                <TableCell style={{whiteSpace: \"nowrap\"}}>{index + 1}</TableCell>\r\n                                <TableCell style={{whiteSpace: \"nowrap\"}}>{item.sourceAsMap.id}</TableCell>\r\n                                <TableCell style={{whiteSpace: \"nowrap\"}}>{item.sourceAsMap.name}</TableCell>\r\n                                <TableCell style={{whiteSpace: \"nowrap\"}} style={{wordBreak:\"break-all\"}}>{item.sourceAsMap.driver}</TableCell>\r\n                                <TableCell style={{whiteSpace: \"nowrap\"}} style={{wordBreak:\"break-all\"}}>{item.sourceAsMap.url}</TableCell>\r\n                                <TableCell style={{whiteSpace: \"nowrap\"}}>{item.sourceAsMap.user}</TableCell>\r\n                                <TableCell style={{whiteSpace: \"nowrap\"}}>{password}</TableCell>\r\n                                {/* <TableCell>{item._source.password}</TableCell> */}\r\n                                <TableCell style={{whiteSpace: \"nowrap\"}}>\r\n                                    <Button variant={\"outlined\"} color={\"primary\"} disabled={processConnTest} onClick={()=>accessTestFromTable(item)}> 연결테스트 </Button>\r\n                                </TableCell>\r\n                                {authUser.role.index ?\r\n                                    <TableCell>\r\n                                        <Button variant={\"outlined\"} id={index} color={\"primary\"} style={{whiteSpace: \"nowrap\"}} onClick={() => handleEditDialogOpen(index)}>수정</Button>\r\n                                    </TableCell>\r\n                                    :\r\n                                    <TableCell></TableCell>\r\n                                }\r\n                            </TableRow>})):(<TableRow><TableCell align=\"center\" colSpan={9}>{\"현재 등록된 JDBC가 없습니다.\"}</TableCell></TableRow>)}\r\n\r\n                </TableBody>\r\n            </Table>\r\n            <Dialog open={jdbcSourceEditDialogOpen} onClose={handleEditDialogClose} >\r\n                <DialogTitle id=\"dialog-title\">{\"JDBC 소스\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <label>설정</label>\r\n                    <Divider></Divider>\r\n                    <JdbcSourceEdit\r\n                        JdbcList={JdbcList}\r\n                        JdbcListIndex={jdbcListIndex}\r\n                        editId = {editId}\r\n                        editName = {editName}\r\n                        editDriver ={editDriver}\r\n                        editUser = {editUser}\r\n                        editPassword = {editPassword}\r\n                        editURL = {editURL}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions >\r\n                    <Button variant=\"contained\" style={{backgroundColor:\"red\", color:\"white\"}} onClick={handleDeleteJdbcSource}>삭제</Button>\r\n                    <div style={{flex: '1 0 0'}} />\r\n                    <Button variant=\"contained\" color=\"default\" onClick={handleEditDialogClose}>닫기</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleEditJdbcSource}>저장</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction JdbcSourceEdit({JdbcList, JdbcListIndex, editId, editName, editDriver, editURL, editUser, editPassword}){\r\n    let JdbcSource = JdbcList.hits.hits[JdbcListIndex];\r\n\r\n    return(\r\n        <Box p={2}>\r\n            <Box display=\"flex\" m={3}  alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>아이디</Typography>\r\n                <TextField placeholder=\"ID\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap||{}).id} inputRef={editId} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>이름</Typography>\r\n                <TextField placeholder=\"Name\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap|| {}).name} inputRef={editName}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{ width: \"150px\" }}>드라이버</Typography>\r\n                <TextField placeholder=\"Driver\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap||{}).driver} inputRef={editDriver}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>URL</Typography>\r\n                <TextField placeholder=\"jdbc:Altibase://localhost:3306/\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap||{}).url} inputRef={editURL}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>사용자</Typography>\r\n                <TextField placeholder=\"USER\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap||{}).user} inputRef={editUser}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>비밀번호</Typography>\r\n                <TextField placeholder=\"PASSWORD (LEAVE BLANK IF YOU DON'T WANT CHANGE)\" fullWidth variant=\"outlined\" type=\"password\" inputRef={editPassword}/>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction JdbcSource({errorHandleJdbcSource, jdbcId, jdbcName, jdbcDriver, jdbcAddr, jdbcPort, jdbcDB, jdbcUser, jdbcPassword, jdbcParams, jdbcURL, setProvider, handleJdbcURL}){\r\n    return (\r\n        <Box p={2}>\r\n            <Box display=\"flex\" m={3}  alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>아이디</Typography>\r\n                <TextField error={errorHandleJdbcSource.id} id=\"jdbcSourceId\" size=\"small\" placeholder=\"ID\" fullWidth variant=\"outlined\"  inputRef={jdbcId}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>이름</Typography>\r\n                <TextField error={errorHandleJdbcSource.name} id=\"jdbcSourceName\" size=\"small\" placeholder=\"Name\" fullWidth variant=\"outlined\" inputRef={jdbcName}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{ width: \"150px\" }}>DB제공자</Typography>\r\n                <Select id=\"jdbcSourceDriver\" fullWidth onChange={setProvider} defaultValue=\"\">\r\n                    {drivers.map((item, index) => {\r\n                        if(index === 0) return <MenuItem key={item} value={item}> {item} Driver</MenuItem>;\r\n                        return <MenuItem key={item} value={item}> {item} Driver</MenuItem>;\r\n                    })}\r\n                </Select>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>드라이버</Typography>\r\n                <TextField error={errorHandleJdbcSource.driver} id=\"jdbcSourceDbSupport\" size=\"small\" fullWidth variant=\"outlined\" inputRef={jdbcDriver} onChange={handleJdbcURL}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>호스트주소</Typography>\r\n                <TextField error={errorHandleJdbcSource.address} id=\"jdbcSourceHostAddress\" size=\"small\" placeholder=\"127.0.0.1\" fullWidth variant=\"outlined\" inputRef={jdbcAddr} onChange={handleJdbcURL} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>포트</Typography>\r\n                <TextField error={errorHandleJdbcSource.port} id=\"jdbcSourcePort\" size=\"small\" placeholder=\"3306\" fullWidth variant=\"outlined\" inputRef={jdbcPort} onChange={handleJdbcURL} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>DB명</Typography>\r\n                <TextField error={errorHandleJdbcSource.db_name} id=\"jdbcSourceDbName\" size=\"small\" fullWidth variant=\"outlined\" inputRef={jdbcDB} onChange={handleJdbcURL}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>사용자</Typography>\r\n                <TextField error={errorHandleJdbcSource.user} id=\"jdbcSourceUser\" size=\"small\" placeholder=\"USER\" fullWidth variant=\"outlined\" inputRef ={jdbcUser} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>비밀번호</Typography>\r\n                <TextField error={errorHandleJdbcSource.password} id=\"jdbcSourcePassword\" type=\"password\" size=\"small\" placeholder=\"PASSWORD\" fullWidth variant=\"outlined\" inputRef={jdbcPassword} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>JDBC파라미터</Typography>\r\n                <TextField error={errorHandleJdbcSource.params} id=\"jdbcSourceParams\" size=\"small\" fullWidth variant=\"outlined\" inputRef={jdbcParams} placeholder=\"characterEncoding=utf-8\" onChange={handleJdbcURL}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>URL</Typography>\r\n                {/* <TextField error={errorHandleJdbcSource.url} disabled id=\"jdbcSourceURL\" size=\"small\" placeholder=\"jdbc:mysql://\" fullWidth variant=\"outlined\" inputRef={jdbcURL}/> */}\r\n                <TextField error={errorHandleJdbcSource.url} id=\"jdbcSourceURL\" size=\"small\" placeholder=\"jdbc:mysql://\" fullWidth variant=\"outlined\" value={jdbcURL}/>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nfunction JdbcCard({dispatch, authUser, JdbcList, JdbcAccessTest, changedJdbcList}) {\r\n    const [jdbcSourceDialogOpen, setjdbcSourceDialogOpenAction] = useState(false)\r\n    const [jdbcProvider, setJdbcProvider] = useState(\"\");\r\n    const [accessFlag, setAccessFlag] = useState(false);\r\n    const [errorHandleJdbcSource, setErrorHandleJdbcSource] = useState({\r\n        id: false,\r\n        name: false,\r\n        driver: false,\r\n        address: false,\r\n        port: false,\r\n        db_name: false,\r\n        user: false,\r\n        password: false,\r\n        params: false,\r\n        url: false\r\n    });\r\n\r\n    if(changedJdbcList) {\r\n        utils.sleep(1000).then(() => {dispatch(setJDBCList());})\r\n    }\r\n\r\n    let jdbcId = useRef(\"\");\r\n    let jdbcName = useRef(\"\");\r\n    let jdbcDriver = useRef(\"\");\r\n    let jdbcAddr = useRef(\"\");\r\n    let jdbcPort = useRef(\"\");\r\n    let jdbcDB = useRef(\"\");\r\n    let jdbcUser = useRef(\"\");\r\n    let jdbcPassword = useRef(\"\");\r\n    let jdbcParams = useRef(\"\");\r\n    // let jdbcURL = useRef(\"\");\r\n    let [jdbcURL, setJdbcURL] = useState(\"\");\r\n\r\n    function handleJdbcURL(){\r\n        let url = \"\";\r\n        if(jdbcParams.current.value !== null && jdbcParams.current.value.length > 0)\r\n            url = JdbcDriversURL[jdbcProvider] + jdbcAddr.current.value + \":\"+ jdbcPort.current.value + \"/\" + jdbcDB.current.value + \"?\" + jdbcParams.current.value;\r\n        else\r\n            url = JdbcDriversURL[jdbcProvider] + jdbcAddr.current.value + \":\"+ jdbcPort.current.value + \"/\" + jdbcDB.current.value;\r\n        setJdbcURL(url);\r\n    }\r\n\r\n    function handleAccessFlag(flag){\r\n        setAccessFlag(flag)\r\n    }\r\n\r\n    function setProvider(event, index){\r\n        jdbcDriver.current.value = JdbcDrivers[event.target.value]\r\n        setJdbcProvider(event.target.value);\r\n    }\r\n\r\n    const handleSourceDialogClose = (event) => {\r\n        setjdbcSourceDialogOpenAction(false)\r\n    };\r\n\r\n    const handleSourceDialogOpen = (event) => {\r\n        /* 에러 초기화 */\r\n        setErrorHandleJdbcSource({\r\n            id: false,\r\n            name: false,\r\n            driver: false,\r\n            address: false,\r\n            port: false,\r\n            db_name: false,\r\n            user: false,\r\n            password: false,\r\n            params: false,\r\n            url: false\r\n        })\r\n        setjdbcSourceDialogOpenAction(true)\r\n    };\r\n    \r\n    const accessTest = (event) => {\r\n        let flag = false;\r\n        let change = {\r\n            id: false,\r\n            name: false,\r\n            driver: false,\r\n            address: false,\r\n            port: false,\r\n            db_name: false,\r\n            user: false,\r\n            password: false,\r\n            params: false,\r\n            url: false\r\n        };\r\n        \r\n        if( jdbcId.current.value.length === 0) { flag = true; change.id = true; }\r\n        if(jdbcName.current.value.length === 0){ flag = true; change.name = true; }\r\n        if(jdbcDriver.current.value.length === 0){ flag = true; change.driver = true; }\r\n        if(jdbcAddr.current.value.length === 0){ flag = true; change.address = true; }\r\n        if(jdbcPort.current.value.length === 0){ flag = true; change.port = true; }\r\n        if(jdbcUser.current.value.length === 0){ flag = true; change.user = true; }\r\n        if(jdbcPassword.current.value.length === 0){ flag = true; change.password = true; }\r\n        // if(jdbcURL.current.value.length === 0) { flag = true; change.url = true; }\r\n        if(jdbcDB.current.value.length === 0) { flag = true; change.db_name = true; }\r\n        if(jdbcURL.length === 0) { flag = true; change.url = true; }\r\n\r\n        if(flag){\r\n            setErrorHandleJdbcSource(change);\r\n            return;\r\n        }\r\n\r\n        let jdbcdSourceObj = {};\r\n        jdbcdSourceObj.driver = jdbcDriver.current.value;\r\n        jdbcdSourceObj.user = jdbcUser.current.value;\r\n        jdbcdSourceObj.password = jdbcPassword.current.value;\r\n        jdbcdSourceObj.url = jdbcURL\r\n        dispatch(setJDBCAccessTest(jdbcdSourceObj)).then(() => {\r\n            setAccessFlag(true);\r\n        });\r\n    }\r\n\r\n    /* 연결테스트를 하지 않아도 추가할 수 있어야 함*/\r\n    const addJdbcSouce = (event) => {\r\n        let flag = false;\r\n        let change = {\r\n            id: false,\r\n            name: false,\r\n            driver: false,\r\n            address: false,\r\n            port: false,\r\n            db_name: false,\r\n            user: false,\r\n            password: false,\r\n            params: false,\r\n            url: false\r\n        };\r\n        \r\n        if( jdbcId.current.value.length === 0) { flag = true; change.id = true; }\r\n        if(jdbcName.current.value.length === 0){ flag = true; change.name = true; }\r\n        if(jdbcDriver.current.value.length === 0){ flag = true; change.driver = true; }\r\n        if(jdbcAddr.current.value.length === 0){ flag = true; change.address = true; }\r\n        if(jdbcPort.current.value.length === 0){ flag = true; change.port = true; }\r\n        if(jdbcUser.current.value.length === 0){ flag = true; change.user = true; }\r\n        if(jdbcPassword.current.value.length === 0){ flag = true; change.password = true; }\r\n        if(jdbcDB.current.value.length === 0) { flag = true; change.db_name = true; }\r\n        if(jdbcURL.length === 0) { flag = true; change.url = true; }\r\n        // if(jdbcURL.current.value.length === 0) { flag = true; change.url = true; }\r\n\r\n        if(flag){\r\n            setErrorHandleJdbcSource(change);\r\n            return;\r\n        }\r\n        \r\n        let addJdbcSource = {};\r\n        addJdbcSource.id = jdbcId.current.value\r\n        addJdbcSource.name =  jdbcName.current.value\r\n        addJdbcSource.provider = jdbcProvider;\r\n        addJdbcSource.driver = jdbcDriver.current.value;\r\n        addJdbcSource.address = jdbcAddr.current.value;\r\n        addJdbcSource.port = jdbcPort.current.value;\r\n        addJdbcSource.db_name = jdbcDB.current.value;\r\n        addJdbcSource.user = jdbcUser.current.value;\r\n        addJdbcSource.password = jdbcPassword.current.value;\r\n        addJdbcSource.params = jdbcParams.current.value;\r\n        addJdbcSource.url = jdbcURL;\r\n        setjdbcSourceDialogOpenAction(false);\r\n        dispatch(addJdbcIndex(addJdbcSource))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box align={'right'}>\r\n                {\r\n                    authUser.role.index ?\r\n                    <Link onClick={handleSourceDialogOpen}\r\n                          style={{cursor: \"pointer\"}}\r\n                          color={\"primary\"}>\r\n                        JDBC 추가\r\n                    </Link>\r\n                    :\r\n                    <></>\r\n                }\r\n            </Box>\r\n            <br/>\r\n\r\n            <Card mb={6}>\r\n                <CardContent>\r\n                    <JdbcTable dispatch={dispatch} authUser={authUser} JdbcList={JdbcList} handleAccessFlag={handleAccessFlag} changedJdbcList={changedJdbcList}></JdbcTable>\r\n                    <Dialog open={jdbcSourceDialogOpen} onClose={handleSourceDialogClose} >\r\n                        <DialogTitle id=\"dialog-title\">{\"JDBC 소스\"}</DialogTitle>\r\n                        <DialogContent style={{ width: \"100%\" }}>\r\n                            <label>설정</label>\r\n                            <Divider />\r\n                            <JdbcSource\r\n                                errorHandleJdbcSource={errorHandleJdbcSource}\r\n                                jdbcId={jdbcId}\r\n                                jdbcName={jdbcName}\r\n                                jdbcDriver ={jdbcDriver}\r\n                                handleJdbcURL = {handleJdbcURL}\r\n                                setProvider = {setProvider}\r\n                                jdbcAddr ={jdbcAddr}\r\n                                jdbcPort = {jdbcPort}\r\n                                jdbcDB = {jdbcDB}\r\n                                jdbcUser = {jdbcUser}\r\n                                jdbcPassword = {jdbcPassword}\r\n                                jdbcParams = {jdbcParams}\r\n                                jdbcURL = {jdbcURL}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button variant=\"contained\" color=\"default\" onClick={handleSourceDialogClose}>닫기</Button>\r\n                            <Button variant=\"outlined\" onClick={accessTest}>연결테스트</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={addJdbcSouce}>추가</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Snackbar open={accessFlag} autoHideDuration={3000} onClose={() => { handleAccessFlag(false); JdbcAccessTest.message = false; }}>\r\n                        {JdbcAccessTest.message ?\r\n                            <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">{\"연결테스트 성공\"} </MuiAlert> : <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">{\"연결테스트 실패\"}</MuiAlert>}\r\n                    </Snackbar>\r\n                </CardContent>\r\n            </Card>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction JDBC({dispatch, authUser, JdbcList, JdbcAccessTest, changedJdbcList}) {\r\n    useEffect(() => {\r\n        dispatch(setJDBCList())\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Helmet title=\"JDBC\"/>\r\n            <Typography variant=\"h3\" gutterBottom display=\"inline\">JDBC</Typography>\r\n            <Divider my={6}/>\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12}>\r\n                    <JdbcCard dispatch={dispatch} authUser={authUser} JdbcList={JdbcList} JdbcAccessTest={JdbcAccessTest} changedJdbcList={changedJdbcList} />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    JdbcList: store.jdbcReducers.JdbcList,\r\n    JdbcAccessTest: store.jdbcReducers.JdbcAccessTest,\r\n    changedJdbcList: store.jdbcReducers.changedJdbcList\r\n}))(JDBC);\r\n\r\n","const utils ={\r\n    sleep:(ms) => new Promise(resolve => setTimeout(resolve, ms)),\r\n\r\n\r\n\r\n}\r\n\r\nexport default utils","import {SET_JDBC_INDEX, SET_JDBC_LIST, SET_JDBC_ACCESS_TEST, SET_JDBC_ADD_RESULT, SET_JDBC_DELETE_RESULT, SET_JDBC_UPDATE_RESULT} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setJDBCList = () => dispatch => client.call({\r\n    uri: \"/jdbc/list\",\r\n    method: \"GET\"\r\n}).then(response => dispatch({type: SET_JDBC_LIST, payload: response.data}))\r\n\r\nexport const setJDBCAccessTest = (data) => dispatch => client.call({\r\n    uri: \"/jdbc/\",\r\n    method: \"POST\",\r\n    data: data\r\n}).then(response => {\r\n    dispatch({type:SET_JDBC_ACCESS_TEST , payload: response.data}); console.log(response);\r\n    return true\r\n})\r\n\r\nexport const addJdbcIndex = (data) => dispatch => client.call({\r\n    uri: \"/jdbc/add\",\r\n    method: 'PUT',\r\n    data: data\r\n}).then(response => dispatch({ type: SET_JDBC_ADD_RESULT, payload: response.data}))\r\n\r\nexport const deleteJdbcSource = (id) => dispatch => client.call({\r\n    uri: \"/jdbc/delete/\" + id,\r\n    method: 'DELETE'\r\n}).then(response => dispatch({type: SET_JDBC_DELETE_RESULT, payload: response.data}))\r\n\r\nexport const updateJdbcSource = (id, data) => dispatch => client.call({\r\n    uri: \"/jdbc/update/\" + id,\r\n    method: 'POST',\r\n    data: data\r\n}).then(response => dispatch({type: SET_JDBC_UPDATE_RESULT, payload: response.data}))"],"sourceRoot":""}