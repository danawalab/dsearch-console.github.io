{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","redux/actions/pipelineActions.js","pages/indices/pipeline/TestPipeline.js"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","makeStyles","stylesOrCreator","options","arguments","length","makeStylesWithoutDefault","defaultTheme","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","forEach","key","Typography","display","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","client","Client","setPipelineAction","pipeline","dispatch","SET_PIPELINE","payload","getPipeline","item","jsonData","call","uri","method","headers","data","then","response","SET_PIPELINE_RESULT","getPipelineDetail","setPipelineList","SET_PIPELINE_LIST","deletePipeline","DELETE_PIPELINE","addPipeline","ADD_PIPELINE","editPipeline","useStyles","formControl","minWidth","aceEditorTemplate","connect","store","authUser","dsearchReducers","pipelineList","pipelineReducers","result","aceEditor","useRef","useState","setChecked","progress","setProgress","setResult","snackbarFlag","setSnackbarFlag","handleTest","JSON","stringify","current","editor","getValue","str","parse","e","isJson","catch","error","useEffect","Fragment","container","xs","md","lg","justifyContent","mx","mb","labelId","Object","keys","sort","map","p","i","style","border","mode","tabSize","defaultValue","setOptions","useWorker","align","mt","fullWidth","variant","onClick","overflow","fontFamily","open","autoHideDuration","onClose","elevation","severity"],"mappings":"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","file":"static/js/42.fefebd4f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import {SET_PIPELINE_LIST,SET_PIPELINE_RESULT, SET_PIPELINE, DELETE_PIPELINE, ADD_PIPELINE} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setPipelineAction = (pipeline) => dispatch => dispatch({type: SET_PIPELINE, payload: pipeline})\r\n\r\nexport const getPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"POST\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: SET_PIPELINE_RESULT, payload: response.data}))\r\n\r\nexport const getPipelineDetail = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item + \"/detail\",\r\n    method: \"POST\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: SET_PIPELINE_RESULT, payload: response.data}))\r\n\r\nexport const setPipelineList = () => dispatch => client.call({\r\n    uri: \"/pipeline/list\",\r\n    method: \"GET\"\r\n}).then(response => dispatch({type: SET_PIPELINE_LIST, payload: response.data}))\r\n\r\nexport const deletePipeline = (item) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"DELETE\"\r\n}).then(response => dispatch({type: DELETE_PIPELINE, payload: response.data}))\r\n\r\nexport const addPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"PUT\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: ADD_PIPELINE, payload: response.data}))\r\n\r\nexport const editPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"PUT\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: ADD_PIPELINE, payload: response.data}))\r\n\r\n","import React, {useEffect, useState, useRef} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Box, CircularProgress,\r\n    Card,\r\n    CardContent,\r\n    Button,Hidden,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell, Link,\r\n    TableBody, Grid,\r\n    Checkbox, Snackbar,FormControlLabel,\r\n    FormControl, InputLabel, MenuItem, Select, Typography, TextField\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport { setPipelineAction, setPipelineList, getPipeline, getPipelineDetail } from '@actions/pipelineActions'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250\r\n    }\r\n}));\r\n\r\nconst aceEditorTemplate = {\r\n    \"docs\": [\r\n      {\r\n        \"_source\": {\r\n          \"field1\": \"<h1>hello world</h1>\",\r\n          \"field2\": \"<h2>hello world</h2>\",\r\n          \"field3\": \"<h3>hello world</h3>\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\nfunction TestPipeline({ dispatch, pipeline, pipelineList}) {\r\n    const classes = useStyles()\r\n    const aceEditor = useRef(aceEditorTemplate);\r\n    const [checked, setChecked] = useState(false);\r\n    const [progress, setProgress] = useState(false);\r\n    const [result, setResult] = useState({});\r\n    const [snackbarFlag, setSnackbarFlag] = useState(false)\r\n\r\n    const handleChange = (event) => {\r\n        dispatch(setPipelineAction(event.target.value))\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setPipelineList())\r\n    }, [])\r\n\r\n    function isJson(str) {\r\n        try {\r\n            let json = JSON.parse(str);\r\n            return (typeof json === 'object');\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function handleTest(){\r\n        if( pipeline.length == 0 ){\r\n            setSnackbarFlag(true)\r\n            return;\r\n        }\r\n\r\n        if( JSON.stringify(aceEditor.current.editor.getValue()).length > 0 && isJson(aceEditor.current.editor.getValue())){\r\n            setProgress(true)\r\n            if( checked ){\r\n                dispatch(getPipelineDetail(pipeline, aceEditor.current.editor.getValue()))\r\n                .then((result) => {\r\n                    setProgress(false)\r\n                    setResult(result.payload);\r\n                })\r\n                .catch((error) => {\r\n                    setProgress(false)\r\n                })\r\n            }else{\r\n                dispatch(getPipeline(pipeline, aceEditor.current.editor.getValue())) \r\n                .then((result) => {\r\n                    setProgress(false)\r\n                    setResult(result.payload);\r\n                })\r\n                .catch((error) => {\r\n                    setProgress(false)\r\n                })\r\n            }\r\n        } else {\r\n            setSnackbarFlag(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <br />\r\n            <Card>\r\n                <CardContent>\r\n                    <Box>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={12} lg={5}>\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mx={3} mb={2}>\r\n                                    <FormControl className={classes.formControl} >\r\n                                        <InputLabel id=\"pipeline-select\">파이프라인</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"pipeline-select\"\r\n                                            id=\"pipeline-select\"\r\n                                            value={pipeline}\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            {\r\n                                                pipelineList == null || pipelineList == undefined || Object.keys(pipelineList).length == 0 ?\r\n                                                    <></>\r\n                                                    : Object.keys(pipelineList).sort().map((p, i) => (<MenuItem key={i} value={p}>{p}</MenuItem>))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox checked={checked} onChange={() => {setChecked(!checked)}} name=\"자세히\" />}\r\n                                        label=\"자세히\"\r\n                                    />\r\n                                </Box>\r\n                                <Box mx={3} style={{ border: \"1px solid silver\" }}>\r\n                                    <AceEditor\r\n                                        ref={aceEditor}\r\n                                        id=\"aceEditor\"\r\n                                        mode=\"json\"\r\n                                        theme=\"kuroir\"\r\n                                        fontSize=\"15px\"\r\n                                        height={\"400px\"}\r\n                                        tabSize={2}\r\n                                        defaultValue={JSON.stringify(aceEditorTemplate, null, 2) }\r\n                                        // placeholder={JSON.stringify(aceEditorPlaceHolder, null, 2) }\r\n                                        width=\"100%\"\r\n                                        setOptions={{ useWorker: false }}\r\n                                    />\r\n                                </Box>\r\n                                <Box align=\"right\" mx={3} mt={3} align={\"center\"}>\r\n                                    {progress? <CircularProgress /> : <Button fullWidth variant=\"outlined\" color=\"primary\" onClick={() => handleTest()}> 테스트 </Button>}\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12} lg={7}>\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mx={3} mb={8}>\r\n                                    <Typography color={\"textPrimary\"} variant=\"h6\" >파이프라인 테스트 결과</Typography>\r\n                                </Box>\r\n                                <Box style={{ overflow: \"scroll\", border: \"1px solid silver\" }} mx={3} id=\"move\">\r\n                                    <pre style={{height:\"400px\", width:\"100%\", fontFamily: \"godic\", fontSize:\"15px\"}}>\r\n                                        {JSON.stringify(result).length === 2 ? \"입력한 내용이 없습니다.\" : JSON.stringify(result,null,2)}\r\n                                    </pre>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Snackbar open={snackbarFlag} autoHideDuration={3000} onClose={() => { setSnackbarFlag(false); }}>\r\n                        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\"> {\"인덱스를 선택하였는지 혹은 json 을 제대로 입력하였는지 확인해주세요\"} </MuiAlert> \r\n                    </Snackbar>\r\n                </CardContent>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    pipelineList: store.pipelineReducers.pipelineList,\r\n    pipeline: store.pipelineReducers.pipeline,\r\n    result: store.pipelineReducers.result\r\n}))(TestPipeline)"],"sourceRoot":""}