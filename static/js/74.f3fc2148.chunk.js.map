{"version":3,"sources":["pages/indices/collection/Summary.js"],"names":["Typography","styled","MuiDivider","spacing","positions","MuiTypography","Card","MuiCard","Button","MuiButton","Grid","MuiGrid","Box","MuiBox","useStyles","makeStyles","theme","formControl","minWidth","root","flexGrow","width","edit","connect","store","authUser","dsearchReducers","collectionReducers","dispatch","collection","history","useHistory","useState","moreMenu","setMoreMenu","openRemoveModal","setOpenRemoveModal","openEditModal","setOpenEditModal","editName","setEditName","toggleMoreMenu","event","currentTarget","indexA","indexB","Fragment","container","item","xs","my","style","cursor","onClick","push","mx","display","component","align","role","index","variant","anchorEl","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","backgroundColor","red","mt","md","lg","px","py","colSpan","fontSize","Object","keys","find","o","marginLeft","color","icon","label","height","borderRadius","float","join","fullWidth","deleteCollectionAction","then","response","setCollectionList","setTimeout","catch","error","console","log","value","onChange","target","placeholder","editCollectionSourceAction"],"mappings":"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","file":"static/js/74.f3fc2148.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n    Box as MuiBox,\r\n    Button as MuiButton,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Chip,\r\n    Divider as MuiDivider,\r\n    Grid as MuiGrid,\r\n    Link,\r\n    Menu,\r\n    MenuItem,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    TextField,\r\n    Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {positions, spacing} from \"@material-ui/system\";\r\nimport {ArrowDropDown, Check} from \"@material-ui/icons\";\r\nimport {deleteCollectionAction, setCollectionList, editCollectionSourceAction} from \"../../../redux/actions/collectionActions\";\r\nimport {red} from \"@material-ui/core/colors\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing, positions);\r\nconst Typography = styled(MuiTypography)(spacing, positions);\r\nconst Card = styled(MuiCard)(spacing, positions);\r\nconst Button = styled(MuiButton)(spacing, positions);\r\nconst Grid = styled(MuiGrid)(spacing, positions);\r\nconst Box =  styled(MuiBox)(spacing, positions);\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    edit: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\n\r\nfunction Summary({dispatch, authUser, collection}) {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [moreMenu, setMoreMenu] = useState(null)\r\n    const [openRemoveModal, setOpenRemoveModal] = useState(false)\r\n    const [openEditModal, setOpenEditModal] = useState(false)\r\n    const [editName, setEditName] = useState(collection['name'])\r\n\r\n    function toggleMoreMenu(event) {\r\n        setMoreMenu(moreMenu === null ? event.currentTarget : null)\r\n    }\r\n\r\n    function handleDeleteCollection(event) {\r\n        toggleMoreMenu(event)\r\n        dispatch(deleteCollectionAction(collection['id'])).then(response => {\r\n            dispatch(setCollectionList())\r\n            setTimeout(() => history.push(\"../indices-collections\"), 500)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleEditNameCollection(event) {\r\n        toggleMoreMenu(event)\r\n        collection['name'] = editName;\r\n        dispatch(editCollectionSourceAction(collection['id'], collection)).then(response => {\r\n            dispatch(setCollectionList())\r\n            setTimeout(() => history.push(\"../indices-collections\"), 500)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const indexA = collection['indexA']\r\n    const indexB = collection['indexB']\r\n    // authUser.role.index =false;\r\n    return (\r\n        <React.Fragment>\r\n            <br/>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid container>\r\n                        <Grid item xs={10}>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>컬렉션 이름</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    {collection['name']}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>컬렉션 아이디</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    {collection['baseId']}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>인덱스 템플릿</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Link style={{cursor: \"pointer\"}}\r\n                                          onClick={() => {history.push(`../indices-templates/${collection['baseId']}`)}}\r\n                                    >\r\n                                        {collection['baseId']}\r\n                                    </Link>,\r\n                                    {/*<Link style={{cursor: \"pointer\"}}*/}\r\n                                    {/*      onClick={() => {history.push(`../indices-templates/${collection['indexB']['index']}`)}}*/}\r\n                                    {/*>*/}\r\n                                    {/*    {collection['indexB']['index']}*/}\r\n                                    {/*</Link>*/}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>인덱스 패턴</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Link mx={1} style={{cursor: \"pointer\",\r\n                                        display: collection['indexA']['uuid'] ? \"inline\" : \"none\"\r\n                                    }}\r\n                                          onClick={() => {history.push(`../indices/${collection['indexA']['uuid']}`)}}\r\n                                    >\r\n                                        {collection['indexA']['index']}\r\n                                    </Link>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: collection['indexA']['uuid'] ? \"none\" : \"inline\"}}>\r\n                                        {collection['indexA']['index']}\r\n                                    </Box>\r\n                                    ,\r\n                                    <Link mx={1} style={{cursor: \"pointer\",\r\n                                        display: collection['indexB']['uuid'] ? \"inline\" : \"none\"\r\n                                    }}\r\n                                          onClick={() => {history.push(`../indices/${collection['indexB']['uuid']}`)}}\r\n                                    >\r\n                                        {collection['indexB']['index']}\r\n                                    </Link>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: collection['indexB']['uuid'] ? \"none\" : \"inline\"}}>\r\n                                        {collection['indexB']['index']}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2} align={\"right\"}>\r\n                            {\r\n                                authUser.role.index ?\r\n                                    <React.Fragment>\r\n                                        <Button variant={\"outlined\"}\r\n                                                onClick={toggleMoreMenu}\r\n                                        >\r\n                                            더보기\r\n                                            <ArrowDropDown/>\r\n                                        </Button>\r\n                                        <Menu\r\n                                            anchorEl={moreMenu}\r\n                                            open={Boolean(moreMenu)}\r\n                                            onClose={toggleMoreMenu}\r\n                                            getContentAnchorEl={null}\r\n                                            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                                            transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                                        >\r\n                                            <MenuItem onClick={() => setOpenEditModal(true)}>\r\n                                                컬렉션 이름 변경\r\n                                            </MenuItem>\r\n                                            <MenuItem style={{backgroundColor: red[\"300\"]}} onClick={() => setOpenRemoveModal(true)}>\r\n                                                컬렉션 삭제\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </React.Fragment>\r\n                                    :\r\n                                    <React.Fragment>\r\n\r\n                                    </React.Fragment>\r\n                            }\r\n                            <Box>\r\n\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Box mt={5}>\r\n                        <Typography variant={\"h5\"}>\r\n                            스왑 인덱스\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={12} lg={6}>\r\n                            <Box px={5} py={2}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell  variant={\"head\"} component={\"th\"} colSpan={4} style={{fontSize: \"1.2em\"}} align={\"center\"}>\r\n                                                {indexA['index']}\r\n\r\n                                                {\r\n                                                    Object.keys(indexA['aliases']||{}).find(o => o === collection['baseId']) ?\r\n                                                        <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                            <Chip color=\"primary\" icon={<Check />} label={\"사용\"}/>\r\n                                                        </Box>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"none\" : \"table-row\"}}>\r\n                                            <TableCell colSpan={4} >\r\n                                                <Box align={\"center\"}>\r\n                                                    아직 인덱스가 생성되지 않았습니다.\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>상태</TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <Box style={{backgroundColor: indexA['health'], width: \"20px\", height: \"20px\", borderRadius: \"90px\", float: \"left\"}}> </Box>\r\n                                                <Box style={{marginLeft: \"30px\"}}>\r\n                                                    { indexA['health'] === \"green\" ? \"정상\" : indexA['health'] === \"yellow\" ? \"주의\" : \"에러\" }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리</TableCell>\r\n                                            <TableCell>{indexA['pri']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>레플리카</TableCell>\r\n                                            <TableCell>{indexA['rep']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>문서 수</TableCell>\r\n                                            <TableCell>{indexA['docsCount']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>삭제문서 수</TableCell>\r\n                                            <TableCell>{indexA['docsDeleted']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>스토리지 용량</TableCell>\r\n                                            <TableCell>{indexA['storeSize']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리 <br/> 스토리지용량</TableCell>\r\n                                            <TableCell>{indexA['priStoreSize']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>별칭</TableCell>\r\n                                            <TableCell>\r\n                                                {\r\n                                                    Object.keys(indexA['aliases']||{}).join(\",\")\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={12} lg={6}>\r\n                            <Box px={5} py={2}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell  variant={\"head\"} component={\"th\"} colSpan={4} style={{fontSize: \"1.2em\"}} align={\"center\"}>\r\n                                                {indexB['index']}\r\n\r\n                                                {\r\n                                                    Object.keys(indexB['aliases']||{}).find(o => o === collection['baseId']) ?\r\n                                                        <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                            <Chip color=\"primary\" icon={<Check />} label={\"사용\"}/>\r\n                                                        </Box>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"none\" : \"table-row\"}}>\r\n                                            <TableCell colSpan={4} >\r\n                                                <Box align={\"center\"}>\r\n                                                    아직 인덱스가 생성되지 않았습니다.\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>상태</TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <Box style={{backgroundColor: indexB['health'], width: \"20px\", height: \"20px\", borderRadius: \"90px\", float: \"left\"}}> </Box>\r\n                                                <Box style={{marginLeft: \"30px\"}}>\r\n                                                    { indexB['health'] === \"green\" ? \"정상\" : indexB['health'] === \"yellow\" ? \"주의\" : \"에러\" }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리</TableCell>\r\n                                            <TableCell>{indexB['pri']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>레플리카</TableCell>\r\n                                            <TableCell>{indexB['rep']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>문서 수</TableCell>\r\n                                            <TableCell>{indexB['docsCount']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>삭제문서 수</TableCell>\r\n                                            <TableCell>{indexB['docsDeleted']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>스토리지 용량</TableCell>\r\n                                            <TableCell>{indexB['storeSize']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리 <br/> 스토리지용량</TableCell>\r\n                                            <TableCell>{indexB['priStoreSize']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>별칭</TableCell>\r\n                                            <TableCell>\r\n                                                {\r\n                                                    Object.keys(indexB['aliases']||{}).join(\",\")\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog open={openRemoveModal} fullWidth={true}>\r\n                <DialogTitle>컬랙션 삭제</DialogTitle>\r\n                <DialogContent>\r\n                    <Box style={{color: red['500']}}> 선택하신 컬랙션을 삭제 하시겠습니까? </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button style={{backgroundColor: red['200']}}\r\n                            variant=\"contained\"\r\n                            onClick={handleDeleteCollection}\r\n                    >\r\n                        삭제\r\n                    </Button>\r\n                    <Button onClick={() => setOpenRemoveModal(false)}\r\n                            variant=\"contained\"\r\n                    >\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openEditModal} fullWidth={true}>\r\n                <DialogTitle>컬랙션 이름 변경</DialogTitle>\r\n                <DialogContent>\r\n                <TextField \r\n                    value={editName}\r\n                    onChange={(event) => setEditName(event.target.value)}\r\n                    fullWidth\r\n                    placeholder={\"변경할 이름을 입력해 주세요\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={handleEditNameCollection}\r\n                    >\r\n                        수정\r\n                    </Button>\r\n                    <Button onClick={() => setOpenEditModal(false)}\r\n                            variant=\"contained\"\r\n                    >\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    ...store.collectionReducers\r\n}))(Summary);\r\n"],"sourceRoot":""}