{"version":3,"sources":["pages/indices/index/Detail.js","components/AntTabs/index.js","redux/actions/indicesActions.js","components/IndicesSelect/index.js"],"names":["useStyles","makeStyles","theme","Divider","styled","MuiDivider","spacing","StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","minWidth","MenuItem","tabs","label","component","Async","connect","store","indicesReducers","indexInfoList","settings","dispatch","useDispatch","location","useLocation","history","useHistory","useSelector","indices","index","React","useState","anchorEl","setAnchorEl","process","setProcess","open","message","state","setState","useEffect","uuid","pathname","substring","lastIndexOf","searchIndex","find","obj","setIndexAction","setIndexStateAction","setIndexAliasesAction","setIndexInfoListAction","setIndexSettingsAction","setIndexMappingsAction","setIndexDocumentSourceListAction","from","size","columns","searchKeyword","handleClose","handleIndexAction","event","action","deleteIndexAction","then","response","push","catch","error","setIndexManagedAction","setTimeout","Fragment","title","container","item","xs","variant","gutterBottom","display","align","color","aria-controls","aria-haspopup","style","onClick","currentTarget","id","keepMounted","Boolean","onClose","length","primary","backgroundColor","red","my","tabIndex","key","Box","MuiBox","Tab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","opacity","fontWeightMedium","selected","disableRipple","AntTabs","onChange","value","indicatorColor","textColor","scrollButtons","map","tab","icon","role","hidden","aria-labelledby","client","Client","type","SET_INDEX","payload","setIndicesAction","call","uri","params","format","SET_INDICES","data","console","SET_INDEX_INFO_LIST","SET_INDEX_ALIASES","SET_INDEX_SETTINGS","SET_INDEX_MAPPINGS","SET_INDEX_STATE","editDynamicQueryAction","query","method","keyword","undefined","SET_INDEX_DOCUMENT_SOURCE_RESPONSE","editIndexDocumentSourceAction","body","addIndexDocumentSourceAction","deleteIndexDocumentSourceAction","analyzerDocumentSourceAction","analyzerDocument","formControl","enableSystem","classes","className","labelId","target","filter","startsWith","sort","i"],"mappings":"+WAmCMA,EAAYC,aAAW,SAACC,GAAD,MAAY,MACnCC,EAAUC,YAAOC,IAAPD,CAAmBE,KAC7BC,EAAaC,YAAW,CAC1BC,MAAO,CACHC,OAAQ,sBAFGF,EAIhB,SAACG,GAAD,OACC,kBAAC,IAAD,eACIC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,WAEZL,OAGNO,EAAiBV,aAAW,SAACN,GAAD,MAAY,CAC1CiB,KAAM,CACFC,SAAU,YAFKZ,CAUnBa,KAGEC,EAAO,CACT,CAACC,MAAO,eAAMC,UAAWC,aAAM,kBAAM,mCACrC,CAACF,MAAO,eAAMC,UAAWC,aAAM,kBAAM,yDACrC,CAACF,MAAO,eAAMC,UAAWC,aAAM,kBAAM,yDACrC,CAACF,MAAO,eAAMC,UAAWC,aAAM,kBAAM,mCACrC,CAACF,MAAO,qBAAOC,UAAWC,aAAM,kBAAM,0EAgM3BC,uBAAQ,SAAAC,GAAK,sBAAUA,EAAMC,mBAA7BF,EA7Lf,YAA2C,IAA3BG,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,SACrBC,EAAWC,cACXC,EAAWC,cACXC,EAAUC,cAHsB,GAItBpC,IACWqC,aAAY,SAAAV,GAAK,sBAASA,EAAMC,qBAAnDU,EAL8B,EAK9BA,QAASC,EALqB,EAKrBA,MALqB,EAMNC,IAAMC,SAAS,MANT,mBAM/BC,EAN+B,KAMrBC,EANqB,OAORH,IAAMC,UAAS,GAPP,mBAO/BG,EAP+B,KAOtBC,EAPsB,OAQZL,IAAMC,SAAS,CACrCK,MAAM,EACN/B,SAAU,MACVC,WAAY,SACZ+B,QAAS,KAZyB,mBAQ/BC,EAR+B,KAQxBC,EARwB,KAc9BlC,EAA+BiC,EAA/BjC,SAAUC,EAAqBgC,EAArBhC,WAAY8B,EAASE,EAATF,KAM9BI,qBAAU,WACN,IAAMC,EAAOlB,EAASmB,SAASC,UAAUpB,EAASmB,SAASE,YAAY,KAAO,GACxEC,EAAcjB,EAAQkB,MAAK,SAAAC,GAAG,OAAIA,EAAG,OAAaN,KACpDI,GACAxB,EAAS2B,YAAeH,EAAW,UAExC,CAACjB,IAEJY,qBAAU,WACFX,IACAR,EAAS4B,YAAoBpB,IAC7BR,EAAS6B,YAAsBrB,IAC/BR,EAAS8B,YAAuBtB,IAChCR,EAAS+B,YAAuBvB,IAChCR,EAASgC,YAAuBxB,IAChCR,EAASiC,YAAiC,CAACzB,QAAO0B,KAAM,EAAGC,KAAM,IAAKC,QAAS,GAAIC,cAAe,SAEvG,CAAC7B,IAEJ,IAIM8B,EAAc,WAChB1B,EAAY,OAGV2B,EAAoB,SAACC,EAAOC,EAAQjC,GACtCM,GAAW,GACXwB,IAEI,WAAaG,EACbzC,EAAS0C,YAAkBlC,IACtBmC,MAAK,SAAAC,GACF9B,GAAW,GACXI,EAAS,2BAAKD,GAAN,IAAaF,MAAM,EAAMC,QAAS,iDAC1CZ,EAAQyC,KAAK,iBAEhBC,OAAM,SAAAC,GACHjC,GAAW,GACXI,EAAS,2BAAKD,GAAN,IAAaF,MAAM,EAAMC,QAAS,uEAGlDhB,EAASgD,YAAsBP,EAAQjC,IAClCmC,MAAK,SAAAC,GACFK,YAAW,WACPjD,EAAS6B,YAAsBrB,IAC/BR,EAAS8B,YAAuBtB,IAChCR,EAAS+B,YAAuBvB,IAChCR,EAAS4B,YAAoBpB,IAC7BU,EAAS,2BAAKD,GAAN,IAAaF,MAAM,EAAMC,QAAS,iDAC1CF,GAAW,KACZ,QAENgC,OAAM,SAAAC,GACHE,YAAW,WACPjD,EAAS6B,YAAsBrB,IAC/BR,EAAS8B,YAAuBtB,IAChCR,EAAS+B,YAAuBvB,IAChCR,EAAS4B,YAAoBpB,IAC7BU,EAAS,2BAAKD,GAAN,IAAaF,MAAM,EAAMC,QAAS,oEAC1CF,GAAW,KACZ,SAKnB,OACI,kBAAC,IAAMoC,SAAP,KACI,kBAAC,IAAD,CAAQC,MAAM,uBAEd,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAMC,WAAS,GACX,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACC,QAAQ,UAA9C,uBAEJ,kBAAC,IAAD,CAAMJ,MAAI,EAACC,GAAI,GACX,kBAAC,IAAD,CAAKI,MAAO,SAEJ7C,EACI,kBAAC,IAAD,CAAkB8C,MAAM,cAExB,kBAAC,IAAD,CACIC,gBAAc,kBACdC,gBAAc,OACdN,QAAQ,YACRI,MAAM,UACNG,MAAO,CAACzE,SAAU,SAClB0E,QAtEZ,SAACvB,GACjB5B,EAAY4B,EAAMwB,iBA+DM,gBAWR,kBAACxF,EAAD,CACIyF,GAAG,kBACHtD,SAAUA,EACVuD,aAAW,EACXnD,KAAMoD,QAAQxD,GACdyD,QAAS9B,GAGoB,IAAzBxC,EAAcuE,OACV,KAEA,kBAAC,IAAD,KAEuC,SAA/BvE,EAAc,GAAd,OACI,kBAACX,EAAD,CAAgB4E,QAAS,SAAAvB,GAAK,OAAID,EAAkBC,EAAO,SAAU1C,EAAc,GAAd,SACjE,kBAAC,IAAD,CAAcwE,QAAQ,qCAG1B,kBAACnF,EAAD,CAAgB4E,QAAS,SAAAvB,GAAK,OAAID,EAAkBC,EAAO,QAAS1C,EAAc,GAAd,SAChE,kBAAC,IAAD,CAAcwE,QAAQ,qCAGlC,kBAACnF,EAAD,CAAgB4E,QAAS,SAAAvB,GAAK,OAAID,EAAkBC,EAAO,cAAe1C,EAAc,GAAd,SACtE,kBAAC,IAAD,CAAcwE,QAAQ,kDAE1B,kBAACnF,EAAD,CAAgB4E,QAAS,SAAAvB,GAAK,OAAID,EAAkBC,EAAO,WAAY1C,EAAc,GAAd,SACnE,kBAAC,IAAD,CAAcwE,QAAQ,iDAE1B,kBAACnF,EAAD,CAAgB4E,QAAS,SAAAvB,GAAK,OAAID,EAAkBC,EAAO,SAAU1C,EAAc,GAAd,SACjE,kBAAC,IAAD,CAAcwE,QAAQ,2CAIkC,WAAtDvE,EAAQ,UAAc,IAAvB,OAAqC,IAAtC,OACI,kBAACZ,EAAD,CAAgB4E,QAAS,SAAAvB,GAAK,OAAID,EAAkBC,EAAO,YAAa1C,EAAc,GAAd,SACpE,kBAAC,IAAD,CAAcwE,QAAQ,kDAG1B,kBAACnF,EAAD,CAAgB4E,QAAS,SAAAvB,GAAK,OAAID,EAAkBC,EAAO,UAAW1C,EAAc,GAAd,SAClE,kBAAC,IAAD,CAAcwE,QAAQ,qCAIlC,kBAACnF,EAAD,CAAgB2E,MAAO,CAACS,gBAAiBC,IAAI,MACzCT,QAAS,SAAAvB,GAAK,OAAID,EAAkBC,EAAO,SAAU1C,EAAc,GAAd,SACrD,kBAAC,IAAD,CAAcwE,QAAQ,0CAYtD,kBAAClG,EAAD,CAASqG,GAAI,IAEb,kBAAC,IAAD,CAASlF,KAAMA,EAAMmF,SAAU,IAG/B,kBAAC,IAAD,CACIf,MAAO,OACP5E,aAAc,CAAGC,SAAU,MAAOC,WAAY,SAC9C8B,KAAMA,EACNqD,QApKgB,WACxBlD,EAAS,2BAAKD,GAAN,IAAaF,MAAM,MAoKnBC,QAASC,EAAK,QACd0D,IAAK3F,EAAWC,S,oICzP1Bb,EAAUC,YAAOC,IAAPD,CAAmBE,KAC7BqG,EAAMvG,YAAOwG,IAAPxG,CAAeE,KAarBuG,EAAMrG,aAAW,SAACN,GAAD,MAAY,CAC/BiB,KAAM,CACF2F,cAAe,OACf1F,SAAU,GACV2F,WAAY7G,EAAM8G,WAAWC,kBAC7BC,YAAahH,EAAMI,QAAQ,GAC3B,UAAW,CACPoF,MAAO,UACPyB,QAAS,GAEb,aAAc,CACVzB,MAAO,UACPqB,WAAY7G,EAAM8G,WAAWI,kBAEjC,UAAW,CACP1B,MAAO,YAGf2B,SAAU,MACV,CAAC9E,MAAO,GAnBA/B,EAmBI,SAACG,GAAD,OAAW,kBAAC,IAAD,eAAQ2G,eAAa,GAAK3G,OAmEtC4G,IAtCf,YAAkD,IAAhCjG,EAA+B,EAA/BA,KAA+B,IAAzBmF,gBAAyB,MAAd,EAAc,EAAXe,EAAW,EAAXA,SAAW,EACnBhF,IAAMC,SAAS,CAACgE,SAAUA,IADP,mBACtCzD,EADsC,KAC/BC,EAD+B,KAW7C,OACI,oCACI,kBAAC,IAAD,CAAMwE,MAAOzE,EAAMyD,SACbe,SAZO,SAACjD,EAAOkC,GACzBxD,EAAS,CACLwD,SAAUA,IAEU,oBAAbe,GACPA,EAASf,IAQHiB,eAAe,UACfC,UAAU,UACVrC,QAAQ,aACRsC,cAAc,QAEftG,EAAKuG,KAAI,SAACC,EAAKvF,GAAN,OAAgB,kBAACsE,EAAD,CAAKH,IAAKnE,EAAOyD,GAAIzD,EAAOwF,KAAMD,EAAIC,KAAMxG,MAAOuG,EAAIvG,OAAS,SAE9F,kBAACpB,EAAD,MACCmB,EAAKuG,KAAI,SAAChB,EAAKtE,GACZ,OACI,kBAACoE,EAAD,CAAKD,IAAKnE,EACJyF,KAAK,WACLC,OAAQjF,EAAMyD,WAAalE,EAC3ByD,GAAE,mCAA8BzD,GAChC2F,kBAAA,8BAAwC3F,IACzCA,IAAUS,EAAMyD,UAAYI,EAAIrF,WAAa,kBAACmF,EAAD,SAAM,kBAACE,EAAIrF,UAAL,CAAeF,KAAMuF,IAA3B,Y,iCCtGtE,ihBAaMsB,EAAS,IAAIC,IAGN1E,EAAiB,SAACnB,GAAD,OAAW,SAAAR,GAAQ,OAAIA,EAAS,CAACsG,KAAMC,IAAWC,QAAShG,MAE5EiG,EAAmB,kBAAM,SAAAzG,GAAQ,OAC1CoG,EAAOM,KAAK,CACRC,IAAI,8BACJC,OAAQ,CACJC,OAAQ,UAGXlE,MAAK,SAAAC,GAAQ,OAAI5C,EAAS,CAACsG,KAAMQ,IAAaN,QAAS5D,EAASmE,UAChEjE,OAAM,SAAAC,GAAK,OAAIiE,QAAQjE,MAAMA,QAGzBjB,EAAyB,SAACtB,GAAD,OAAW,SAAAR,GAAQ,OACrDoG,EAAOM,KAAK,CACRC,IAAI,+BAAD,OAAiCnG,GACpCoG,OAAQ,CACJC,OAAQ,UAGXlE,MAAK,SAAAC,GAAQ,OAAI5C,EAAS,CAACsG,KAAMW,IAAqBT,QAAS5D,EAASmE,UACxEjE,OAAM,SAAAC,GAAK,OAAIiE,QAAQjE,MAAMA,QAGzBlB,EAAwB,SAACrB,GAAD,OAAW,SAAAR,GAAQ,OACpDoG,EAAOM,KAAK,CACRC,IAAI,kBAAD,OAAoBnG,EAApB,WACHoG,OAAQ,CACJC,OAAQ,UAGXlE,MAAK,SAAAC,GAAQ,OAAI5C,EAAS,CAACsG,KAAMY,IAAmBV,SAAU5D,EAASmE,KAAKvG,IAAU,IAAzB,aAC7DsC,OAAM,SAAAC,GAAK,OAAIiE,QAAQjE,MAAMA,QAEzBhB,EAAyB,SAACvB,GAAD,OAAW,SAAAR,GAAQ,OACrDoG,EAAOM,KAAK,CACRC,IAAI,kBAAD,OAAoBnG,EAApB,+BACHoG,OAAQ,CACJC,OAAQ,UAGXlE,MAAK,SAAAC,GAAQ,OAAI5C,EAAS,CAACsG,KAAMa,IAAoBX,QAAS5D,EAASmE,KAAKvG,IAAQ,QACpFsC,OAAM,SAAAC,GAAK,OAAIiE,QAAQjE,MAAMA,QAEzBf,EAAyB,SAACxB,GAAD,OAAW,SAAAR,GAAQ,OACrDoG,EAAOM,KAAK,CACRC,IAAI,kBAAD,OAAoBnG,EAApB,cACHoG,OAAQ,CACJC,OAAQ,UAGXlE,MAAK,SAAAC,GAAQ,OAAI5C,EAAS,CAACsG,KAAMc,IAAoBZ,SAAW5D,EAASmE,KAAKvG,IAAU,IAAzB,UAA0C,QACzGsC,OAAM,SAAAC,GAAK,OAAIiE,QAAQjE,MAAMA,QAGzBnB,EAAsB,SAACpB,GAAD,OAAW,SAAAR,GAAQ,OAClDoG,EAAOM,KAAK,CACRC,IAAI,kBAAD,OAAoBnG,EAApB,WACHoG,OAAQ,CACJC,OAAQ,UAGXlE,MAAK,SAAAC,GAAQ,OAAI5C,EAAS,CAACsG,KAAMe,IAAiBb,QAAS5D,EAASmE,UACpEjE,OAAM,SAAAC,GAAK,OAAIiE,QAAQjE,MAAMA,QAEzBuE,EAAyB,SAAC9G,EAAO+G,GAAR,OAAkB,SAAAvH,GAAQ,OAAIoG,EAAOM,KAAK,CAC5EC,IAAI,kBAAD,OAAoBnG,EAApB,cACHgH,OAAQ,MACRT,KAAMQ,MAmBGtF,EAAmC,SAAC,GAAD,IAAEzB,EAAF,EAAEA,MAAO0B,EAAT,EAASA,KAAMC,EAAf,EAAeA,KAAM8B,EAArB,EAAqBA,GAArB,IAAyB7B,eAAzB,MAAiC,GAAjC,MAAqCqF,eAArC,MAA+C,KAA/C,SAAyD,SAAAzH,GAAQ,OAAIoG,EAAOM,KAAK,CAC7HC,IAAI,kBAAD,OAAoBnG,EAApB,YACHgH,OAAQ,OACRT,UAAaW,IAAPzD,GAA2B,OAAPA,GAAsB,KAAPA,EACrC,CAAE,MAAS,CAAE,MAAS,CAAE,IAAOA,IAAQ/B,OAAMC,OAAM,KAAQ,CAAC,CAAE,IAAO,CAAE,MAAS,gBAEpEuF,IAAZD,GAAqC,OAAZA,GAAgC,KAAZA,EACzC,CAAE,MAAS,CAIH,YAAgB,CACZ,MAAYA,EACZ,OAAUrF,EACV,SAAY,OAEpBF,OACAC,OACA,KAAQ,CAAC,CAAE,OAAU,CAAE,MAAS,SAAY,CAAE,IAAO,CAAE,MAAS,WAEpE,CAAED,OAAMC,OAAM,KAAQ,CAAE,CAAE,OAAU,CAAE,MAAS,SAAY,CAAE,IAAO,CAAE,MAAS,aACxFQ,MAAK,SAAAC,GAEJ,OADA5C,EAAS,CAAEsG,KAAMqB,IAAoCnB,QAAS5D,EAASmE,OAChEnE,EAASmE,UAGPa,EAAgC,SAAC,GAAD,IAAEpH,EAAF,EAAEA,MAAOyD,EAAT,EAASA,GAAI4D,EAAb,EAAaA,KAAb,OAAuB,SAAA7H,GAAQ,OAAIoG,EAAOM,KAAK,CACxFC,IAAI,kBAAD,OAAoBnG,EAApB,iBAAkCyD,GACrCuD,OAAQ,MACRT,KAAMc,IACPlF,MAAK,SAAAC,GAAQ,OAAIA,EAASmE,UAEhBe,EAA+B,SAAC,GAAD,IAAEtH,EAAF,EAAEA,MAAOqH,EAAT,EAASA,KAAT,OAAmB,SAAA7H,GAAQ,OAAIoG,EAAOM,KAAK,CACnFC,IAAI,kBAAD,OAAoBnG,EAApB,SACHgH,OAAQ,OACRT,KAAMc,IACPlF,MAAK,SAAAC,GAAQ,OAAIA,EAASmE,UAEhBgB,EAAkC,SAAC,GAAD,IAAEvH,EAAF,EAAEA,MAAOyD,EAAT,EAASA,GAAT,OAAiB,SAAAjE,GAAQ,OAAIoG,EAAOM,KAAK,CACpFC,IAAI,kBAAD,OAAoBnG,EAApB,iBAAkCyD,GACrCuD,OAAQ,WACT7E,MAAK,SAAAC,GAAQ,OAAIA,EAASmE,UAEhBiB,EAA+B,SAACxH,EAAOyH,GAAR,OAA6B,SAAAjI,GAAQ,OAAIoG,EAAOM,KAAK,CAC7FC,IAAI,YAAD,OAAcnG,EAAd,aACHgH,OAAQ,OACRT,KAAMkB,IACPtF,MAAK,SAAAC,GAAQ,OAAIA,EAASmE,UAGhB/D,EAAwB,SAACP,EAAQjC,GAAT,OAAmB,SAAAR,GAAQ,OAAIoG,EAAOM,KAAK,CAC5EC,IAAI,kBAAD,OAAoBnG,EAApB,YAA6BiC,GAChC+E,OAAQ,SACT7E,MAAK,SAAAC,GAAQ,OAAIA,EAASmE,UAEhBrE,EAAoB,SAAAlC,GAAK,OAAI,SAAAR,GAAQ,OAAIoG,EAAOM,KAAK,CAC9DC,IAAI,kBAAD,OAAoBnG,GACvBgH,OAAQ,WACT7E,MAAK,SAAAC,GAAQ,OAAIA,EAASmE,W,mIC3JvB9I,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+J,YAAa,CACT7I,SAAU,SA6CHM,iBAAQ,SAAAC,GAAK,sBACrBA,EAAMC,mBADEF,EAzCf,YAAuE,IAA/CK,EAA8C,EAA9CA,SAAUO,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,MAA2B,IAApB2H,oBAAoB,SAC5DC,EAAUnK,IAShB,OAJAkD,qBAAU,WACNnB,EAASyG,iBACV,IAGC,kBAAC,IAAMvD,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAamF,UAAWD,EAAQF,aAC5B,kBAAC,IAAD,CAAYjE,GAAG,4BAAf,sBACA,kBAAC,IAAD,CACIqE,QAAQ,2BACRrE,GAAG,qBACHyB,MAAOlF,EACPiF,SAjBC,SAACjD,GAClBxC,EAAS2B,YAAea,EAAM+F,OAAO7C,UAmBjBnF,EAAQiI,QAAO,SAAAhI,GAAK,QAAK2H,IAAgB3H,EAAK,MAAUiI,WAAW,QAAc3C,KAAI,SAAAtF,GAAK,OAAIA,EAAK,SAAWkI,OACzG5C,KAAI,SAACtF,EAAOmI,GAAR,OAAe,kBAAC,IAAD,CAAUhE,IAAKgE,EAAGjD,MAAOlF,GAAQA,SAazE","file":"static/js/53.7112726b.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport Async from '~/components/Async';\r\nimport styled from \"styled-components\";\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Helmet from 'react-helmet';\r\nimport AntTabs from \"~/components/AntTabs\"\r\nimport IndicesSelect from \"~/components/IndicesSelect\";\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Button,\r\n    Divider as MuiDivider,\r\n    MenuList,\r\n    Select,\r\n    Typography,\r\n    CircularProgress, Snackbar\r\n} from \"@material-ui/core\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {\r\n    deleteIndexAction,\r\n    setIndexAction,\r\n    setIndexAliasesAction, setIndexDocumentSourceListAction,\r\n    setIndexInfoListAction, setIndexManagedAction,\r\n    setIndexMappingsAction,\r\n    setIndexSettingsAction,\r\n    setIndexStateAction\r\n} from \"../../../redux/actions/indicesActions\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {red} from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        minWidth: \"150px\",\r\n        // '&:focus': {\r\n        //     backgroundColor: theme.palette.primary.main,\r\n        //     '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        //         color: theme.palette.common.white,\r\n        //     },\r\n        // },\r\n    },\r\n}))(MenuItem);\r\n\r\n\r\nconst tabs = [\r\n    {label: \"개요\", component: Async(() => import(\"./Summary\"))},\r\n    {label: \"매핑\", component: Async(() => import(\"./Mapping\"))},\r\n    {label: \"셋팅\", component: Async(() => import(\"./Setting\"))},\r\n    {label: \"통계\", component: Async(() => import(\"./Statistics\"))},\r\n    {label: \"데이터\", component: Async(() => import(\"./Data\"))},\r\n];\r\n\r\nfunction Index({indexInfoList, settings}) {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { indices, index } = useSelector(store => ({...store.indicesReducers}))\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [process, setProcess] = React.useState(false);\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n        message: \"\"\r\n    });\r\n    const { vertical, horizontal, open } = state;\r\n\r\n    const handleSnackbarClose = () => {\r\n        setState({ ...state, open: false });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const uuid = location.pathname.substring(location.pathname.lastIndexOf(\"/\") + 1)\r\n        const searchIndex = indices.find(obj => obj['uuid'] === uuid)\r\n        if (searchIndex) {\r\n            dispatch(setIndexAction(searchIndex['index']))\r\n        }\r\n    }, [indices])\r\n\r\n    useEffect(() => {\r\n        if (index) {\r\n            dispatch(setIndexStateAction(index))\r\n            dispatch(setIndexAliasesAction(index))\r\n            dispatch(setIndexInfoListAction(index))\r\n            dispatch(setIndexSettingsAction(index))\r\n            dispatch(setIndexMappingsAction(index))\r\n            dispatch(setIndexDocumentSourceListAction({index, from: 0, size: 500, columns: [], searchKeyword: ''}))\r\n        }\r\n    }, [index])\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleIndexAction = (event, action, index) => {\r\n        setProcess(true)\r\n        handleClose()\r\n\r\n        if ('delete' === action) {\r\n            dispatch(deleteIndexAction(index))\r\n                .then(response => {\r\n                    setProcess(false)\r\n                    setState({ ...state, open: true, message: \"삭제되었습니다.\" })\r\n                    history.push('../indices')\r\n                })\r\n                .catch(error => {\r\n                    setProcess(false)\r\n                    setState({ ...state, open: true, message: \"요청이 실패하였습니다.\" })\r\n                })\r\n        } else {\r\n            dispatch(setIndexManagedAction(action, index))\r\n                .then(response => {\r\n                    setTimeout(() => {\r\n                        dispatch(setIndexAliasesAction(index))\r\n                        dispatch(setIndexInfoListAction(index))\r\n                        dispatch(setIndexSettingsAction(index))\r\n                        dispatch(setIndexStateAction(index))\r\n                        setState({ ...state, open: true, message: \"적용되었습니다.\" })\r\n                        setProcess(false)\r\n                    }, 1000)\r\n                })\r\n                .catch(error => {\r\n                    setTimeout(() => {\r\n                        dispatch(setIndexAliasesAction(index))\r\n                        dispatch(setIndexInfoListAction(index))\r\n                        dispatch(setIndexSettingsAction(index))\r\n                        dispatch(setIndexStateAction(index))\r\n                        setState({ ...state, open: true, message: \"요청이 실패하였습니다.\" })\r\n                        setProcess(false)\r\n                    }, 1000)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Helmet title=\"인덱스\"/>\r\n\r\n            <IndicesSelect/>\r\n\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"h3\" gutterBottom display=\"inline\">인덱스</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Box align={\"right\"}>\r\n                        {\r\n                            process ?\r\n                                <CircularProgress color=\"secondary\"/>\r\n                                :\r\n                                <Button\r\n                                    aria-controls=\"customized-menu\"\r\n                                    aria-haspopup=\"true\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{minWidth: \"150px\"}}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    관리\r\n                                </Button>\r\n                        }\r\n                        <StyledMenu\r\n                            id=\"customized-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            {\r\n                                indexInfoList.length === 0 ?\r\n                                    null\r\n                                    :\r\n                                    <Box>\r\n                                        {\r\n                                            indexInfoList[0]['status'] === 'open' ?\r\n                                                <StyledMenuItem onClick={event => handleIndexAction(event, \"_close\", indexInfoList[0]['index'])}>\r\n                                                    <ListItemText primary=\"인덱스 닫기\" />\r\n                                                </StyledMenuItem>\r\n                                                :\r\n                                                <StyledMenuItem onClick={event => handleIndexAction(event, \"_open\", indexInfoList[0]['index'])}>\r\n                                                    <ListItemText primary=\"인덱스 열기\" />\r\n                                                </StyledMenuItem>\r\n                                        }\r\n                                        <StyledMenuItem onClick={event => handleIndexAction(event, \"_forcemerge\", indexInfoList[0]['index'])}>\r\n                                            <ListItemText primary=\"인덱스 강제 머징\" />\r\n                                        </StyledMenuItem>\r\n                                        <StyledMenuItem onClick={event => handleIndexAction(event, \"_refresh\", indexInfoList[0]['index'])}>\r\n                                            <ListItemText primary=\"인덱스 리프레쉬\" />\r\n                                        </StyledMenuItem>\r\n                                        <StyledMenuItem onClick={event => handleIndexAction(event, \"_flush\", indexInfoList[0]['index'])}>\r\n                                            <ListItemText primary=\"인덱스 플러시\" />\r\n                                        </StyledMenuItem>\r\n\r\n                                        {\r\n                                            ((settings['settings']||{})['index']||{})['frozen'] === 'true' ?\r\n                                                <StyledMenuItem onClick={event => handleIndexAction(event, \"_unfreeze\", indexInfoList[0]['index'])}>\r\n                                                    <ListItemText primary=\"인덱스 동결 해제\" />\r\n                                                </StyledMenuItem>\r\n                                                :\r\n                                                <StyledMenuItem onClick={event => handleIndexAction(event, \"_freeze\", indexInfoList[0]['index'])}>\r\n                                                    <ListItemText primary=\"인덱스 동결\" />\r\n                                                </StyledMenuItem>\r\n                                        }\r\n\r\n                                        <StyledMenuItem style={{backgroundColor: red[\"400\"]}}\r\n                                            onClick={event => handleIndexAction(event, \"delete\", indexInfoList[0]['index'])}>\r\n                                            <ListItemText primary=\"인덱스 삭제\" />\r\n                                        </StyledMenuItem>\r\n                                    </Box>\r\n                            }\r\n                        </StyledMenu>\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n\r\n            <Divider my={6} />\r\n\r\n            <AntTabs tabs={tabs} tabIndex={0} />\r\n\r\n\r\n            <Snackbar\r\n                color={\"info\"}\r\n                anchorOrigin={{  vertical: 'top', horizontal: 'right' }}\r\n                open={open}\r\n                onClose={handleSnackbarClose}\r\n                message={state['message']}\r\n                key={vertical + horizontal}\r\n            />\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({ ...store.indicesReducers }))(Index);\r\n","// React components\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// Material components\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Box as MuiBox, Divider as MuiDivider, Tab as AntTab, Tabs, Typography, Card, CardContent} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport {spacing} from \"@material-ui/system\";\r\n\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Box = styled(MuiBox)(spacing);\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//         width: '100%',\r\n//         backgroundColor: theme.palette.background.paper\r\n//     },\r\n//     indicator: {\r\n//         backgroundColor: '#1890ff',\r\n//     },\r\n// }));\r\n\r\nconst Tab = withStyles((theme) => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        minWidth: 72,\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        marginRight: theme.spacing(2),\r\n        '&:hover': {\r\n            color: '#40a9ff',\r\n            opacity: 1,\r\n        },\r\n        '&$selected': {\r\n            color: '#1890ff',\r\n            fontWeight: theme.typography.fontWeightMedium,\r\n        },\r\n        '&:focus': {\r\n            color: '#40a9ff',\r\n        },\r\n    },\r\n    selected: {},\r\n}), {index: 1})((props) => <AntTab disableRipple {...props} />);\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const {key, children, value, index} = props;\r\n    return (\r\n        <Typography\r\n            key={key}\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        >\r\n            {value === index && <Box >\r\n                <children key={key} />\r\n            </Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    key: PropTypes.any,\r\n    children: PropTypes.node,\r\n    index: PropTypes.any,\r\n    value: PropTypes.any,\r\n};\r\n\r\n\r\nfunction AntTabs({tabs, tabIndex = 0, onChange}) {\r\n    const [state, setState] = React.useState({tabIndex: tabIndex});\r\n    const handleChange = (event, tabIndex) => {\r\n        setState({\r\n            tabIndex: tabIndex\r\n        })\r\n        if (typeof onChange === 'function') {\r\n            onChange(tabIndex)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tabs value={state.tabIndex}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n            >\r\n                {tabs.map((tab, index) => <Tab key={index} id={index} icon={tab.icon} label={tab.label || \"\"}/>)}\r\n            </Tabs>\r\n            <Divider />\r\n            {tabs.map((Tab, index) => {\r\n                return (\r\n                    <Box key={index}\r\n                          role=\"tabpanel\"\r\n                          hidden={state.tabIndex !== index}\r\n                          id={`scrollable-auto-tabpanel-${index}`}\r\n                          aria-labelledby={`scrollable-auto-tab-${index}`}>\r\n                        {index === state.tabIndex && Tab.component && <Box> <Tab.component tabs={Tab}/> </Box>}\r\n                    </Box>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AntTabs;","import Client from '~/Client'\r\nimport {\r\n    SET_INDEX,\r\n    SET_INDEX_ALIASES, SET_INDEX_DOCUMENT_SOURCE_RESPONSE,\r\n    SET_INDEX_DOCUMENTS,\r\n    SET_INDEX_INFO_LIST,\r\n    SET_INDEX_MAPPINGS,\r\n    SET_INDEX_SETTINGS,\r\n    SET_INDEX_STATE,\r\n    SET_INDICES\r\n} from \"../constants\";\r\n\r\n\r\nconst client = new Client()\r\n\r\n\r\nexport const setIndexAction = (index) => dispatch => dispatch({type: SET_INDEX, payload: index})\r\n\r\nexport const setIndicesAction = () => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/_cat/indices`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDICES, payload: response.data}))\r\n        .catch(error => console.error(error))\r\n\r\n\r\nexport const setIndexInfoListAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/_cat/indices/${index}`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_INFO_LIST, payload: response.data}))\r\n        .catch(error => console.error(error))\r\n\r\n\r\nexport const setIndexAliasesAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/${index}/_alias`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_ALIASES, payload: (response.data[index] || {})['aliases']}))\r\n        .catch(error => console.error(error))\r\n\r\nexport const setIndexSettingsAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/${index}/_settings?include_defaults`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_SETTINGS, payload: response.data[index]||{}}))\r\n        .catch(error => console.error(error))\r\n\r\nexport const setIndexMappingsAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/${index}/_mappings`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_MAPPINGS, payload: ((response.data[index] || {})['mappings']||{}) }))\r\n        .catch(error => console.error(error))\r\n    // dispatch({type: SET_INDEX_MAPPINGS, payload: ((response.data[index] || {})['mappings']||{})['properties'] })\r\n\r\nexport const setIndexStateAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/${index}/_stats`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_STATE, payload: response.data }))\r\n        .catch(error => console.error(error))\r\n\r\nexport const editDynamicQueryAction = (index, query) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_settings`,\r\n    method: \"PUT\",\r\n    data: query\r\n})\r\n\r\n\r\nexport const setIndexDocumentsAction = ({index, pageNum, rowSize, id, analysis}) => dispatch => client.call({\r\n    uri: `/indices/${index}/_docs`,\r\n    params: {\r\n        index,\r\n        pageNum,\r\n        rowSize,\r\n        id,\r\n        analysis\r\n    }\r\n}).then(response => dispatch({\r\n    type: SET_INDEX_DOCUMENTS,\r\n    payload: response.data,\r\n})).catch(err => console.error(err))\r\n\r\n\r\nexport const setIndexDocumentSourceListAction = ({index, from, size, id, columns=[], keyword = null}) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_search`,\r\n    method: 'post',\r\n    data: id !== undefined && id !== null && id !== \"\" ?\r\n        { \"query\": { \"match\": { \"_id\": id } }, from, size, \"sort\": [{ \"_id\": { \"order\": \"desc\" } }] }\r\n        :\r\n        keyword !== undefined && keyword !== null && keyword !== \"\"?\r\n            { \"query\": {\r\n                // \"bool\": {\r\n                //     \"minimum_should_match\": 1,\r\n                //     \"should\": (columns.map(c =>  ({ \"match\": { [c]: keyword } }))  ) }\r\n                    \"multi_match\" : {\r\n                        \"query\":    keyword,\r\n                        \"fields\": columns,\r\n                        \"operator\": \"or\"\r\n                    }},\r\n                from,\r\n                size,\r\n                \"sort\": [{ \"_score\": { \"order\": \"desc\" } }, { \"_id\": { \"order\": \"desc\" } }] }\r\n            :\r\n            { from, size, \"sort\": [ { \"_score\": { \"order\": \"desc\" } }, { \"_id\": { \"order\": \"desc\" } }] }\r\n}).then(response => {\r\n    dispatch({ type: SET_INDEX_DOCUMENT_SOURCE_RESPONSE, payload: response.data })\r\n    return response.data;\r\n})\r\n\r\nexport const editIndexDocumentSourceAction = ({index, id, body}) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_doc/${id}`,\r\n    method: 'put',\r\n    data: body\r\n}).then(response => response.data)\r\n\r\nexport const addIndexDocumentSourceAction = ({index, body}) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_doc`,\r\n    method: 'post',\r\n    data: body\r\n}).then(response => response.data)\r\n\r\nexport const deleteIndexDocumentSourceAction = ({index, id}) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_doc/${id}`,\r\n    method: 'DELETE',\r\n}).then(response => response.data)\r\n\r\nexport const analyzerDocumentSourceAction = (index, analyzerDocument) => dispatch => client.call({\r\n    uri: `/indices/${index}/analyzer`,\r\n    method: \"post\",\r\n    data: analyzerDocument\r\n}).then(response => response.data)\r\n\r\n\r\nexport const setIndexManagedAction = (action, index) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/${action}`,\r\n    method: \"post\"\r\n}).then(response => response.data)\r\n\r\nexport const deleteIndexAction = index => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}`,\r\n    method: \"delete\"\r\n}).then(response => response.data)","import React, { useEffect } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Box, FormControl, InputLabel, MenuItem, Select, Checkbox} from \"@material-ui/core\";\r\nimport {setIndexAction, setIndicesAction} from \"../../redux/actions/indicesActions\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 100\r\n    }\r\n}));\r\n\r\nfunction IndicesSelect({dispatch, indices, index, enableSystem=true}) {\r\n    const classes = useStyles()\r\n    const handleChange = (event) => {\r\n        dispatch(setIndexAction(event.target.value))\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setIndicesAction())\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">인덱스</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={index}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {\r\n                            indices.filter(index => !enableSystem ? !index['index'].startsWith(\".\") : true ).map(index => index['index']).sort()\r\n                                .map((index, i) => (<MenuItem key={i} value={index}>{index}</MenuItem>))\r\n                            // indices.filter(index => !enableSystem ? !index['index'].startsWith(\".\") : true )\r\n                            //     .map((index, i) => (<MenuItem key={i} value={index['index']}>{index['index']}</MenuItem>))\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                {/*<Checkbox*/}\r\n                {/*    defaultChecked*/}\r\n                {/*    color=\"default\"*/}\r\n                {/*    inputProps={{ 'aria-label': 'checkbox with default color' }}*/}\r\n                {/*/>*/}\r\n            </Box>\r\n            <br/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    ...store.indicesReducers,\r\n}))(IndicesSelect);\r\n"],"sourceRoot":""}