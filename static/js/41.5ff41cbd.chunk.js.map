{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/InputLabel/InputLabel.js","../node_modules/@material-ui/core/esm/FormLabel/FormLabel.js","../node_modules/@material-ui/core/esm/Input/Input.js","../node_modules/@material-ui/core/esm/FormControl/FormControl.js","pages/auth/SignUp.js"],"names":["useFormControl","React","FormControlContext","InputLabel","props","ref","classes","className","_props$disableAnimati","disableAnimation","shrinkProp","margin","shrink","other","variant","_objectWithoutProperties","muiFormControl","filled","focused","adornedStart","fcs","formControlState","states","FormLabel","_extends","clsx","root","formControl","animated","marginDense","outlined","disabled","error","required","asterisk","withStyles","theme","display","transformOrigin","position","left","top","transform","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","name","children","_props$component","color","component","Component","concat","capitalize","palette","text","secondary","typography","body1","lineHeight","padding","primary","main","colorSecondary","Input","disableUnderline","_props$fullWidth","fullWidth","_props$inputComponent","inputComponent","_props$multiline","multiline","_props$type","type","InputBase","underline","muiName","bottomLineColor","marginTop","borderBottomColor","borderBottom","bottom","content","right","borderBottomStyle","input","inputMarginDense","inputMultiline","inputTypeSearch","FormControl","_props$color","_props$disabled","_props$error","_props$hiddenLabel","hiddenLabel","_props$margin","_props$required","size","_props$variant","_React$useState","initialAdornedStart","forEach","child","isMuiElement","isAdornedStart","setAdornedStart","_React$useState2","initialFilled","isFilled","setFilled","_React$useState3","setFocused","onFilled","childContext","undefined","onBlur","onEmpty","onFocus","registerEffect","Provider","value","flexDirection","minWidth","border","verticalAlign","marginNormal","marginBottom","width","Button","styled","MuiButton","spacing","Wrapper","Paper","breakpoints","up","SignUp","title","align","gutterBottom","htmlFor","id","autoFocus","autoComplete","Link","to","mt"],"mappings":"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","file":"static/js/41.5ff41cbd.chunk.js","sourcesContent":["import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport FormLabel from '../FormLabel';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      transformOrigin: 'top left'\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Pseudo-class applied to the asterisk element. */\n    asterisk: {},\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // slight alteration to spec spacing to match visual spec result\n      transform: 'translate(0, 24px) scale(1)'\n    },\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      // Compensation for the `Input.inputDense` style.\n      transform: 'translate(0, 21px) scale(1)'\n    },\n\n    /* Styles applied to the `input` element if `shrink={true}`. */\n    shrink: {\n      transform: 'translate(0, 1.5px) scale(0.75)',\n      transformOrigin: 'top left'\n    },\n\n    /* Styles applied to the `input` element if `disableAnimation={false}`. */\n    animated: {\n      transition: theme.transitions.create(['color', 'transform'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"`. */\n    filled: {\n      // Chrome's autofill feature gives the input field a yellow background.\n      // Since the input field is behind the label in the HTML tree,\n      // the input field is drawn last and hides the label with an opaque background color.\n      // zIndex: 1 will raise the label above opaque background-colors of input.\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(12px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(12px, 17px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(12px, 10px) scale(0.75)',\n        '&$marginDense': {\n          transform: 'translate(12px, 7px) scale(0.75)'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      // see comment above on filled.zIndex\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(14px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(14px, 12px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(14px, -6px) scale(0.75)'\n      }\n    }\n  };\n};\nvar InputLabel = React.forwardRef(function InputLabel(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableAnimati = props.disableAnimation,\n      disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\n      margin = props.margin,\n      shrinkProp = props.shrink,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['margin', 'variant']\n  });\n  return React.createElement(FormLabel, _extends({\n    \"data-shrink\": shrink,\n    className: clsx(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, fcs.margin === 'dense' && classes.marginDense, {\n      'filled': classes.filled,\n      'outlined': classes.outlined\n    }[fcs.variant]),\n    classes: {\n      focused: classes.focused,\n      disabled: classes.disabled,\n      error: classes.error,\n      required: classes.required,\n      asterisk: classes.asterisk\n    },\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes = {\n  /**\n   * The contents of the `InputLabel`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * If `true`, the transition animation is disabled.\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, apply disabled class.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputLabel'\n})(InputLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.body1, {\n      lineHeight: 1,\n      padding: 0,\n      '&$focused': {\n        color: theme.palette.primary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused': {\n        color: theme.palette.secondary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Styles applied to the asterisk element. */\n    asterisk: {\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }\n  };\n};\nvar FormLabel = React.forwardRef(function FormLabel(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'label' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      required = props.required,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && React.createElement(\"span\", {\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport InputBase from '../InputBase';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var light = theme.palette.type === 'light';\n  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      'label + &': {\n        marginTop: 16\n      }\n    },\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if color secondary. */\n    colorSecondary: {\n      '&$underline:after': {\n        borderBottomColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the root element if `disableUnderline={false}`. */\n    underline: {\n      '&:after': {\n        borderBottom: \"2px solid \".concat(theme.palette.primary.main),\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\"',\n        position: 'absolute',\n        right: 0,\n        transform: 'scaleX(0)',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shorter,\n          easing: theme.transitions.easing.easeOut\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&$focused:after': {\n        transform: 'scaleX(1)'\n      },\n      '&$error:after': {\n        borderBottomColor: theme.palette.error.main,\n        transform: 'scaleX(1)' // error is always underlined in red\n\n      },\n      '&:before': {\n        borderBottom: \"1px solid \".concat(bottomLineColor),\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\\\\00a0\"',\n        position: 'absolute',\n        right: 0,\n        transition: theme.transitions.create('border-bottom-color', {\n          duration: theme.transitions.duration.shorter\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&:hover:not($disabled):before': {\n        borderBottom: \"2px solid \".concat(theme.palette.text.primary),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          borderBottom: \"1px solid \".concat(bottomLineColor)\n        }\n      },\n      '&$disabled:before': {\n        borderBottomStyle: 'dotted'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {},\n\n    /* Styles applied to the `input` element. */\n    input: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {},\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {},\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {}\n  };\n};\nvar Input = React.forwardRef(function Input(props, ref) {\n  var disableUnderline = props.disableUnderline,\n      classes = props.classes,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      other = _objectWithoutProperties(props, [\"disableUnderline\", \"classes\", \"fullWidth\", \"inputComponent\", \"multiline\", \"type\"]);\n\n  return React.createElement(InputBase, _extends({\n    classes: _extends({}, classes, {\n      root: clsx(classes.root, !disableUnderline && classes.underline),\n      underline: null\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Input.propTypes = {\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the wrapper element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the input will not have an underline.\n   */\n  disableUnderline: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the native input.\n   * Either a string to use a DOM element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nInput.muiName = 'Input';\nexport default withStyles(styles, {\n  name: 'MuiInput'\n})(Input);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    zIndex: 0,\n    // Fix blur label text issue\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: there are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {Button as MuiButton, FormControl, Input, InputLabel, Paper, Typography} from \"@material-ui/core\";\r\nimport {spacing} from \"@material-ui/system\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst Wrapper = styled(Paper)`\r\n  padding: ${props => props.theme.spacing(6)}px;\r\n\r\n  ${props => props.theme.breakpoints.up(\"md\")} {\r\n    padding: ${props => props.theme.spacing(10)}px;\r\n  }\r\n`;\r\n\r\nfunction SignUp() {\r\n    return (\r\n        <Wrapper>\r\n            <Helmet title=\"Sign Up\"/>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" gutterBottom>\r\n                Get started\r\n            </Typography>\r\n            <Typography component=\"h2\" variant=\"body1\" align=\"center\">\r\n                Start creating the best possible user experience for you customers\r\n            </Typography>\r\n            <form>\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                    <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n                    <Input id=\"name\" name=\"name\" autoFocus/>\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                    <InputLabel htmlFor=\"company\">Company</InputLabel>\r\n                    <Input id=\"company\" name=\"company\"/>\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                    <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                    <Input id=\"email\" name=\"email\" autoComplete=\"email\"/>\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                    <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                    <Input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                </FormControl>\r\n                <Button\r\n                    component={Link}\r\n                    to=\"/\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    mt={2}\r\n                >\r\n                    Sign up\r\n                </Button>\r\n            </form>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n"],"sourceRoot":""}