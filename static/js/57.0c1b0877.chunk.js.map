{"version":3,"sources":["pages/indices/collection/index.js","redux/actions/indexTemplateActions.js","redux/actions/collectionActions.js"],"names":["Divider","styled","MuiDivider","spacing","positions","Typography","MuiTypography","Box","MuiBox","Button","MuiCard","MuiButton","Grid","MuiGrid","useStyles","makeStyles","theme","formControl","minWidth","root","flexGrow","width","edit","link","cursor","connect","store","authUser","dsearchReducers","collectionReducers","indexTemplateReducers","dispatch","indexSuffixA","indexSuffixB","collectionList","catIndexTemplateList","history","useHistory","classes","useState","openAddModal","setOpenAddModal","createName","setCreateName","createBaseId","setCreateBaseId","applyIndexTemplate","setApplyIndexTemplate","createNameError","setCreateNameError","createBaseIdError","setCreateBaseIdError","modalMessage","setModalMessage","process","setProcess","addBtnDisabled","setAddBtnDisabled","toggleOpenAddModal","moveDetail","id","push","moveIndex","indexId","undefined","convertHumanReadableCount","docSize","size","length","count","Math","ceil","newSize","i","unshift","slice","join","useEffect","setCollectionIndexSuffix","setIndexTemplatesAction","setCollectionList","setCatIndexTemplateList","Fragment","title","variant","gutterBottom","display","my","align","role","index","className","onClick","color","component","Paper","table","aria-label","sort","a","b","map","collection","num","name","baseId","indexA","indexB","indexAAlias","Object","keys","find","alias","isActiveA","indexBAlias","isActiveB","key","style","open","fullWidth","onClose","container","item","xs","mt","autoFocus","value","onChange","event","target","placeholder","error","inValid","test","startsWith","tmpMatched","forEach","catIndexTemplate","patternList","substring","split","pattern","re","RegExp","replace","match","index_patterns","matched","trim","textAlign","addCollectionList","refresh_interval","replicas","then","response","setTimeout","catch","console","log","disabled","client","Client","call","uri","type","SET_INDEX_TEMPLATES","payload","data","filter","template","addIndexTemplateAction","settings","mappings","method","deleteIndexTemplateAction","setIndexTemplateAction","SET_INDEX_TEMPLATE","SET_COLLECTION_LIST","params","action","SET_COLLECTION_INDEX_SUFFIX","setCollection","SET_COLLECTION","deleteCollectionAction","editCollectionSourceAction","editCollectionScheduleAction","isSchedule","scheduled","setIndexHistoryTypeList","from","pretty","filter_path","SET_COLLECTION_INDEX_HISTORY_LIST","setIndexHistoryList","deleteIndexHistoryList","time","SET_CAT_INDEX_TEMPLATE_LIST","setCollectionJob","SET_COLLECTION_JOB","editCollectionAction"],"mappings":"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","file":"static/js/57.0c1b0877.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n    Box as MuiBox,\r\n    Button as MuiButton,\r\n    Card as MuiCard,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider as MuiDivider,\r\n    Grid as MuiGrid,\r\n    Link,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Typography as MuiTypography,\r\n} from \"@material-ui/core\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {positions, spacing} from \"@material-ui/system\";\r\nimport {\r\n    addCollectionList, setCatIndexTemplateList,\r\n    setCollectionIndexSuffix,\r\n    setCollectionList,\r\n    setMatchedIndexTemplates\r\n} from \"../../../redux/actions/collectionActions\";\r\nimport {setIndexTemplatesAction} from \"../../../redux/actions/indexTemplateActions\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing, positions);\r\nconst Typography = styled(MuiTypography)(spacing, positions);\r\nconst Box = styled(MuiBox)(spacing, positions);\r\nconst Card = styled(MuiCard)(spacing, positions);\r\nconst Button = styled(MuiButton)(spacing, positions);\r\nconst Grid = styled(MuiGrid)(spacing, positions);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    edit: {\r\n        width: '100%'\r\n    },\r\n    link: {\r\n        cursor: \"pointer\"\r\n    }\r\n}));\r\n\r\nfunction Collection({dispatch, authUser, indexSuffixA, indexSuffixB, collectionList, catIndexTemplateList}) {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [openAddModal, setOpenAddModal] = useState(false)\r\n    const [createName, setCreateName] = useState(\"\")\r\n    const [createBaseId, setCreateBaseId] = useState(\"\")\r\n\r\n\r\n    const [applyIndexTemplate, setApplyIndexTemplate] = useState(\"\")\r\n    // const [applyIndexTemplates, setApplyIndexTemplates] = useState([])\r\n    const [createNameError, setCreateNameError] = useState(false)\r\n    const [createBaseIdError, setCreateBaseIdError] = useState(false)\r\n    const [modalMessage,setModalMessage] = useState(null)\r\n    const [process, setProcess] = useState(false)\r\n    const [addBtnDisabled, setAddBtnDisabled] = useState(true)\r\n\r\n    useEffect(() => {\r\n        dispatch(setCollectionIndexSuffix())\r\n        dispatch(setIndexTemplatesAction())\r\n        dispatch(setCollectionList())\r\n        dispatch(setCatIndexTemplateList())\r\n    }, [])\r\n\r\n    function toggleOpenAddModal() {\r\n        setAddBtnDisabled(true)\r\n        setProcess(false)\r\n        setModalMessage(null)\r\n        setCreateNameError(false)\r\n        setCreateBaseIdError(false)\r\n        // setApplyIndexTemplates([])\r\n        setApplyIndexTemplate(\"\")\r\n        setCreateName(\"\")\r\n        setCreateBaseId(\"\")\r\n        setOpenAddModal(!openAddModal)\r\n    }\r\n\r\n    function moveDetail(id) {\r\n        history.push(`./indices-collections/${id}`)\r\n    }\r\n    function moveIndex(indexId) {\r\n        if (indexId === undefined || indexId === null || indexId === \"\") {\r\n            return false\r\n        }\r\n        history.push(`./indices/${indexId}`)\r\n    }\r\n\r\n    function handleChangeBaseId(event) {\r\n        setCreateBaseIdError(false)\r\n        setCreateBaseId(event.target.value)\r\n        let inValid = false\r\n        if (event.target.value.length > 1 && (!/^[a-z]+[a-z0-9-_]/g.test(event.target.value))) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        } else if (event.target.value.length === 1 && /[0-9]/g.test(event.target.value)) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        } else if (event.target.value.startsWith(\".\")) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        } else if (/[A-Z]/g.test(event.target.value)) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        } else if (/[ㄱ-ㅎ가-힣]/g.test(event.target.value)) {\r\n            setCreateBaseIdError(true)\r\n            inValid = true\r\n        }\r\n\r\n        if (event.target.value !== \"\") {\r\n\r\n            let tmpMatched = []\r\n            catIndexTemplateList.forEach(catIndexTemplate => {\r\n                let patternList = catIndexTemplate['index_patterns']\r\n                patternList = patternList.substring(1, patternList.length - 1).split(\", \")\r\n                patternList.forEach(pattern => {\r\n                    const re = new RegExp(pattern.replace(/\\*/gi, \"\\\\S*\"), 'gi')\r\n                    if (event.target.value.match(re) !== null || (event.target.value + indexSuffixA) === pattern || (event.target.value + indexSuffixB) === pattern) {\r\n                        tmpMatched.push({\r\n                            ...catIndexTemplate,\r\n                            index_patterns: patternList\r\n                        })\r\n                        return false\r\n                    }\r\n                })\r\n            })\r\n            if(!tmpMatched.find(matched => matched['name'] === (event.target.value + indexSuffixA))) {\r\n                tmpMatched.push({name: event.target.value + indexSuffixA, index_patterns: [event.target.value + indexSuffixA]})\r\n            }\r\n            if (!tmpMatched.find(matched => matched['name'] === event.target.value + indexSuffixB)) {\r\n                tmpMatched.push({name: event.target.value + indexSuffixA, index_patterns: [event.target.value + indexSuffixB]})\r\n            }\r\n\r\n            // console.log(tmpMatched)\r\n            setApplyIndexTemplate(event.target.value)\r\n            // setApplyIndexTemplates(tmpMatched.map(matched => `${matched['name']} (${matched['index_patterns'].join(',')})`))\r\n            // setApplyIndexTemplates(tmpMatched.map(matched => matched['name']))\r\n            // tmpMatched.map(matched => matched['name'])\r\n            // setApplyIndexTemplates([event.target.value + indexSuffixA, event.target.value + indexSuffixB])\r\n\r\n            if (createName.trim().length !== 0 && inValid === false) {\r\n                setAddBtnDisabled(false)\r\n            } else {\r\n                setAddBtnDisabled(true)\r\n            }\r\n\r\n        } else {\r\n            setAddBtnDisabled(true)\r\n            // setApplyIndexTemplates([])\r\n            setApplyIndexTemplate(\"\")\r\n        }\r\n    }\r\n\r\n    function handleAddCollection() {\r\n        if (createName === \"\") {\r\n            setCreateNameError(true)\r\n            return false\r\n        }\r\n        // if (createBaseId === \"\" || createBaseId.startsWith(\".\") || !/[a-z0-9]/g.test(createBaseId)) {\r\n        //     setCreateBaseIdError(true)\r\n        //     return false\r\n        // }\r\n        if (createBaseId.length > 1 && (!/^[a-z]+[a-z0-9-_]/g.test(createBaseId))) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        } else if (createBaseId.length === 1 && /[0-9]/g.test(createBaseId)) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        } else if (createBaseId.startsWith(\".\")) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        } else if (/[A-Z]/g.test(createBaseId)) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        } else if (/[ㄱ-ㅎ가-힣]/g.test(createBaseId)) {\r\n            setCreateBaseIdError(true)\r\n            return false\r\n        }\r\n\r\n        setProcess(true)\r\n        dispatch(addCollectionList({\r\n            name: createName,\r\n            baseId: createBaseId,\r\n            refresh_interval: 1,\r\n            replicas: 1,\r\n        })).then(response => {\r\n            toggleOpenAddModal()\r\n            setTimeout(() => {\r\n                dispatch(setCollectionList())\r\n                setTimeout(() => {\r\n                    dispatch(setCollectionList())\r\n                }, 500)\r\n            }, 500)\r\n            setProcess(false)\r\n        }).catch(error => {\r\n            setCreateBaseIdError(true)\r\n            setModalMessage(\"추가 실패.\")\r\n            console.log('error', error)\r\n            setProcess(false)\r\n        })\r\n    }\r\n\r\n    function checkCollectionName(event) {\r\n        setCreateNameError(false);\r\n        setCreateName(event.target.value);\r\n        if (event.target.value.length !== 0 && createBaseId.length !== 0 && createBaseIdError === false) {\r\n            setAddBtnDisabled(false)\r\n        } else {\r\n            setAddBtnDisabled(true)\r\n        }\r\n    }\r\n\r\n    function convertHumanReadableCount(docSize){\r\n        let size = docSize+\"\";\r\n        if(size.length <= 3) {\r\n            return size;\r\n        }\r\n        var count = Math.ceil(size.length / 3);\r\n\r\n        var newSize = [];\r\n        for(var i=0; i<count; i++) {\r\n            newSize.unshift(size.slice(-3*(i+1), size.length-(3*i)));\r\n        }\r\n        return newSize.join(',');\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Helmet title=\"컬렉션\"/>\r\n\r\n            <br/>\r\n\r\n            <Typography variant=\"h3\"\r\n                        gutterBottom\r\n                        display=\"inline\"\r\n            >\r\n                컬렉션\r\n            </Typography>\r\n\r\n            <Divider my={6}/>\r\n\r\n            <Box align={'right'}>\r\n                {authUser.role.index ? <Link className={classes.link}\r\n                      onClick={toggleOpenAddModal}\r\n                      color={\"primary\"}\r\n                >\r\n                    컬렉션 생성\r\n                </Link> : <></>}\r\n            </Box>\r\n\r\n            <br/>\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">#</TableCell>\r\n                            <TableCell align=\"center\">이름</TableCell>\r\n                            <TableCell align=\"center\">아이디</TableCell>\r\n                            <TableCell align=\"center\">선택 인덱스</TableCell>\r\n                            <TableCell align=\"center\">샤드</TableCell>\r\n                            <TableCell align=\"center\">문서 수</TableCell>\r\n                            <TableCell align=\"center\">용량</TableCell>\r\n                            <TableCell align=\"center\">자동시작</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            collectionList.sort((a, b) => {\r\n                                if(a['name'] > b['name']){\r\n                                    return 1;\r\n                                }else if(a['name'] < b['name']){\r\n                                    return -1;\r\n                                }else{\r\n                                    return 0;\r\n                                }\r\n                            }).map((collection, num) => {\r\n                                const id = collection['id']\r\n                                const name = collection['name']\r\n                                const baseId = collection['baseId']\r\n                                const indexA = collection['indexA']||{}\r\n                                const indexB = collection['indexB']||{}\r\n\r\n                                const indexAAlias = indexA['aliases'] && Object.keys(indexA['aliases']).find(alias => alias === baseId)\r\n                                const isActiveA = indexAAlias !== undefined && indexAAlias !== null\r\n\r\n                                const indexBAlias = indexB['aliases'] && Object.keys(indexB['aliases']).find(alias => alias === baseId)\r\n                                const isActiveB = indexBAlias !== undefined && indexBAlias !== null\r\n\r\n                                return (\r\n                                    <TableRow key={collection['id']}>\r\n                                        <TableCell align=\"center\">{num + 1}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Link className={classes.link} onClick={() => moveDetail(id)}>{name}</Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Link className={classes.link} onClick={() => moveDetail(id)}>{baseId}</Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Link style={{display: isActiveA ? \"block\" : \"none\"}}\r\n                                                  onClick={() => moveIndex(indexA['uuid'])}\r\n                                                  className={classes.link} >{indexA['index']}</Link>\r\n                                            <Link style={{display: isActiveB ? \"block\": \"none\"}}\r\n                                                  onClick={() => moveIndex(indexB['uuid'])}\r\n                                                  className={classes.link} >{indexB['index']}</Link>\r\n\r\n                                            <Box style={{display: isActiveA === false && isActiveB === false ? \"block\" : \"none\"}}> - </Box>\r\n\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Box style={{display: isActiveA ? \"block\" : \"none\"}}>\r\n                                                P[{indexA['pri']||'-'}] R[{indexA['rep']||'-'}]\r\n                                            </Box>\r\n                                            <Box style={{display: isActiveB ? \"block\" : \"none\"}}>\r\n                                                P[{indexB['pri']||'-'}] R[{indexB['rep']||'-'}]\r\n                                            </Box>\r\n                                            <Box style={{display: isActiveA === false && isActiveB === false ? \"block\" : \"none\"}}> - </Box>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Box style={{display: isActiveA ? \"block\" : \"none\"}}>\r\n                                                {convertHumanReadableCount(indexA['docsCount']||'-')}\r\n                                            </Box>\r\n                                            <Box style={{display: isActiveB ? \"block\" : \"none\"}}>\r\n                                                {convertHumanReadableCount(indexB['docsCount']||'-')}\r\n                                            </Box>\r\n                                            <Box style={{display: isActiveA === false && isActiveB === false ? \"block\" : \"none\"}}> - </Box>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Box style={{display: isActiveA ? \"block\" : \"none\"}}>\r\n                                                {indexA['storeSize']||'-'}\r\n                                            </Box>\r\n                                            <Box style={{display: isActiveB ? \"block\" : \"none\"}}>\r\n                                                {indexB['storeSize']||'-'}\r\n                                            </Box>\r\n                                            <Box style={{display: isActiveA === false && isActiveB === false ? \"block\" : \"none\"}}> - </Box>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Box>\r\n                                                {collection['scheduled']||'false'}\r\n                                            </Box>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            })\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n\r\n            <Dialog open={openAddModal}\r\n                    fullWidth\r\n                    onClose={toggleOpenAddModal}\r\n            >\r\n                <DialogTitle>\r\n                    컬렉션 추가\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container my={3}>\r\n                        <Grid item xs={4} mt={2}>\r\n                            컬렉션 이름\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <TextField fullWidth\r\n                                       autoFocus\r\n                                       value={createName}\r\n                                       onChange={checkCollectionName}\r\n                                       placeholder={\"상품컬렉션\"}\r\n                                       error={createNameError}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container my={3}>\r\n                        <Grid item xs={4} mt={2}>\r\n                            컬렉션 아이디\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <TextField fullWidth\r\n                                       value={createBaseId}\r\n                                       onChange={handleChangeBaseId}\r\n                                       placeholder={\"product-collection\"}\r\n                                       error={createBaseIdError}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container my={3}>\r\n                        <Grid item xs={4}>\r\n                            인덱스 템플릿\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            {applyIndexTemplate||\"\"}\r\n                            {/*<ul>*/}\r\n                            {/*    {*/}\r\n                            {/*        applyIndexTemplates.map((applyIndexTemplate, index) => {*/}\r\n                            {/*            return (*/}\r\n                            {/*                <li key={index}>*/}\r\n                            {/*                    {applyIndexTemplate}*/}\r\n                            {/*                </li>*/}\r\n                            {/*            )*/}\r\n                            {/*        })*/}\r\n                            {/*    }*/}\r\n                            {/*</ul>*/}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container my={3}>\r\n                        <Grid item xs={4}>\r\n                            인덱스 패턴\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            {createBaseId !== \"\" ? createBaseId + indexSuffixA + \", \" : \"\"}\r\n                            {createBaseId !== \"\" ? createBaseId + indexSuffixB : \"\"}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container my={3} style={{display: modalMessage ? \"none\" : \"block\", color: \"red\", textAlign: \"center\"}}>\r\n                        <Grid item xs={12}>\r\n                            {modalMessage}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleAddCollection}\r\n                            disabled={process || addBtnDisabled}\r\n                            variant={\"outlined\"}\r\n                            color={\"primary\"}\r\n                    >추가</Button>\r\n                    <Button onClick={toggleOpenAddModal}\r\n                            variant={\"outlined\"}\r\n                            color={\"default\"}\r\n                    >취소</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    ...store.collectionReducers, \r\n    ...store.indexTemplateReducers\r\n}))(Collection);\r\n","import Client from '~/Client'\r\nimport {SET_INDEX_TEMPLATES, SET_INDEX_TEMPLATE} from \"../constants\";\r\n\r\nconst client = new Client()\r\n\r\nexport const setIndexTemplatesAction = () => dispatch => client.call({\r\n    uri: '/elasticsearch/_cat/templates?format=json'\r\n}).then(response => dispatch({\r\n    type: SET_INDEX_TEMPLATES,\r\n    payload: response.data.filter(template => !template['name'].startsWith(\".\"))\r\n}))\r\n\r\n\r\nexport const addIndexTemplateAction = ({template, index_patterns, settings, mappings}) => dispatch => client.call({\r\n    uri: `/elasticsearch/_template/${template}`,\r\n    method: \"PUT\",\r\n    data: {\r\n        index_patterns,\r\n        settings,\r\n        mappings\r\n    }\r\n})\r\n\r\nexport const deleteIndexTemplateAction = ({template}) => dispatch => client.call({\r\n    uri: `/elasticsearch/_template/${template}`,\r\n    method: \"DELETE\",\r\n})\r\n\r\nexport const setIndexTemplateAction = ({ template }) => dispatch => client.call({\r\n    uri: `/elasticsearch/_template/${template}`\r\n}).then(response => dispatch({type: SET_INDEX_TEMPLATE, payload: response.data[template]}))","import {\r\n    SET_CAT_INDEX_TEMPLATE_LIST,\r\n    SET_COLLECTION,\r\n    SET_COLLECTION_INDEX_HISTORY_LIST,\r\n    SET_COLLECTION_INDEX_SUFFIX, SET_COLLECTION_JOB,\r\n    SET_COLLECTION_LIST\r\n} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setCollectionList = () => dispatch => client.call({\r\n    uri: \"/collections\"\r\n}).then(response => { console.log(response.data); dispatch({type: SET_COLLECTION_LIST, payload: response.data})} )\r\n\r\nexport const addCollectionList = (collection) => dispatch => client.call({\r\n    uri: `/collections`,\r\n    method: \"POST\",\r\n    data: collection\r\n})\r\n\r\nexport const setCollectionIndexSuffix = () => dispatch => client.call({\r\n    uri: \"/collections\",\r\n    params: {\r\n        action: \"indexSuffix\"\r\n    }\r\n}).then(response => dispatch({type: SET_COLLECTION_INDEX_SUFFIX, payload: response.data}))\r\n\r\nexport const setCollection = id => dispatch => client.call({\r\n    uri: `/collections/${id}`\r\n}).then(response => dispatch({type: SET_COLLECTION, payload: response.data}))\r\n\r\nexport const deleteCollectionAction = id => dispatch => client.call({\r\n    uri: `/collections/${id}`,\r\n    method: \"delete\"\r\n})\r\n\r\nexport const editCollectionSourceAction = (id, collection) => dispatch => client.call({\r\n    uri: `/collections/${id}`,\r\n    method: \"put\",\r\n    params: {action: \"source\"},\r\n    data: collection\r\n}).then(response => response.data)\r\n\r\nexport const editCollectionScheduleAction = (id, isSchedule) => dispatch => client.call({\r\n    uri: `/collections/${id}`,\r\n    method: \"put\",\r\n    params: {action: \"schedule\"},\r\n    data: {\r\n        scheduled: isSchedule\r\n    }\r\n}).then(response => response.data)\r\n\r\nexport const setIndexHistoryTypeList = ({ indexA, indexB, from, size, type }) => dispatch => client.call({\r\n    uri: `/elasticsearch/.dsearch_index_history/_search`,\r\n    method: \"post\",\r\n    params: {\r\n        pretty: true,\r\n        filter_path: \"hits\"\r\n    },\r\n    data: {\r\n        \"query\": {\r\n            \"bool\": {\r\n                \"should\": [\r\n                    // {\r\n                    //     \"term\": {\r\n                    //         \"index\": {\r\n                    //             \"value\": indexA\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    // {\r\n                    //     \"term\": {\r\n                    //         \"index\": {\r\n                    //             \"value\": indexB\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    // {\r\n                    //     \"term\": {\r\n                    //         \"index.keyword\": {\r\n                    //             \"value\": indexA\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    // {\r\n                    //     \"term\": {\r\n                    //         \"index.keyword\": {\r\n                    //             \"value\": indexB\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    {\r\n                        \"match\": {\r\n                            \"index\": indexA\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"index\": indexB\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"index.keyword\": indexA\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"index.keyword\": indexB\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"jobType.keyword\": type\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"jobType\": type\r\n                        }\r\n                    }\r\n                ],\r\n                \"minimum_should_match\": 2\r\n            }\r\n        },\r\n        \"sort\": [\r\n            {\r\n                \"startTime\": {\r\n                    \"order\": \"desc\"\r\n                },\r\n                \"_score\": {\r\n                    \"order\": \"desc\"\r\n                }\r\n            }\r\n        ],\r\n        \"from\": from,\r\n        \"size\": size\r\n    }\r\n}).then(response => dispatch({type: SET_COLLECTION_INDEX_HISTORY_LIST, payload: response.data}))\r\n\r\nexport const setIndexHistoryList = ({ indexA, indexB, from, size }) => dispatch => client.call({\r\n    uri: `/elasticsearch/.dsearch_index_history/_search`,\r\n    method: \"post\",\r\n    params: {\r\n        pretty: true,\r\n        filter_path: \"hits\"\r\n    },\r\n    data: {\r\n        \"query\": {\r\n            \"bool\": {\r\n                \"should\": [\r\n                    {\r\n                        \"term\": {\r\n                            \"index\": {\r\n                                \"value\": indexA\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"term\": {\r\n                            \"index\": {\r\n                                \"value\": indexB\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"term\": {\r\n                            \"index.keyword\": {\r\n                                \"value\": indexA\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"term\": {\r\n                            \"index.keyword\": {\r\n                                \"value\": indexB\r\n                            }\r\n                        }\r\n                    },\r\n                ],\r\n                \"minimum_should_match\": 1\r\n            }\r\n        },\r\n        \"sort\": [\r\n            {\r\n                \"startTime\": {\r\n                    \"order\": \"desc\"\r\n                },\r\n                \"_score\": {\r\n                    \"order\": \"desc\"\r\n                }\r\n            }\r\n        ],\r\n        \"from\": from,\r\n        \"size\": size\r\n    }\r\n}).then(response => dispatch({type: SET_COLLECTION_INDEX_HISTORY_LIST, payload: response.data}))\r\n\r\nexport const deleteIndexHistoryList = ({indexA, indexB, time}) => dispatch => client.call({\r\n    uri: `/elasticsearch/.dsearch_index_history/_delete_by_query`,\r\n    method: 'post',\r\n    data: {\r\n        \"query\": {\r\n            \"bool\": {\r\n                \"should\": [\r\n                    {\r\n                        \"match\": {\r\n                            \"index\": {\r\n                                \"query\": indexA,\r\n                                \"boost\": 1\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"match\": {\r\n                            \"index\": {\r\n                                \"query\": indexB,\r\n                                \"boost\": 1\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"minimum_should_match\": 1,\r\n                \"filter\": {\r\n                    \"range\": {\r\n                        \"startTime\": {\r\n                            \"lte\": time\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}).then(response => response.data)\r\n\r\nexport const setCatIndexTemplateList = () => dispatch => client.call({\r\n    uri: `/elasticsearch/_cat/templates?format=json`\r\n}).then(response => dispatch({type: SET_CAT_INDEX_TEMPLATE_LIST, payload: response.data}))\r\n\r\nexport const setCollectionJob = id => dispatch => client.call({\r\n    uri: `/collections/${id}/job`\r\n}).then(response => {\r\n    if (response.data) {\r\n        dispatch({ type: SET_COLLECTION_JOB, payload: response.data })\r\n    } else {\r\n        dispatch({ type: SET_COLLECTION_JOB, payload: {} })\r\n    }\r\n    return response.data\r\n})\r\n\r\nexport const editCollectionAction = (id, action) => dispatch => client.call({\r\n    uri: `/collections/${id}/action`,\r\n    method: 'PUT',\r\n    params: { action }\r\n}).then(response => {\r\n    return response.data\r\n})\r\n"],"sourceRoot":""}