{"version":3,"sources":["pages/indices/index/Detail.js","components/AntTabs/index.js","redux/actions/indicesActions.js","components/IndicesSelect/index.js"],"names":["useStyles","makeStyles","theme","Divider","styled","MuiDivider","spacing","StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","minWidth","MenuItem","tabs","label","component","Async","connect","store","indicesReducers","indexInfoList","settings","dispatch","useDispatch","location","useLocation","history","useHistory","useSelector","indices","index","React","useState","anchorEl","setAnchorEl","process","setProcess","openRemoveModal","setOpenRemoveModal","deleteIndex","setDeleteIndex","open","message","state","setState","useEffect","uuid","pathname","substring","lastIndexOf","searchIndex","find","obj","setIndexAction","setIndexStateAction","setIndexAliasesAction","setIndexInfoListAction","setIndexSettingsAction","setIndexMappingsAction","setIndexDocumentSourceListAction","from","size","columns","searchKeyword","handleClose","handleIndexAction","event","action","setIndexManagedAction","then","response","setTimeout","catch","error","Fragment","title","container","item","xs","variant","gutterBottom","display","align","color","aria-controls","aria-haspopup","style","onClick","currentTarget","id","keepMounted","Boolean","onClose","length","primary","backgroundColor","red","my","tabIndex","fullWidth","deleteIndexAction","push","key","Box","MuiBox","Tab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","opacity","fontWeightMedium","selected","disableRipple","AntTabs","onChange","value","indicatorColor","textColor","scrollButtons","map","tab","icon","role","hidden","aria-labelledby","client","Client","type","SET_INDEX","payload","setIndicesAction","call","uri","params","format","SET_INDICES","data","console","SET_INDEX_INFO_LIST","SET_INDEX_ALIASES","SET_INDEX_SETTINGS","SET_INDEX_MAPPINGS","SET_INDEX_STATE","editDynamicQueryAction","query","method","keyword","undefined","SET_INDEX_DOCUMENT_SOURCE_RESPONSE","editIndexDocumentSourceAction","body","addIndexDocumentSourceAction","deleteIndexDocumentSourceAction","analyzerDocumentSourceAction","analyzerDocument","formControl","enableSystem","classes","className","labelId","target","filter","startsWith","sort","i"],"mappings":"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","file":"static/js/52.b5f5cd97.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport Async from '~/components/Async';\r\nimport styled from \"styled-components\";\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Helmet from 'react-helmet';\r\nimport AntTabs from \"~/components/AntTabs\"\r\nimport IndicesSelect from \"~/components/IndicesSelect\";\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Button,\r\n    Divider as MuiDivider,\r\n    MenuList,\r\n    Select,\r\n    Typography,\r\n    CircularProgress, Snackbar\r\n} from \"@material-ui/core\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {\r\n    deleteIndexAction,\r\n    setIndexAction,\r\n    setIndexAliasesAction, setIndexDocumentSourceListAction,\r\n    setIndexInfoListAction, setIndexManagedAction,\r\n    setIndexMappingsAction,\r\n    setIndexSettingsAction,\r\n    setIndexStateAction\r\n} from \"../../../redux/actions/indicesActions\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {red} from \"@material-ui/core/colors\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        minWidth: \"150px\",\r\n        // '&:focus': {\r\n        //     backgroundColor: theme.palette.primary.main,\r\n        //     '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        //         color: theme.palette.common.white,\r\n        //     },\r\n        // },\r\n    },\r\n}))(MenuItem);\r\n\r\n\r\nconst tabs = [\r\n    {label: \"개요\", component: Async(() => import(\"./Summary\"))},\r\n    {label: \"매핑\", component: Async(() => import(\"./Mapping\"))},\r\n    {label: \"셋팅\", component: Async(() => import(\"./Setting\"))},\r\n    {label: \"통계\", component: Async(() => import(\"./Statistics\"))},\r\n    {label: \"데이터\", component: Async(() => import(\"./Data\"))},\r\n];\r\n\r\nfunction Index({indexInfoList, settings}) {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { indices, index } = useSelector(store => ({...store.indicesReducers}))\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [process, setProcess] = React.useState(false);\r\n    const [openRemoveModal, setOpenRemoveModal] = React.useState(false)\r\n    const [deleteIndex, setDeleteIndex] = React.useState('')\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n        message: \"\"\r\n    });\r\n    const { vertical, horizontal, open } = state;\r\n\r\n    const handleSnackbarClose = () => {\r\n        setState({ ...state, open: false });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const uuid = location.pathname.substring(location.pathname.lastIndexOf(\"/\") + 1)\r\n        const searchIndex = indices.find(obj => obj['uuid'] === uuid)\r\n        if (searchIndex) {\r\n            dispatch(setIndexAction(searchIndex['index']))\r\n        }\r\n    }, [indices])\r\n\r\n    useEffect(() => {\r\n        if (index) {\r\n            dispatch(setIndexStateAction(index))\r\n            dispatch(setIndexAliasesAction(index))\r\n            dispatch(setIndexInfoListAction(index))\r\n            dispatch(setIndexSettingsAction(index))\r\n            dispatch(setIndexMappingsAction(index))\r\n            dispatch(setIndexDocumentSourceListAction({index, from: 0, size: 500, columns: [], searchKeyword: ''}))\r\n        }\r\n    }, [index])\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleIndexAction = (event, action, index) => {\r\n        setProcess(true)\r\n        handleClose()\r\n\r\n        if ('delete' === action) {\r\n            setDeleteIndex(index)\r\n            setOpenRemoveModal(true);\r\n            // dispatch(deleteIndexAction(index))\r\n            //     .then(response => {\r\n            //         setProcess(false)\r\n            //         setState({ ...state, open: true, message: \"삭제되었습니다.\" })\r\n            //         history.push('../indices')\r\n            //     })\r\n            //     .catch(error => {\r\n            //         setProcess(false)\r\n            //         setState({ ...state, open: true, message: \"요청이 실패하였습니다.\" })\r\n            //     })\r\n        } else {\r\n            dispatch(setIndexManagedAction(action, index))\r\n                .then(response => {\r\n                    setTimeout(() => {\r\n                        dispatch(setIndexAliasesAction(index))\r\n                        dispatch(setIndexInfoListAction(index))\r\n                        dispatch(setIndexSettingsAction(index))\r\n                        dispatch(setIndexStateAction(index))\r\n                        setState({ ...state, open: true, message: \"적용되었습니다.\" })\r\n                        setProcess(false)\r\n                    }, 1000)\r\n                })\r\n                .catch(error => {\r\n                    setTimeout(() => {\r\n                        dispatch(setIndexAliasesAction(index))\r\n                        dispatch(setIndexInfoListAction(index))\r\n                        dispatch(setIndexSettingsAction(index))\r\n                        dispatch(setIndexStateAction(index))\r\n                        setState({ ...state, open: true, message: \"요청이 실패하였습니다.\" })\r\n                        setProcess(false)\r\n                    }, 1000)\r\n                })\r\n        }\r\n    }\r\n\r\n    function handleCancel(){\r\n        setProcess(false);\r\n        setOpenRemoveModal(false);\r\n    }\r\n\r\n    function handleDeleteIndex(event) {\r\n        \r\n        dispatch(deleteIndexAction(deleteIndex))\r\n            .then(response => {\r\n                setProcess(false)\r\n                setState({ ...state, open: true, message: \"삭제되었습니다.\" })\r\n                history.push('../indices')\r\n            })\r\n            .catch(error => {\r\n                setProcess(false)\r\n                setState({ ...state, open: true, message: \"요청이 실패하였습니다.\" })\r\n            })\r\n            setOpenRemoveModal(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Helmet title=\"인덱스\"/>\r\n\r\n            <IndicesSelect/>\r\n\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"h3\" gutterBottom display=\"inline\">인덱스</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Box align={\"right\"}>\r\n                        {\r\n                            process ?\r\n                                <CircularProgress color=\"secondary\"/>\r\n                                :\r\n                                <Button\r\n                                    aria-controls=\"customized-menu\"\r\n                                    aria-haspopup=\"true\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{minWidth: \"150px\"}}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    관리\r\n                                </Button>\r\n                        }\r\n                        <StyledMenu\r\n                            id=\"customized-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            {\r\n                                indexInfoList.length === 0 ?\r\n                                    null\r\n                                    :\r\n                                    <Box>\r\n                                        {\r\n                                            indexInfoList[0]['status'] === 'open' ?\r\n                                                <StyledMenuItem onClick={event => handleIndexAction(event, \"_close\", indexInfoList[0]['index'])}>\r\n                                                    <ListItemText primary=\"인덱스 닫기\" />\r\n                                                </StyledMenuItem>\r\n                                                :\r\n                                                <StyledMenuItem onClick={event => handleIndexAction(event, \"_open\", indexInfoList[0]['index'])}>\r\n                                                    <ListItemText primary=\"인덱스 열기\" />\r\n                                                </StyledMenuItem>\r\n                                        }\r\n                                        <StyledMenuItem onClick={event => handleIndexAction(event, \"_forcemerge\", indexInfoList[0]['index'])}>\r\n                                            <ListItemText primary=\"인덱스 강제 머징\" />\r\n                                        </StyledMenuItem>\r\n                                        <StyledMenuItem onClick={event => handleIndexAction(event, \"_refresh\", indexInfoList[0]['index'])}>\r\n                                            <ListItemText primary=\"인덱스 리프레쉬\" />\r\n                                        </StyledMenuItem>\r\n                                        <StyledMenuItem onClick={event => handleIndexAction(event, \"_flush\", indexInfoList[0]['index'])}>\r\n                                            <ListItemText primary=\"인덱스 플러시\" />\r\n                                        </StyledMenuItem>\r\n\r\n                                        {\r\n                                            ((settings['settings']||{})['index']||{})['frozen'] === 'true' ?\r\n                                                <StyledMenuItem onClick={event => handleIndexAction(event, \"_unfreeze\", indexInfoList[0]['index'])}>\r\n                                                    <ListItemText primary=\"인덱스 동결 해제\" />\r\n                                                </StyledMenuItem>\r\n                                                :\r\n                                                <StyledMenuItem onClick={event => handleIndexAction(event, \"_freeze\", indexInfoList[0]['index'])}>\r\n                                                    <ListItemText primary=\"인덱스 동결\" />\r\n                                                </StyledMenuItem>\r\n                                        }\r\n\r\n                                        <StyledMenuItem style={{backgroundColor: red[\"400\"]}}\r\n                                            onClick={event => handleIndexAction(event, \"delete\", indexInfoList[0]['index'])}>\r\n                                            <ListItemText primary=\"인덱스 삭제\" />\r\n                                        </StyledMenuItem>\r\n                                    </Box>\r\n                            }\r\n                        </StyledMenu>\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n\r\n\r\n            <Divider my={6} />\r\n\r\n            <AntTabs tabs={tabs} tabIndex={0} />\r\n\r\n\r\n            <Dialog open={openRemoveModal} fullWidth={true}>\r\n                <DialogTitle>인덱스 삭제</DialogTitle>\r\n                <DialogContent>\r\n                    <Box style={{color: red['500']}}> 선택하신 인덱스를 삭제 하시겠습니까? </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button style={{backgroundColor: red['200']}}\r\n                            variant=\"contained\"\r\n                            onClick={handleDeleteIndex}\r\n                    >\r\n                        삭제\r\n                    </Button>\r\n                    <Button onClick={() => handleCancel()}\r\n                            variant=\"contained\"\r\n                    >\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                color={\"info\"}\r\n                anchorOrigin={{  vertical: 'top', horizontal: 'right' }}\r\n                open={open}\r\n                onClose={handleSnackbarClose}\r\n                message={state['message']}\r\n                key={vertical + horizontal}\r\n            />\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({ ...store.indicesReducers }))(Index);\r\n","// React components\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// Material components\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Box as MuiBox, Divider as MuiDivider, Tab as AntTab, Tabs, Typography, Card, CardContent} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport {spacing} from \"@material-ui/system\";\r\n\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Box = styled(MuiBox)(spacing);\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//         width: '100%',\r\n//         backgroundColor: theme.palette.background.paper\r\n//     },\r\n//     indicator: {\r\n//         backgroundColor: '#1890ff',\r\n//     },\r\n// }));\r\n\r\nconst Tab = withStyles((theme) => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        minWidth: 72,\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        marginRight: theme.spacing(2),\r\n        '&:hover': {\r\n            color: '#40a9ff',\r\n            opacity: 1,\r\n        },\r\n        '&$selected': {\r\n            color: '#1890ff',\r\n            fontWeight: theme.typography.fontWeightMedium,\r\n        },\r\n        '&:focus': {\r\n            color: '#40a9ff',\r\n        },\r\n    },\r\n    selected: {},\r\n}), {index: 1})((props) => <AntTab disableRipple {...props} />);\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const {key, children, value, index} = props;\r\n    return (\r\n        <Typography\r\n            key={key}\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        >\r\n            {value === index && <Box >\r\n                <children key={key} />\r\n            </Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    key: PropTypes.any,\r\n    children: PropTypes.node,\r\n    index: PropTypes.any,\r\n    value: PropTypes.any,\r\n};\r\n\r\n\r\nfunction AntTabs({tabs, tabIndex = 0, onChange}) {\r\n    const [state, setState] = React.useState({tabIndex: tabIndex});\r\n    const handleChange = (event, tabIndex) => {\r\n        setState({\r\n            tabIndex: tabIndex\r\n        })\r\n        if (typeof onChange === 'function') {\r\n            onChange(tabIndex)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tabs value={state.tabIndex}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n            >\r\n                {tabs.map((tab, index) => <Tab key={index} id={index} icon={tab.icon} label={tab.label || \"\"}/>)}\r\n            </Tabs>\r\n            <Divider />\r\n            {tabs.map((Tab, index) => {\r\n                return (\r\n                    <Box key={index}\r\n                          role=\"tabpanel\"\r\n                          hidden={state.tabIndex !== index}\r\n                          id={`scrollable-auto-tabpanel-${index}`}\r\n                          aria-labelledby={`scrollable-auto-tab-${index}`}>\r\n                        {index === state.tabIndex && Tab.component && <Box> <Tab.component tabs={Tab}/> </Box>}\r\n                    </Box>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AntTabs;","import Client from '~/Client'\r\nimport {\r\n    SET_INDEX,\r\n    SET_INDEX_ALIASES, SET_INDEX_DOCUMENT_SOURCE_RESPONSE,\r\n    SET_INDEX_DOCUMENTS,\r\n    SET_INDEX_INFO_LIST,\r\n    SET_INDEX_MAPPINGS,\r\n    SET_INDEX_SETTINGS,\r\n    SET_INDEX_STATE,\r\n    SET_INDICES\r\n} from \"../constants\";\r\n\r\n\r\nconst client = new Client()\r\n\r\n\r\nexport const setIndexAction = (index) => dispatch => dispatch({type: SET_INDEX, payload: index})\r\n\r\nexport const setIndicesAction = () => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/_cat/indices`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDICES, payload: response.data}))\r\n        .catch(error => console.error(error))\r\n\r\n\r\nexport const setIndexInfoListAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/_cat/indices/${index}`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_INFO_LIST, payload: response.data}))\r\n        .catch(error => console.error(error))\r\n\r\n\r\nexport const setIndexAliasesAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/${index}/_alias`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_ALIASES, payload: (response.data[index] || {})['aliases']}))\r\n        .catch(error => console.error(error))\r\n\r\nexport const setIndexSettingsAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/${index}/_settings?include_defaults`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_SETTINGS, payload: response.data[index]||{}}))\r\n        .catch(error => console.error(error))\r\n\r\nexport const setIndexMappingsAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/${index}/_mappings`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_MAPPINGS, payload: ((response.data[index] || {})['mappings']||{}) }))\r\n        .catch(error => console.error(error))\r\n    // dispatch({type: SET_INDEX_MAPPINGS, payload: ((response.data[index] || {})['mappings']||{})['properties'] })\r\n\r\nexport const setIndexStateAction = (index) => dispatch =>\r\n    client.call({\r\n        uri: `/elasticsearch/${index}/_stats`,\r\n        params: {\r\n            format: \"json\",\r\n        }\r\n    })\r\n        .then(response => dispatch({type: SET_INDEX_STATE, payload: response.data }))\r\n        .catch(error => console.error(error))\r\n\r\nexport const editDynamicQueryAction = (index, query) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_settings`,\r\n    method: \"PUT\",\r\n    data: query\r\n})\r\n\r\n\r\nexport const setIndexDocumentsAction = ({index, pageNum, rowSize, id, analysis}) => dispatch => client.call({\r\n    uri: `/indices/${index}/_docs`,\r\n    params: {\r\n        index,\r\n        pageNum,\r\n        rowSize,\r\n        id,\r\n        analysis\r\n    }\r\n}).then(response => dispatch({\r\n    type: SET_INDEX_DOCUMENTS,\r\n    payload: response.data,\r\n})).catch(err => console.error(err))\r\n\r\n\r\nexport const setIndexDocumentSourceListAction = ({index, from, size, id, columns=[], keyword = null}) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_search`,\r\n    method: 'post',\r\n    data: id !== undefined && id !== null && id !== \"\" ?\r\n        { \"query\": { \"match\": { \"_id\": id } }, from, size, \"sort\": [{ \"_id\": { \"order\": \"desc\" } }] }\r\n        :\r\n        keyword !== undefined && keyword !== null && keyword !== \"\"?\r\n            { \"query\": {\r\n                // \"bool\": {\r\n                //     \"minimum_should_match\": 1,\r\n                //     \"should\": (columns.map(c =>  ({ \"match\": { [c]: keyword } }))  ) }\r\n                    \"multi_match\" : {\r\n                        \"query\":    keyword,\r\n                        \"fields\": columns,\r\n                        \"operator\": \"or\"\r\n                    }},\r\n                from,\r\n                size,\r\n                \"sort\": [{ \"_score\": { \"order\": \"desc\" } }, { \"_id\": { \"order\": \"desc\" } }] }\r\n            :\r\n            { from, size, \"sort\": [ { \"_score\": { \"order\": \"desc\" } }, { \"_id\": { \"order\": \"desc\" } }] }\r\n}).then(response => {\r\n    dispatch({ type: SET_INDEX_DOCUMENT_SOURCE_RESPONSE, payload: response.data })\r\n    return response.data;\r\n})\r\n\r\nexport const editIndexDocumentSourceAction = ({index, id, body}) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_doc/${id}`,\r\n    method: 'put',\r\n    data: body\r\n}).then(response => response.data)\r\n\r\nexport const addIndexDocumentSourceAction = ({index, body}) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_doc`,\r\n    method: 'post',\r\n    data: body\r\n}).then(response => response.data)\r\n\r\nexport const deleteIndexDocumentSourceAction = ({index, id}) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/_doc/${id}`,\r\n    method: 'DELETE',\r\n}).then(response => response.data)\r\n\r\nexport const analyzerDocumentSourceAction = (index, analyzerDocument) => dispatch => client.call({\r\n    uri: `/indices/${index}/analyzer`,\r\n    method: \"post\",\r\n    data: analyzerDocument\r\n}).then(response => response.data)\r\n\r\n\r\nexport const setIndexManagedAction = (action, index) => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}/${action}`,\r\n    method: \"post\"\r\n}).then(response => response.data)\r\n\r\nexport const deleteIndexAction = index => dispatch => client.call({\r\n    uri: `/elasticsearch/${index}`,\r\n    method: \"delete\"\r\n}).then(response => response.data)","import React, { useEffect } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Box, FormControl, InputLabel, MenuItem, Select, Checkbox} from \"@material-ui/core\";\r\nimport {setIndexAction, setIndicesAction} from \"../../redux/actions/indicesActions\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 100\r\n    }\r\n}));\r\n\r\nfunction IndicesSelect({dispatch, indices, index, enableSystem=true}) {\r\n    const classes = useStyles()\r\n    const handleChange = (event) => {\r\n        dispatch(setIndexAction(event.target.value))\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setIndicesAction())\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">인덱스</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={index}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {\r\n                            indices.filter(index => !enableSystem ? !index['index'].startsWith(\".\") : true ).map(index => index['index']).sort()\r\n                                .map((index, i) => (<MenuItem key={i} value={index}>{index}</MenuItem>))\r\n                            // indices.filter(index => !enableSystem ? !index['index'].startsWith(\".\") : true )\r\n                            //     .map((index, i) => (<MenuItem key={i} value={index['index']}>{index['index']}</MenuItem>))\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                {/*<Checkbox*/}\r\n                {/*    defaultChecked*/}\r\n                {/*    color=\"default\"*/}\r\n                {/*    inputProps={{ 'aria-label': 'checkbox with default color' }}*/}\r\n                {/*/>*/}\r\n            </Box>\r\n            <br/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    ...store.indicesReducers,\r\n}))(IndicesSelect);\r\n"],"sourceRoot":""}